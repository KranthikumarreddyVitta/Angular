{"version":3,"sources":["./projects/order/src/lib/order.routing.ts","./projects/quote/src/public-api.ts","./projects/order/src/lib/components/order-list/order-list.service.ts","./projects/order/src/lib/components/order/order-detail.service.ts","./projects/order/src/lib/components/order-list/order-list.component.ts","./projects/order/src/lib/components/order-list/order-list.component.html","./projects/order/src/lib/order.module.ts","./projects/order/src/lib/components/order/order.component.ts","./projects/order/src/lib/components/order/order.component.html"],"names":[],"mappings":"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","file":"order-src-lib-order-module.js","sourcesContent":["import { Routes } from \"@angular/router\";\r\nimport { OrderListComponent } from \"./components/order-list/order-list.component\";\r\nimport { OrderComponent } from \"./components/order/order.component\";\r\n\r\nexport const orderRouting : Routes = [{\r\n    path:'',\r\n    component:OrderListComponent\r\n},{\r\n    path:':id',\r\n    component: OrderComponent\r\n}]","/*\r\n * Public API Surface of quote\r\n */\r\n\r\nexport * from './lib/quote.service';\r\nexport * from './lib/common/components/quote-header/quote-header.component';\r\nexport * from './lib/common/components/total-cell-renderer/total-cell-renderer.component';\r\nexport * from './lib/common/components/item-type/item-type.component';\r\nexport * from './lib/quote.module';\r\nexport * from './lib/common/quote-common.module';\r\nexport * from './lib/common/components/quote-create-form/quote-create-form.component';\r\nexport * from './lib/common/components/addproduct/addproduct.component';\r\n","import { Injectable } from '@angular/core';\r\nimport { EnvironmentService } from 'projects/core/src/lib/services/environment.service';\r\nimport { HttpService } from 'projects/core/src/public-api';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class OrderListService {\r\n  constructor(private _http: HttpService, private _env: EnvironmentService) {}\r\n\r\n  /**\r\n   * Get Order list \r\n   * @param userId \r\n   * @param sourceType \r\n   * @param type \r\n   * @returns \r\n   */\r\n  getOrderList<T>(\r\n    userId: number,\r\n    sourceType: 'all' | 'my' = 'all',\r\n    type: 'orders' = 'orders'\r\n  ): Observable<T> {\r\n    let url =\r\n      'load/customer/quotes?' +\r\n      'user_id=' +\r\n      userId +\r\n      '&source_type=' +\r\n      sourceType +\r\n      '&type=' +\r\n      type;\r\n    return this._http\r\n      .sendGETRequest(this._env.getEndPoint() + url)\r\n      .pipe(map((data: any) => data.quote));\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpService } from 'projects/core/src/public-api';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class OrderDetailService {\r\n  constructor(private _http: HttpService) {}\r\n\r\n  getOrderSummary<T>(orderId:number): Observable<T> {\r\n    return this._http.sendGETRequest(''+orderId);\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { GridOptions, GridReadyEvent } from 'ag-grid-community';\r\nimport { Observable } from 'rxjs';\r\nimport { OrderListService } from './order-list.service';\r\n\r\ntype OrderSourceType = 'all' | 'my';\r\n\r\n@Component({\r\n  selector: 'lib-order-list',\r\n  templateUrl: './order-list.component.html',\r\n  styleUrls: ['./order-list.component.scss'],\r\n})\r\nexport class OrderListComponent implements OnInit {\r\n  orderInfo = {\r\n    bannerIconImg: 'assets/dashboard/images/order.svg',\r\n    bannerIconImgTxt: 'Order Icon',\r\n    bannerImg: 'assets/quote/images/quote_banner.jpg',\r\n    bannerImgTxt: 'Order Banner Image',\r\n    bannerBottomTxt:\r\n      'Style & create a look from our collection of designer furniture',\r\n    text: 'Order',\r\n  };\r\n\r\n  selectedButton: OrderSourceType = 'all';\r\n  columnDefs = [\r\n    { field: 'sgid', headerName: 'Quote Number' },\r\n    { field: 'name', headerName: 'Customer name' },\r\n    { field: 'company_name', headerName: 'Company Name' },\r\n    { field: 'project_name', headerName: 'Project Name' },\r\n    {\r\n      field: 'created_at',\r\n      headerName: 'Quote Created Date',\r\n      filter: 'agDateColumnFilter',\r\n    },\r\n    { field: 'order_status', headerName: 'Order Status' },\r\n  ];\r\n\r\n  rowData: Observable<any[]> = new Observable();\r\n  gridOptions: GridOptions = {\r\n    onRowClicked: (param) => this.onRowClicked(param),\r\n    rowHeight: 50,\r\n    onGridReady: (api: GridReadyEvent) => this.onGridReady(api),\r\n  };\r\n\r\n  constructor(\r\n    private _orderListService: OrderListService,\r\n    private _router: Router\r\n  ) {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  /**\r\n   * On row Click\r\n   * @param param \r\n   */\r\n  onRowClicked(param: any) {\r\n    let orderId = param?.data?.sgid;\r\n    if (orderId) {\r\n      this._router.navigate(['order', orderId]);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * On grid ready\r\n   * @param api \r\n   */\r\n  onGridReady(api: GridReadyEvent) {\r\n    api.api.sizeColumnsToFit();\r\n    this.getOrderList('all');\r\n  }\r\n\r\n  /**\r\n   * get Order List\r\n   * @param sourceType \r\n   */\r\n  getOrderList(sourceType: OrderSourceType) {\r\n    this.selectedButton = sourceType;\r\n    this.rowData = this._orderListService.getOrderList(98, sourceType);\r\n  }\r\n}\r\n","<div class=\"orders\" fxLayout=\"column\" fxLayoutAlign=\" stretch\">\r\n  <app-banner\r\n    [iconSrc]=\"orderInfo.bannerIconImg\"\r\n    [iconAltTxt]=\"orderInfo.bannerIconImgTxt\"\r\n    [leftTxt]=\"orderInfo.text\"\r\n    [src]=\"orderInfo.bannerImg\"\r\n    [altTxt]=\"orderInfo.bannerImgTxt\"\r\n    [bottomTxt]=\"orderInfo.bannerBottomTxt\"\r\n  >\r\n    <!-- <div class=\"banner-footer\" footer>\r\n      Style & create a look from our collection of designer furniture\r\n    </div> -->\r\n  </app-banner>\r\n  <div\r\n    class=\"orders-filter\"\r\n    fxLayout=\"row\"\r\n    fxLayoutAlign=\"center center\"\r\n    fxLayoutGap=\"2rem\"\r\n  >\r\n    <button\r\n      mat-flat-button\r\n      [style.background]=\"selectedButton==='my'?'#F3F3F3':''\"\r\n      [color]=\"selectedButton === 'all' ? 'accent' : ''\"\r\n      (click)=\"getOrderList('all')\"\r\n    >\r\n      ALL ORDERS\r\n    </button>\r\n    <button\r\n    [style.background]=\"selectedButton==='all'?'#F3F3F3':''\"\r\n      mat-flat-button\r\n      [color]=\"selectedButton === 'my' ? 'accent' : ''\"\r\n      (click)=\"getOrderList('my')\"\r\n    >\r\n      MY ORDERS\r\n    </button>\r\n  </div>\r\n  <ag-grid-angular\r\n    style=\"height: 500px\"\r\n    [gridOptions]=\"gridOptions\"\r\n    class=\"ag-theme-alpine orders-table\"\r\n    [rowData]=\"rowData | async\"\r\n    [columnDefs]=\"columnDefs\"\r\n  >\r\n  </ag-grid-angular>\r\n</div>\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { RouterModule } from '@angular/router';\r\nimport { OrderComponent } from './components/order/order.component';\r\nimport { orderRouting } from './order.routing';\r\nimport { OrderListComponent } from './components/order-list/order-list.component';\r\nimport { CoreModule } from 'projects/core/src/public-api';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { QuoteCommonModule } from 'projects/quote/src/public-api';\r\nimport { AgGridModule } from 'ag-grid-angular';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    OrderComponent,\r\n    OrderListComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FlexLayoutModule,\r\n    MatButtonModule,\r\n    QuoteCommonModule,\r\n    CoreModule,\r\n    AgGridModule,\r\n    RouterModule.forChild(orderRouting)\r\n  ],\r\n  exports: [\r\n    OrderComponent,\r\n  ]\r\n})\r\nexport class OrderModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Params, Router } from '@angular/router';\r\nimport { OrderDetailService } from './order-detail.service';\r\n@Component({\r\n  selector: 'lib-order',\r\n  templateUrl: './order.component.html',\r\n  styleUrls: ['./order.component.scss']\r\n})\r\nexport class OrderComponent implements OnInit {\r\n\r\n orderId: number =0;\r\n  constructor(private _route :ActivatedRoute, private _orderDetailService : OrderDetailService) { }\r\n\r\n  ngOnInit(): void {\r\n    this._route.params.subscribe((params: Params) => {\r\n      this.orderId = params.id;\r\n    });\r\n  }\r\n\r\n}\r\n","<lib-quote-header\r\n  [quoteId]=\"orderId\"\r\n  [iconPath]=\"'assets/order/images/order-icon.png'\"\r\n  [text]=\"'ORDER'\"\r\n>\r\n</lib-quote-header>\r\n"],"sourceRoot":"webpack:///"}