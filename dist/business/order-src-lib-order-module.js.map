{"version":3,"sources":["./projects/order/src/lib/components/order-details/order-detail.service.ts","./projects/order/src/lib/order.routing.ts","./projects/quote/src/public-api.ts","./projects/order/src/lib/components/order-list/order-list.service.ts","./projects/order/src/lib/components/order-details/order-details.component.ts","./projects/order/src/lib/components/order-details/order-details.component.html","./projects/order/src/lib/components/order-list/order-list.component.ts","./projects/order/src/lib/components/order-list/order-list.component.html","./projects/order/src/lib/order.module.ts","./projects/order/src/lib/components/order/order.component.ts","./projects/order/src/lib/components/order/order.component.html"],"names":[],"mappings":"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","file":"order-src-lib-order-module.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpService } from 'projects/core/src/public-api';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OrderDetailService {\n  constructor(private _http: HttpService) {}\n\n  getOrderSummary<T>(orderId:number): Observable<T> {\n    return this._http.sendGETRequest(''+orderId);\n  }\n}\n","import { Routes } from '@angular/router';\nimport { FloorPlanDetailsComponent } from 'projects/quote/src/lib/common/components/floor-plan-details/floor-plan-details.component';\nimport { FloorPlanUnitComponent } from 'projects/quote/src/lib/components/floor-plan-unit/floor-plan-unit.component';\nimport { OrderDetailsComponent } from './components/order-details/order-details.component';\nimport { OrderListComponent } from './components/order-list/order-list.component';\nimport { OrderComponent } from './components/order/order.component';\n\nexport const orderRouting: Routes = [\n  {\n    path: '',\n    component: OrderComponent,\n    children: [\n      {\n        path: '',\n        component: OrderListComponent,\n      },\n      {\n        path: ':id',\n        component: OrderDetailsComponent,\n      },\n      {\n        path: ':id/:fpId',\n        component: FloorPlanDetailsComponent,\n      }, {\n        path: ':id/floor-plan-unit/:fpId/unit/:unit_id',\n        component: FloorPlanUnitComponent,\n      }\n    ],\n  },\n];\n","/*\n * Public API Surface of quote\n */\n\nexport * from './lib/quote.service';\nexport * from './lib/common/components/quote-header/quote-header.component';\nexport * from './lib/common/components/total-cell-renderer/total-cell-renderer.component';\nexport * from './lib/common/components/item-type/item-type.component';\nexport * from './lib/quote.module';\nexport * from './lib/common/quote-common.module';\nexport * from './lib/common/components/quote-create-form/quote-create-form.component';\nexport * from './lib/common/components/addproduct/addproduct.component';\n","import { Injectable } from '@angular/core';\nimport { EnvironmentService } from 'projects/core/src/lib/services/environment.service';\nimport { HttpService } from 'projects/core/src/public-api';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OrderListService {\n  constructor(private _http: HttpService, private _env: EnvironmentService) {}\n\n  /**\n   * Get Order list \n   * @param userId \n   * @param sourceType \n   * @param type \n   * @returns \n   */\n  getOrderList<T>(\n    userId: number,\n    sourceType: 'all' | 'my' = 'all',\n    type: 'orders' = 'orders'\n  ): Observable<T> {\n    let url =\n      'load/customer/quotes?' +\n      'user_id=' +\n      userId +\n      '&source_type=' +\n      sourceType +\n      '&type=' +\n      type;\n    return this._http\n      .sendGETRequest(this._env.getEndPoint() + url)\n      .pipe(map((data: any) => data.quote));\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params } from '@angular/router';\nimport { OrderDetailService } from './order-detail.service';\n\n@Component({\n  selector: 'lib-order-details',\n  templateUrl: './order-details.component.html',\n  styleUrls: ['./order-details.component.scss'],\n})\nexport class OrderDetailsComponent implements OnInit {\n  orderId: number = 0;\n  constructor(\n    private _route: ActivatedRoute,\n    private _orderDetailService: OrderDetailService\n  ) {}\n\n  ngOnInit(): void {\n    this._route.params.subscribe((params: Params) => {\n      this.orderId = params.id;\n    });\n  }\n}\n","<lib-quote-header\n  [quoteId]=\"orderId\"\n  [iconPath]=\"'assets/order/images/order-icon.png'\"\n  [text]=\"'ORDER'\"\n>\n</lib-quote-header>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { GridOptions, GridReadyEvent, ICellRendererParams } from 'ag-grid-community';\nimport { UserService } from 'projects/core/src/public-api';\nimport { Observable } from 'rxjs';\nimport { OrderListService } from './order-list.service';\n\ntype OrderSourceType = 'all' | 'my';\n\n@Component({\n  selector: 'lib-order-list',\n  templateUrl: './order-list.component.html',\n  styleUrls: ['./order-list.component.scss'],\n})\nexport class OrderListComponent implements OnInit {\n  orderInfo = {\n    bannerIconImg: 'assets/dashboard/images/order.svg',\n    bannerIconImgTxt: 'Order Icon',\n    bannerImg: 'assets/order/images/order-page.jpg',\n    bannerImgTxt: 'Order Banner Image',\n    bannerBottomTxt:\n      'Style & create a look from our collection of designer furniture',\n    text: 'Order',\n  };\n\n  selectedButton: OrderSourceType = 'all';\n  columnDefs = [\n    { field: 'sgid', headerName: 'Quote Number' },\n    { field: 'name', headerName: 'Customer name' },\n    { field: 'company_name', headerName: 'Company Name' },\n    { field: 'project_name', headerName: 'Project Name' },\n    {\n      field: 'created_at',\n      headerName: 'Quote Created Date',\n      valueFormatter : (params:ICellRendererParams)=>{\n        return params?.data?.created_at?.split(' ')[0];\n      }\n    },\n    { field: 'order_status', headerName: 'Order Status' },\n  ];\n\n  rowData: Observable<any[]> = new Observable();\n  gridOptions: GridOptions = {\n    onRowClicked: (param) => this.onRowClicked(param),\n    rowHeight: 50,\n    onGridReady: (api: GridReadyEvent) => this.onGridReady(api),\n  };\n\n  constructor(\n    private _orderListService: OrderListService,\n    private _router: Router,\n    private _user:UserService\n  ) {}\n\n  ngOnInit(): void {}\n\n  /**\n   * On row Click\n   * @param param \n   */\n  onRowClicked(param: any) {\n    let orderId = param?.data?.sgid;\n    if (orderId) {\n      this._router.navigate(['order', orderId]);\n    }\n  }\n\n  /**\n   * On grid ready\n   * @param api \n   */\n  onGridReady(api: GridReadyEvent) {\n    api.api.sizeColumnsToFit();\n    this.getOrderList('all');\n  }\n\n  /**\n   * get Order List\n   * @param sourceType \n   */\n  getOrderList(sourceType: OrderSourceType) {\n    this.selectedButton = sourceType;\n    const id = this._user.getUser().getId()\n    this.rowData = this._orderListService.getOrderList(id , sourceType);\n  }\n}\n","<div class=\"orders\" fxLayout=\"column\" fxLayoutAlign=\" stretch\">\n  <app-banner\n    [iconSrc]=\"orderInfo.bannerIconImg\"\n    [iconAltTxt]=\"orderInfo.bannerIconImgTxt\"\n    [leftTxt]=\"orderInfo.text\"\n    [src]=\"orderInfo.bannerImg\"\n    [altTxt]=\"orderInfo.bannerImgTxt\"\n    [bottomTxt]=\"orderInfo.bannerBottomTxt\"\n  >\n    <!-- <div class=\"banner-footer\" footer>\n      Style & create a look from our collection of designer furniture\n    </div> -->\n  </app-banner>\n  <div\n    class=\"orders-filter\"\n    fxLayout=\"row\"\n    fxLayoutAlign=\"center center\"\n    fxLayoutGap=\"2rem\"\n  >\n    <button\n      mat-flat-button\n      [style.background]=\"selectedButton==='my'?'#F3F3F3':''\"\n      [color]=\"selectedButton === 'all' ? 'accent' : ''\"\n      (click)=\"getOrderList('all')\"\n    >\n      ALL ORDERS\n    </button>\n    <button\n    [style.background]=\"selectedButton==='all'?'#F3F3F3':''\"\n      mat-flat-button\n      [color]=\"selectedButton === 'my' ? 'accent' : ''\"\n      (click)=\"getOrderList('my')\"\n    >\n      MY ORDERS\n    </button>\n  </div>\n  <ag-grid-angular\n    style=\"height: 500px\"\n    [gridOptions]=\"gridOptions\"\n    class=\"ag-theme-alpine orders-table\"\n    [rowData]=\"rowData | async\"\n    [columnDefs]=\"columnDefs\"\n  >\n  </ag-grid-angular>\n</div>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { RouterModule } from '@angular/router';\nimport { OrderComponent } from './components/order/order.component';\nimport { orderRouting } from './order.routing';\nimport { OrderListComponent } from './components/order-list/order-list.component';\nimport { CoreModule } from 'projects/core/src/public-api';\nimport { MatButtonModule } from '@angular/material/button';\nimport { QuoteCommonModule } from 'projects/quote/src/public-api';\nimport { AgGridModule } from 'ag-grid-angular';\nimport { OrderDetailsComponent } from './components/order-details/order-details.component';\n\n\n\n@NgModule({\n  declarations: [\n    OrderComponent,\n    OrderListComponent,\n    OrderDetailsComponent\n  ],\n  imports: [\n    CommonModule,\n    FlexLayoutModule,\n    MatButtonModule,\n    QuoteCommonModule,\n    CoreModule,\n    AgGridModule,\n    RouterModule.forChild(orderRouting)\n  ],\n  exports: [\n    OrderComponent,\n  ]\n})\nexport class OrderModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { OrderDetailService } from '../order-details/order-detail.service';\n@Component({\n  selector: 'lib-order',\n  templateUrl: './order.component.html',\n  styleUrls: ['./order.component.scss']\n})\nexport class OrderComponent implements OnInit {\n\n orderId: number =0;\n  constructor(private _route :ActivatedRoute, private _orderDetailService : OrderDetailService) { }\n\n  ngOnInit(): void {\n    this._route.params.subscribe((params: Params) => {\n      this.orderId = params.id;\n    });\n  }\n\n}\n","<router-outlet></router-outlet>\n"],"sourceRoot":"webpack:///"}