{"version":3,"sources":["./node_modules/@angular/material/__ivy_ngcc__/fesm2015/slider.js","./projects/shop/src/lib/components/shop-home/shop-home.component.ts","./projects/shop/src/lib/components/shop-home/shop-home.component.html","./projects/quote/src/public-api.ts","./projects/shop/src/lib/common/shop-common.module.ts","./projects/shop/src/lib/common/shop/shop.component.ts","./projects/shop/src/lib/common/shop/shop.component.html","./projects/shop/src/lib/shop.routing.ts","./projects/moodboard/src/lib/components/create-moodboard-popup/create-moodboard-popup.component.ts","./projects/moodboard/src/lib/components/create-moodboard-popup/create-moodboard-popup.component.html","./projects/shop/src/lib/shop.module.ts","./projects/shop/src/lib/components/zero-zero-seven/zero-zero-seven.component.html","./projects/shop/src/lib/components/zero-zero-seven/zero-zero-seven.component.ts","./node_modules/ngx-infinite-scroll/__ivy_ngcc__/modules/ngx-infinite-scroll.js","./node_modules/@angular/material/__ivy_ngcc__/fesm2015/button-toggle.js","./projects/shop/src/lib/common/product-details/product-details.component.ts","./projects/shop/src/lib/common/product-details/product-details.component.html","./projects/shop/src/lib/service/shop.service.ts","./projects/moodboard/src/lib/services/moodboard.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyD;AAC+J;AACrH;AAClD;AACE;AACiC;AACiD;AAClF;AAC0B;AACL;AACpC;;AAEpC;AACA;AACA;AACA;AACA;AACA;AACA;AACwC;AACI;AACA;AACF;;AAE1C;AACA,2BAA2B,6FAA+B,EAAE,iBAAiB;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,gEAAiB;AAC9B,iBAAiB,gEAAU;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,4EAAa,CAAC,yEAAU,CAAC,4EAAa;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,0DAAY;AACtC;AACA,yBAAyB,0DAAY;AACrC;AACA;AACA;AACA;AACA;AACA,+BAA+B,0DAAY;AAC3C;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD;AACpD;AACA,sCAAsC,kDAAY;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,kBAAkB,qBAAqB;AACvC;AACA,uBAAuB,mFAAqB;AAC5C;AACA;AACA,eAAe,kBAAkB;AACjC;AACA,oBAAoB,kFAAoB;AACxC;AACA;AACA;AACA;AACA;AACA,eAAe,kBAAkB;AACjC;AACA,oBAAoB,kFAAoB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,mBAAmB;AACnC;AACA,qBAAqB,kFAAoB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,yBAAyB;AAC/C,2BAA2B,oBAAoB,mFAAqB,QAAQ;AAC5E;AACA;AACA;AACA;AACA,wBAAwB,2BAA2B;AACnD;AACA;AACA;AACA;AACA;AACA,iCAAiC,kFAAoB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,kFAAoB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA,yBAAyB,mFAAqB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,mCAAmC;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,iBAAiB,UAAU,iBAAiB;AACxF;AACA;AACA;AACA,mCAAmC,KAAK,GAAG,KAAK,EAAE,oBAAoB,cAAc,MAAM;AAC1F;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,QAAQ,UAAU,QAAQ;AACtE;AACA;AACA;AACA,mCAAmC,KAAK,GAAG,KAAK,EAAE,oBAAoB,cAAc,MAAM;AAC1F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,KAAK,GAAG,KAAK,EAAE,OAAO;AAC3D;AACA;AACA;AACA;AACA;AACA,oDAAoD,SAAS,QAAQ,SAAS;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,KAAK,GAAG,KAAK,EAAE,aAAa,IAAI,OAAO;AAC1F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,KAAK,QAAQ,oBAAoB;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,KAAK,IAAI,OAAO;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,4EAAc;AAC3C;AACA;AACA;AACA;AACA,iBAAiB,6DAAO;AACxB;AACA;AACA,iBAAiB,+DAAS;AAC1B;AACA;AACA,iBAAiB,yDAAG;AACpB;AACA;AACA,iBAAiB,0DAAI;AACrB;AACA;AACA,iBAAiB,gEAAU;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,8DAAQ;AACzB;AACA;AACA,iBAAiB,iEAAW;AAC5B;AACA;AACA;AACA,iBAAiB,ggDAAgD,6BAA6B,+DAAwB,CAAC,wDAAiB,GAAG,+DAAwB,CAAC,8DAAmB,GAAG,+DAAwB,CAAC,+DAAwB,GAAG,+DAAwB,CAAC,gEAAqB,MAAM,+DAAwB,cAAc,+DAAwB,CAAC,oDAAa,GAAG,+DAAwB,CAAC,wDAAQ,GAAG,+DAAwB,CAAC,0FAAqB,MAAM;AACxb,iBAAiB,+DAAwB,EAAE,6FAA6F;AACxI,QAAQ,yDAAkB;AAC1B,KAAK;AACL;AACA,QAAQ,4DAAqB,MAAM,yDAAkB;AACr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;QAAA,4DAAK;QACzC,yEAAgB;QAAA,wDAAyD;QAAA,4DAAK;QAClF,4DAAK;QACT,4DAAQ;QACR,sEAAoB;QACpB,6EACwC;QAAzB,+IAAS,iBAAa,IAAE;QAAE,0EAAa;QAAA,4DAAS;QAC/D,0EAA4C;QACxC,iIAkDW;QACf,4DAAM;QACV,4DAAW;QACX,4DAAM;;QAxEsB,2DAAwB;QAAxB,4HAAwB;QAIxB,0DAAkC;QAAlC,kLAAkC;QAIlC,0DAAY;QAAZ,6EAAY;QAIZ,0DAAyD;QAAzD,6JAAyD;QAOlC,0DAA+B;QAA/B,sIAA+B;;;;;;;;;;;;;;AEnClF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAqG;AAChE;AACqC;;AAE1E;AACA;AACA;AACA,cAAc,uHAAuH;AACrI;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACwC;AACxC;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,kDAAkD,0BAA0B;AAC5E;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,uHAAuH;AACrI;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,uHAAuH;AACrI;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,uHAAuH;AACrI;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA,yBAAyB,sBAAsB;AAC/C,wCAAwC,iDAAiD;AACzF;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA,yCAAyC,cAAc,YAAY;AACnE;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,WAAW,4BAA4B;AACvC,WAAW,mCAAmC;AAC9C;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA;AACA,YAAY;AACZ;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,WAAW,kBAAkB;AAC7B;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA,YAAY;AACZ;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA,kCAAkC,4BAA4B;AAC9D,WAAW,mCAAmC;AAC9C;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,uHAAuH;AACrI;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;;AAEA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;;AAEA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;;AAEA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;;AAEA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;;AAEA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;;AAEA;AACA;AACA;AACA,cAAc,uHAAuH;AACrI;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,uHAAuH;AACrI;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,WAAW,mDAAmD;AAC9D,eAAe,EAAE;AACjB;AACA;AACA;AACA,KAAK;AACL,eAAe,EAAE;AACjB;AACA;AACA,KAAK;AACL,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA,2CAA2C,+DAAQ;AACnD,gBAAgB;AAChB;AACA,UAAU,+CAAE,wCAAwC,0DAAG;AACvD,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,0GAA0G,0DAAG;AAC7G,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,MAAM,QAAQ,sEAAsE,6DAAM;AAC1F,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,MAAM,2BAA2B,gBAAgB,EAAE,mHAAmH,0DAAG;AACzK,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,MAAM,qBAAqB,gBAAgB,EAAE;AAC7C;AACA,KAAK,IAAI,0DAAG;AACZ;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB,cAAc,sDAAS;AACvB;AACA;AACA;AACA;AACA;AACA,uBAAuB,mEAAY;AACnC;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,WAAW,mBAAmB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,WAAW,qBAAqB,kCAAkC,EAAE;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,uHAAuH;AACrI;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA,4BAA4B,0DAAY;AACxC,8BAA8B,0DAAY;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,iBAAiB,0EAA0E;AAC3F,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA,4BAA4B;AAC5B;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,oBAAoB,gBAAgB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4EAA4E,2CAA2C,+DAAwB,CAAC,wDAAiB,GAAG,+DAAwB,CAAC,oDAAa,GAAG;AAC7M,+BAA+B,+DAAwB,EAAE,iJAAiJ,mZAAmZ,YAAY,iDAAiD,aAAa,kEAA2B,GAAG;AACrsB;AACA;AACA,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK,OAAO,oDAAM;AAClB;AACA;AACA,gBAAgB,OAAO,oDAAM,EAAE;AAC/B,kBAAkB,OAAO,oDAAM,EAAE;AACjC,8BAA8B,OAAO,mDAAK,EAAE;AAC5C,gCAAgC,OAAO,mDAAK,EAAE;AAC9C,8BAA8B,OAAO,mDAAK,EAAE;AAC5C,8BAA8B,OAAO,mDAAK,EAAE;AAC5C,+BAA+B,OAAO,mDAAK,EAAE;AAC7C,oBAAoB,OAAO,mDAAK,EAAE;AAClC,sBAAsB,OAAO,mDAAK,EAAE;AACpC,kBAAkB,OAAO,mDAAK,EAAE;AAChC,sBAAsB,OAAO,mDAAK,EAAE;AACpC,gBAAgB,OAAO,mDAAK,EAAE;AAC9B;AACA,cAAc,oDAAoD,+DAAwB;AAC1F,cAAc,uDAAS;AACvB;AACA;AACA,aAAa;AACb,KAAK,gBAAgB,UAAU,OAAO,wDAAiB,EAAE,GAAG,OAAO,oDAAa,EAAE,EAAE,EAAE,GAAG;AACzF,kBAAkB,oDAAM;AACxB,SAAS;AACT,kBAAkB,oDAAM;AACxB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS,GAAG,EAAE,EAAE;;AAEhB;AACA;AACA;AACA,cAAc,uHAAuH;AACrI;AACA;AACA;AACA,sEAAsE,0CAA0C;AAChH,4BAA4B,8DAAuB,EAAE,6BAA6B;AAClF,4BAA4B,8DAAuB,EAAE,+BAA+B;AACpF,cAAc,oDAAoD,gEAAyB,wBAAwB,8EAA8E,EAAE,EAAE;AACrM,cAAc,oDAAoD,+DAAwB;AAC1F,cAAc,sDAAQ;AACtB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,KAAK,eAAe,EAAE;;AAEtB;AACA;AACA;AACA,cAAc,uHAAuH;AACrI;;AAEA;AACA;AACA;AACA,cAAc,uHAAuH;AACrI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,uHAAuH;AACrI;AACA;AACA;AACA;;AAEyD;;AAEzD,+C;;;;;;;;;;;;ACh0BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAiD;AACa;AACJ;AACkM;AACzM;AAC2C;;AAE9F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACwC;AACI;AACK;;AAEjD;AACA;AACA,8CAA8C,4DAAc;AAC5D;AACA;AACA;AACA;AACA;AACA,oCAAoC,4DAAc;AAClD;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,gEAAiB;AAC9B,iBAAiB,gEAAU;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD;AACpD;AACA,iCAAiC;AACjC,gDAAgD,kBAAkB;AAClE;AACA;AACA;AACA;AACA;AACA,+BAA+B,0DAAY;AAC3C;AACA,0BAA0B,0DAAY;AACtC;AACA;AACA;AACA;AACA,gBAAgB,mBAAmB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA,yBAAyB,mFAAqB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA,yBAAyB,mFAAqB;AAC9C;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA,yBAAyB,mFAAqB;AAC9C;AACA;AACA;AACA;AACA;AACA,mCAAmC,uEAAc;AACjsEAAsE,wCAAwC,+DAAwB,CAAC,+DAAwB,GAAG,+DAAwB,wCAAwC;AAClO,4BAA4B,+DAAwB,EAAE,wJAAwJ;AAC9M,QAAQ,4DAAqB;AAC7B,KAAK;AACL;AACA,QAAQ,4DAAqB,MAAM,yDAAkB;AACrD,KAAK,EAAE,8IAA8I;AACrJ,QAAQ,yDAAkB;AAC1B,QAAQ,yDAAkB;AAC1B,KAAK,EAAE,WAAW,2HAA2H,YAAY,+CAA+C,iDAAiD,gEAAyB;AAClR;AACA,aAAa,sEAAsE;AACnF,aAAa;AACb;AACA,KAAK,OAAO,+DAAiB,EAAE;AAC/B,KAAK,gCAAgC,OAAO,sDAAQ,EAAE,GAAG,OAAO,oDAAM,8CAA8C;AACpH;AACA;AACA,sBAAsB,OAAO,6DAAe,SAAS,gEAAU;AAC/D;AACA;AACA;AACA,iBAAiB,IAAI;AACrB,kBAAkB,OAAO,mDAAK,EAAE;AAChC,YAAY,OAAO,mDAAK,EAAE;AAC1B,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,aAAa,OAAO,mDAAK,EAAE;AAC3B,mBAAmB,OAAO,oDAAM,EAAE;AAClC,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,cAAc,OAAO,oDAAM,EAAE;AAC7B;AACA,cAAc,oDAAoD,+DAAwB;AAC1F,cAAc,uDAAS;AACvB;AACA;AACA;AACA;AACA,qBAAqB,sEAAsE;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,aAAa;AACb,KAAK,gBAAgB,UAAU,OAAO,+DAAwB,EAAE,GAAG;AACnE,sBAAsB,sDAAQ;AAC9B,aAAa;AACb,sBAAsB,oDAAM;AAC5B;AACA,aAAa,GAAG,EAAE,EAAE,GAAG;AACvB,kBAAkB,oDAAM;AACxB,SAAS;AACT,kBAAkB,oDAAM;AACxB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,6DAAe;AACjC,mBAAmB,gEAAU;AAC7B;AACA;AACA;AACA,iBAAiB;AACjB,SAAS,GAAG,EAAE,EAAE;AAChB;AACA;AACA;AACA;AACA,kCAAkC,iFAAkB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,0DAAY;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,WAAW,QAAQ,SAAS;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,mFAAqB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,kBAAkB,mFAAqB,QAAQ;AACxE;AACA;AACA;AACA,kDAAkD,kBAAkB;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D,mCAAmC,+DAAwB,8BAA8B,+DAAwB,CAAC,+DAAwB,GAAG,+DAAwB,CAAC,wDAAiB,GAAG,+DAAwB,CAAC,8DAAmB,GAAG,+DAAwB,cAAc,+DAAwB,wCAAwC;AAC3Y,uBAAuB,+DAAwB,EAAE,gHAAgH;AACjK,QAAQ,yDAAkB;AAC1B,KAAK;AACL;AACA,QAAQ,4DAAqB,MAAM,yDAAkB;AACrD,KAAK,EAAE,2IAA2I;AAClJ,QAAQ,wDAAiB,+DAA+D,oBAAoB,EAAE;AAC9G,KAAK;AACL,QAAQ,yDAAkB;AAC1B,QAAQ,yDAAkB;AAC1B,KAAK,EAAE,WAAW,kQAAkQ,YAAY,mBAAmB,4CAA4C,wEAAiC,qZAAqZ;AACrxB,QAAQ,6DAAsB;AAC9B,QAAQ,4DAAqB;AAC7B,QAAQ,wDAAiB,uEAAuE,6BAA6B,EAAE;AAC/H,QAAQ,4DAAqB;AAC7B,QAAQ,0DAAmB;AAC3B,QAAQ,0DAAmB;AAC3B,QAAQ,0DAAmB;AAC3B,QAAQ,uDAAgB;AACxB,QAAQ,uDAAgB;AACxB,KAAK;AACL,oBAAoB,yDAAkB;AACtC,QAAQ,wDAAiB;AACzB,QAAQ,yDAAkB;AAC1B,QAAQ,uDAAgB;AACxB,QAAQ,wDAAiB;AACzB,KAAK,EAAE,eAAe,gEAAgB,oEAAoE,kBAAkB,oBAAoB,mBAAmB,mBAAmB,gBAAgB,kBAAkB,wCAAwC,2GAA2G,kBAAkB,iHAAiH,kBAAkB,qKAAqK,UAAU,4BAA4B,sBAAsB,6DAA6D,cAAc,mBAAmB,mBAAmB,kBAAkB,iCAAiC,mBAAmB,yEAAyE,UAAU,mGAAmG,WAAW,+GAA+G,YAAY,8HAA8H,YAAY,wJAAwJ,WAAW,oBAAoB,+GAA+G,cAAc,iCAAiC,yBAAyB,sBAAsB,qBAAqB,iBAAiB,qBAAqB,iBAAiB,eAAe,kBAAkB,wEAAwE,eAAe,mCAAmC,sBAAsB,iCAAiC,sBAAsB,oBAAoB,UAAU,MAAM,OAAO,QAAQ,SAAS,kBAAkB,4DAA4D,yBAAyB,sFAAsF,WAAW,SAAS,4HAA4H,0BAA0B,6CAA6C,MAAM,OAAO,QAAQ,SAAS,kBAAkB,oBAAoB,0BAA0B,SAAS,gBAAgB,cAAc,UAAU,SAAS,aAAa,aAAa,WAAW,eAAe,sDAAsD,eAAe,4CAA4C,SAAS,4CAA4C;AACx1F;AACA,KAAK,2CAA2C,OAAO,sDAAQ,EAAE,GAAG,OAAO,oDAAM,oCAAoC,GAAG;AACxH,KAAK,OAAO,+DAAiB,EAAE;AAC/B,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK,OAAO,8DAAY,EAAE;AAC1B,KAAK,6BAA6B,OAAO,uDAAS,uBAAuB,GAAG;AAC5E,KAAK,gCAAgC,OAAO,sDAAQ,EAAE,GAAG,OAAO,oDAAM,8CAA8C;AACpH;AACA;AACA,iBAAiB,OAAO,mDAAK,yBAAyB;AACtD,sBAAsB,OAAO,mDAAK,8BAA8B;AAChE,sBAAsB,OAAO,uDAAS,qBAAqB;AAC3D,UAAU,OAAO,mDAAK,EAAE;AACxB,YAAY,OAAO,mDAAK,EAAE;AAC1B,aAAa,OAAO,mDAAK,EAAE;AAC3B,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,kBAAkB,OAAO,mDAAK,EAAE;AAChC,eAAe,OAAO,mDAAK,EAAE;AAC7B,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,cAAc,OAAO,oDAAM,EAAE;AAC7B;AACA,cAAc,oDAAoD,+DAAwB;AAC1F,cAAc,uDAAS;AACvB;AACA;AACA;AACA,+BAA+B,+DAAiB;AAChD;AACA,iCAAiC,qEAAuB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,iFAAiF,kBAAkB,oBAAoB,mBAAmB,mBAAmB,gBAAgB,kBAAkB,wCAAwC,2GAA2G,kBAAkB,iHAAiH,kBAAkB,qKAAqK,UAAU,4BAA4B,sBAAsB,6DAA6D,cAAc,mBAAmB,mBAAmB,kBAAkB,iCAAiC,mBAAmB,yEAAyE,UAAU,mGAAmG,WAAW,+GAA+G,YAAY,8HAA8H,YAAY,wJAAwJ,WAAW,oBAAoB,+GAA+G,cAAc,iCAAiC,yBAAyB,sBAAsB,qBAAqB,iBAAiB,qBAAqB,iBAAiB,eAAe,kBAAkB,wEAAwE,eAAe,mCAAmC,sBAAsB,iCAAiC,sBAAsB,oBAAoB,UAAU,MAAM,OAAO,QAAQ,SAAS,kBAAkB,4DAA4D,yBAAyB,sFAAsF,WAAW,SAAS,4HAA4H,0BAA0B,6CAA6C,MAAM,OAAO,QAAQ,SAAS,kBAAkB,oBAAoB,0BAA0B,SAAS,gBAAgB,cAAc,UAAU,SAAS,aAAa,aAAa,WAAW,eAAe,sDAAsD,eAAe,4CAA4C,SAAS;AACnxF,aAAa;AACb,KAAK,gBAAgB,UAAU;AAC/B,sBAAsB,sDAAQ;AAC9B,aAAa;AACb,sBAAsB,oDAAM;AAC5B;AACA,aAAa,GAAG,GAAG,OAAO,+DAAwB,EAAE,GAAG,OAAO,wDAAiB,EAAE,GAAG,OAAO,8DAAmB,EAAE,GAAG;AACnH,sBAAsB,uDAAS;AAC/B;AACA,aAAa,GAAG,GAAG;AACnB,sBAAsB,sDAAQ;AAC9B,aAAa;AACb,sBAAsB,oDAAM;AAC5B;AACA,aAAa,GAAG,EAAE,EAAE,GAAG;AACvB,kBAAkB,mDAAK;AACvB;AACA,SAAS;AACT,kBAAkB,oDAAM;AACxB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB;AACA,SAAS;AACT,kBAAkB,uDAAS;AAC3B;AACA,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS,GAAG,EAAE,EAAE;;AAEhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wEAAwE,2CAA2C;AACnH,6BAA6B,8DAAuB,EAAE,8BAA8B;AACpF,6BAA6B,8DAAuB,EAAE,YAAY,sEAAe,EAAE,sEAAe,GAAG,sEAAe,GAAG;AACvH,cAAc,oDAAoD,gEAAyB,yBAAyB,4BAA4B,gDAAgD,EAAE,wBAAwB,SAAS,sEAAe,EAAE,sEAAe,EAAE,EAAE,wBAAwB,SAAS,sEAAe,yCAAyC,EAAE,EAAE,EAAE,EAAE;AACxW,cAAc,oDAAoD,+DAAwB;AAC1F,cAAc,sDAAQ;AACtB;AACA,0BAA0B,sEAAe,EAAE,sEAAe;AAC1D,0BAA0B,sEAAe;AACzC;AACA,aAAa;AACb,KAAK,eAAe,EAAE;;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEmM;;AAEnM,yC;;;;;;;;;;;;AChlBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIkC;AAG4G;AAMvG;;;;;;;;;;;;;;;;;;;;;;;;;ICKnC,wEAAgC;IAC9B,2EACG;IAAA,uDACkD;IAAA,4DACpD;IACH,qEAAe;;;IAHV,0DACkD;IADlD,0TACkD;;;;IAhBzD,0EAQC;IAKC,2IAKe;IACf,0EAA4B;IAC1B,6EAKC;IADC,4TAAsB;IAEtB,mEACF;IAAA,4DAAS;IACX,4DAAM;IACR,4DAAM;;;IAhBW,0DAAe;IAAf,kFAAe;;;;IAkB9B,wEAAiC;IAC/B,+EAAmD;IAAjB,iUAAgB;IAAE,uEAAW;IAAA,4DAAW;IAC1E,2EACG;IAAA,uDAA6C;IAAA,4DAC/C;IACH,qEAAe;;;IAFV,0DAA6C;IAA7C,8JAA6C;;;IA+RtC,iFAGG;IAAA,uDAAyB;IAAA,4DAC3B;;;IAFC,wFAA2B;IAC1B,0DAAyB;IAAzB,wFAAyB;;;;IAapC,0EAKC;IACC,sFAIC;IADC,wXAA0B;IAE1B,uFAAwD;IACtD,iEACF;IAAA,4DAAmB;IACnB,uFAA4B;IAAC,gEAAI;IAAA,4DAAmB;IACtD,4DAAkB;IAClB,0EAKC;IACC,2EAAkC;IAAC,kEAAM;IAAA,4DAAO;IAChD,kFAIC;IAHC,uXAA6B;IAG9B,4DAAc;IACjB,4DAAM;IACR,4DAAM;;;IApBF,0DAA0B;IAA1B,yFAA0B;IAexB,0DAA6B;IAA7B,4FAA6B;;;;IAMnC,0EAKC;IACC,gFAA8B;IAAA,+EAAoB;IAAA,4DAAY;IAC9D,0EAAoE;IAuBlE,6EAMC;IADC,wVAA8B;IAE9B,6EACF;IAAA,4DAAS;IACX,4DAAM;IAMR,4DAAM;;;IA1CJ,0GAAyC;IA6BrC,0DAA+C;IAA/C,oFAA+C;;;;IAcrD,0EAA6D;IAC3D,gFAA8B;IAAA,2EAAgB;IAAA,4DAAY;IAC1D,0EAAoE;IAwBlE,6EAMC;IAFC,oVAA0B;IAG1B,yEACF;IAAA,4DAAS;IACX,4DAAM;IACR,4DAAM;;;IARA,0DAA2C;IAA3C,oFAA2C;;;IAzGnD,wEAAiC;IAC/B,qIA6BM;IACN,oIA6CM;IACN,oIAoCM;IACR,qEAAe;;;IAhHV,0DAA8B;IAA9B,wGAA8B;IA+B9B,0DAA+B;IAA/B,yGAA+B;IA4C5B,0DAAc;IAAd,iFAAc;;;;IAsCtB,wEAAgC;IAC9B,0EAIC;IACC,0EAQC;IACC,2EAAkC;IAAC,uEAAW;IAAA,4DAAO;IACrD,kFAKC;IAJC,gXAA6B;IAI9B,4DAAc;IACjB,4DAAM;IACN,0EAMC;IACC,6EAOC;IADC,4UAAyB;IAEzB,iEACF;IAAA,4DAAS;IACT,6EAOC;IADC,2UAAwB;IAExB,iEACF;IAAA,4DAAS;IACX,4DAAM;IACR,4DAAM;IACR,qEAAe;;;IAnCP,0DAA6B;IAA7B,2FAA6B;;;ADpcpC,MAAM,uBAAuB;IAuBlC,YACU,OAAkB,EACM,IAAS,EACjC,gBAAkC,EAClC,MAAsB,EACtB,iBAAmC,EACnC,iBAAmC,EACnC,KAAkB,EAClB,YAAyB,EACzB,QAAwB,EACxB,QAAmB,EACnB,OAAe,EACf,SAAmB,EACpB,SAA4B;QAZ3B,YAAO,GAAP,OAAO,CAAW;QACM,SAAI,GAAJ,IAAI,CAAK;QACjC,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,WAAM,GAAN,MAAM,CAAgB;QACtB,sBAAiB,GAAjB,iBAAiB,CAAkB;QACnC,sBAAiB,GAAjB,iBAAiB,CAAkB;QACnC,UAAK,GAAL,KAAK,CAAa;QAClB,iBAAY,GAAZ,YAAY,CAAa;QACzB,aAAQ,GAAR,QAAQ,CAAgB;QACxB,aAAQ,GAAR,QAAQ,CAAW;QACnB,YAAO,GAAP,OAAO,CAAQ;QACf,cAAS,GAAT,SAAS,CAAU;QACpB,cAAS,GAAT,SAAS,CAAmB;QAlCrC,mBAAc,GAAQ,KAAK,CAAC;QAG5B,cAAS,GAAQ,EAAE,CAAC;QAGpB,cAAS,GAAW,GAAG,CAAC;QACxB,gBAAW,GAAW,GAAG,CAAC;QAC1B,gBAAW,GAAW,GAAG,CAAC;QAC1B,cAAS,GAAY,KAAK,CAAC;QAC3B,iBAAY,GAAY,IAAI,CAAC;QAC7B,aAAQ,GAAY,IAAI,CAAC;QACzB,cAAS,GAAY,KAAK,CAAC;QAE3B,iBAAY,GAAc,GAAG,CAAC;QAC9B,oBAAe,GAAG,CAAC,CAAC;QAEpB,kBAAa,GAAe,EAAE,CAAC;QAC/B,sBAAiB,GAAW,EAAE,CAAC;QAC/B,cAAS,GAAe,EAAE,CAAC;QAC3B,kBAAa,GAAW,EAAE,CAAC;IAexB,CAAC;IAEJ,QAAQ;;QACN,IAAI,IAAI,CAAC,IAAI,EAAE;YACb,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC;gBACpD,CAAC,OAAC,IAAI,CAAC,IAAI,0CAAE,SAAS,CACtB,CAAC,CAAC,KAAK,CAAC;YACV,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC;gBAC1D,CAAC,OAAC,IAAI,CAAC,IAAI,0CAAE,YAAY,CACzB,CAAC,CAAC,IAAI,CAAC;YACT,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC;gBAClD,CAAC,OAAC,IAAI,CAAC,IAAI,0CAAE,QAAQ,CACrB,CAAC,CAAC,IAAI,CAAC;YAET,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC;gBACpD,CAAC,OAAC,IAAI,CAAC,IAAI,0CAAE,SAAS,CACtB,CAAC,CAAC,KAAK,CAAC;SACX;QAED,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;YACnB,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;gBACpC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;gBAChC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;gBACpC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;gBACpC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;YACtE,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,eAAe,EAAE,CAAC;YACvB,IAAI,CAAC,WAAW,EAAE,CAAC;SACpB;aAAM;YACL,IAAI,CAAC,SAAS,eAAG,IAAI,CAAC,IAAI,0CAAE,IAAI,0CAAE,UAAU,CAAC;YAC7C,IAAI,CAAC,WAAW,eAAG,IAAI,CAAC,IAAI,0CAAE,IAAI,0CAAE,YAAY,CAAC;YACjD,IAAI,CAAC,WAAW,eAAG,IAAI,CAAC,IAAI,0CAAE,IAAI,0CAAE,gBAAgB,CAAC;YACrD,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;YACpE,IAAI,IAAI,CAAC,YAAY,EAAE;gBACrB,IAAI,CAAC,eAAe,EAAE,CAAC;aACxB;SACF;IACH,CAAC;IAED,SAAS;;QACP,IAAI,IAAI,CAAC,eAAe,GAAG,CAAC,gBAAG,IAAI,CAAC,IAAI,0CAAE,IAAI,0CAAE,iBAAiB,GAAE;YACjE,OAAO;SACR;QACD,IAAI,CAAC,eAAe,EAAE,CAAC;IACzB,CAAC;IACD,SAAS;QACP,IAAI,IAAI,CAAC,eAAe,GAAG,CAAC,GAAG,CAAC,EAAE;YAChC,OAAO;SACR;QACD,IAAI,CAAC,eAAe,EAAE,CAAC;IACzB,CAAC;IACD,UAAU,CAAC,KAAU;;QACnB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACnB,IAAI,YAAY,GAAG,EAAE,CAAC;QACtB,IAAI,kBAAkB,GAAG,KAAK,CAAC;QAC/B,IAAI,cAAc,GAAG,YAAY,GAAG,kBAAkB,CAAC;QACvD,IAAI,CAAC,SAAS,GAAG,kBAAkB,CAAC;QACpC,gBAAI,CAAC,cAAc,0CAAE,UAAU,CAAC,IAAI,CAAC,WAAW,2CAAG,aAAa,CAAC,OAAO,CACtE,CAAC,MAAW,EAAE,KAAU,EAAE,EAAE;YAC1B,IAAI,cAAc,IAAI,KAAK,EAAE;gBAC3B,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,YAAY,CAAC;aACxC;QACH,CAAC,EACD;IACJ,CAAC;IACD,UAAU;QACR,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC;IAC1B,CAAC;IACD,UAAU,CAAC,GAAQ,EAAE,GAAQ,EAAE,KAAU;QACvC,IAAI,CAAC,gBAAgB;aAClB,iBAAiB,CAAC,GAAG,EAAE,GAAG,CAAC;aAC3B,SAAS,CAAC,CAAC,QAAa,EAAE,EAAE;;YAC3B,IAAI,CAAC,cAAc,GAAG,QAAQ,CAAC,MAAM,CAAC;YACtC,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC,MAAM,CAAC,UAAU,CAAC,SAAS,CACrD,CAAC,IAAS,EAAE,EAAE,CAAC,IAAI,CAAC,IAAI,IAAI,KAAK,CAClC,CAAC;YACF,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;YAClB,IAAI,CAAC,WAAW,qBACd,IAAI,CAAC,cAAc,0CAAE,UAAU,CAC7B,IAAI,CAAC,WAAW,2CACf,aAAa,CAAC,EAAE,2CAAG,YAAY,CAAC;YACrC,gBAAI,CAAC,cAAc,0CAAE,UAAU,CAC7B,IAAI,CAAC,WAAW,2CACf,sBAAsB,CAAC,OAAO,CAAC,CAAC,KAAU,EAAE,KAAU,EAAE,EAAE;gBAC3D,IAAI,CAAC,QAAQ,IAAI,KAAK,CAAC,wBAAwB,CAAC;YAClD,CAAC,EAAE;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAED,eAAe;QACb,IAAI,CAAC,iBAAiB,CAAC,kBAAkB,EAAE,CAAC,SAAS,CACnD,CAAC,IAAS,EAAE,EAAE;;YACZ,IAAI,CAAC,aAAa,GAAG,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,MAAM,CAAC;YAClC,UAAI,IAAI,CAAC,IAAI,0CAAE,WAAW,EAAE;gBAC1B,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC;aAChD;iBAAM,IAAI,WAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,MAAM,0CAAE,MAAM,IAAG,CAAC,EAAE;gBACnC,IAAI,CAAC,iBAAiB,GAAG,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,MAAM,CAAC,CAAC,EAAE,EAAE,CAAC;aAC7C;QACH,CAAC,EACD,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC,CACrC,CAAC;IACJ,CAAC;IACD,WAAW;QACT,IAAI,CAAC,iBAAiB;aACnB,YAAY,CAAa,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC,KAAK,EAAE,EAAE,IAAI,EAAE,QAAQ,CAAC;aACtE,SAAS,CACR,CAAC,IAAgB,EAAE,EAAE;YACnB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YACtB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;QACpC,CAAC,EACD,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC,CACjC,CAAC;IACN,CAAC;IAED,kBAAkB;QAChB,IAAI,GAAG,GAAG;YACR,KAAK,EAAE,IAAI,CAAC,SAAS;YACrB,WAAW,EAAE,IAAI,CAAC,YAAY;YAC9B,aAAa,EAAE,IAAI,CAAC,iBAAiB;YACrC,UAAU,EAAE,IAAI,CAAC,SAAS;YAC1B,WAAW,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC;YAC7B,QAAQ,EAAE,IAAI,CAAC,eAAe;YAC9B,GAAG,EAAE,IAAI,CAAC,WAAW;YACrB,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC,KAAK,EAAE;YACrC,YAAY,EAAE,IAAI,CAAC,WAAW;SAC/B,CAAC;QACF,IAAI,CAAC,YAAY,CAAC,kBAAkB,CAAC,GAAG,CAAC,CAAC,SAAS,CACjD,CAAC,IAAI,EAAE,EAAE;YACP,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,yBAAyB,CAAC,CAAC;YACjD,IAAI,CAAC,eAAe,GAAG,CAAC,CAAC;QAC3B,CAAC,EACD,CAAC,KAAK,EAAE,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,aAAa,CAAC,CAC9C,CAAC;IACJ,CAAC;IAED,cAAc;QACZ,cAAc;QACd,oCAAoC;QACpC,wBAAwB;QACxB,2BAA2B;QAC3B,wBAAwB;QACxB,gCAAgC;QAChC,oCAAoC;QACpC,kCAAkC;QAClC,2BAA2B;QAC3B,iBAAiB;QACjB,2CAA2C;QAC3C,oCAAoC;QACpC,KAAK;QACL,mDAAmD;QACnD,4DAA4D;QAC5D,kDAAkD;QAClD,KAAK;QACL,IAAI,CAAC,OAAO;aACT,IAAI,CAAC,iFAAmB,EAAE;YACzB,MAAM,EAAE,KAAK;YACb,KAAK,EAAE,KAAK;YACZ,IAAI,EAAE;gBACJ,QAAQ,EAAE,IAAI;gBACd,OAAO,EAAE,IAAI,CAAC,aAAa;gBAC3B,UAAU,EAAE,IAAI,CAAC,SAAS;gBAC1B,GAAG,EAAE,IAAI,CAAC,WAAW;gBACrB,QAAQ,EAAE,IAAI,CAAC,eAAe;gBAC9B,WAAW,EAAE,IAAI,CAAC,YAAY;gBAC9B,KAAK,EAAE,IAAI,CAAC,SAAS;gBACrB,YAAY,EAAE,IAAI,CAAC,WAAW;gBAC9B,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC,KAAK,EAAE;aACtC;SACF,CAAC;aACD,WAAW,EAAE;aACb,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;YAClB,IAAI,CAAC,eAAe,GAAG,CAAC,CAAC;YACzB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QACpB,CAAC,CAAC,CAAC;IACP,CAAC;IACD,WAAW;QACT,IAAI,CAAC,OAAO;aACT,IAAI,CAAC,2JAA6B,EAAE;YACnC,MAAM,EAAE,KAAK;YACb,KAAK,EAAE,KAAK;YACZ,IAAI,EAAE;gBACJ,QAAQ,EAAE,IAAI;aACf;SACF,CAAC;aACD,WAAW,EAAE;aACb,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;YAClB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QACpB,CAAC,CAAC,CAAC;IACP,CAAC;IACD,cAAc;QACZ,IAAI,CAAC,OAAO;aACT,IAAI,CAAC,sFAAwB,EAAE;YAC9B,MAAM,EAAE,KAAK;YACb,KAAK,EAAE,KAAK;YACZ,IAAI,EAAE;gBACJ,QAAQ,EAAE,IAAI;aACf;SACF,CAAC;aACD,WAAW,EAAE;aACb,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;YAClB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QACpB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,UAAU,CAAC,GAAQ;QACjB,IAAI,GAAG,aAAH,GAAG,uBAAH,GAAG,CAAE,KAAK,EAAE;YACd,IAAI,CAAC,WAAW,GAAG,GAAG,CAAC,KAAK,CAAC;YAC7B,IAAI,SAAS,GAAG,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,IAAI,CACjD,CAAC,CAAM,EAAE,EAAE,CAAC,CAAC,CAAC,YAAY,IAAI,GAAG,CAAC,KAAK,CACxC,CAAC;YACF,IAAI,CAAC,WAAW,GAAG,SAAS,CAAC,gBAAgB,CAAC;YAC9C,IAAI,CAAC,MAAM,EAAE,CAAC;SACf;IACH,CAAC;IAED,eAAe,CAAC,SAAc;QAC5B,IAAI,CAAC,WAAW,GAAG,SAAS,CAAC,IAAI,CAAC;QAClC,IAAI,CAAC,WAAW,GAAG,SAAS,CAAC,sBAAsB,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC;QACpE,IAAI,CAAC,MAAM,EAAE,CAAC;IAChB,CAAC;IACD,MAAM;QACJ,IAAI,IAAI,CAAC,SAAS,EAAE;YAClB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;YACpE,OAAO;SACR;QACD,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC;YACpB,MAAM;YACN,IAAI,CAAC,SAAS;YACd,IAAI,CAAC,WAAW;YAChB,IAAI,CAAC,WAAW;SACjB,CAAC,CAAC;QACH,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;IACtB,CAAC;IAED,IAAI;QACF,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;IACxB,CAAC;IACD,UAAU,CAAC,OAAY,IAAG,CAAC;IAE3B,YAAY;QACV,MAAM,MAAM,GAAG,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC;QAC9C,IAAI,CAAC,YAAY,CAAC,kBAAkB,CAAC,MAAM,CAAC,CAAC,SAAS,CACpD,CAAC,IAAI,EAAE,EAAE;YACP,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,yBAAyB,CAAC,CAAC;YACjD,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,KAAK,EAAE,OAAO,EAAE,CAAC,CAAC;QAC3C,CAAC,EACD,CAAC,KAAK,EAAE,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,aAAa,CAAC,CAC9C,CAAC;IACJ,CAAC;IAED,aAAa;QACX,MAAM,MAAM,GAAG,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,CAAC;QAC/C,IAAI,CAAC,YAAY,CAAC,kBAAkB,CAAC,MAAM,CAAC,CAAC,SAAS,CACpD,CAAC,IAAI,EAAE,EAAE;YACP,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,yBAAyB,CAAC,CAAC;YACjD,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,KAAK,EAAE,OAAO,EAAE,CAAC,CAAC;QAC3C,CAAC,EACD,CAAC,KAAK,EAAE,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,aAAa,CAAC,CAC9C,CAAC;IACJ,CAAC;IAED,kBAAkB,CAAC,IAAY;QAC7B,OAAO;YACL,WAAW,EAAE,IAAI,IAAI,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG;YACtC,KAAK,EAAE,IAAI,CAAC,SAAS;YACrB,aAAa,EAAE,IAAI,CAAC,IAAI,CAAC,WAAW;YACpC,UAAU,EAAE,IAAI,CAAC,SAAS;YAC1B,WAAW,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC;YAC7B,QAAQ,EAAE,IAAI,CAAC,eAAe;YAC9B,GAAG,EAAE,IAAI,CAAC,WAAW;YACrB,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC,KAAK,EAAE;YACrC,YAAY,EAAE,IAAI,CAAC,WAAW;SAC/B,CAAC;IACJ,CAAC;;8FAtTU,uBAAuB,uMAyBxB,wEAAe;uGAzBd,uBAAuB;QCvBpC,yEAMC;QACC,mHA6BM;QACN,yEAAkD;QAChD,qIAKe;QACjB,4DAAM;QACN,yEAA2B;QAC3B,yEAMC;QACC,yEAMC;QACC,yEAKC;QACC,oEAQE;QACF,sFAKC;QAFC,qKAAY,2BAAuB,IAAC;QAErC,4DAAmB;QACtB,4DAAM;QACN,oFAAmD;QACjD,2FAIC;QAFC,oLAA2B,IAAI,IAAC,4HACL,KAAK,IADA;QAGhC,8FAA4B;QAC1B,mFAAiB;QAAC,qFAAwB;QAAA,4DAAkB;QAC9D,4DAA6B;QAC7B,qEAAG;QACD,wDACF;QAAA,4DAAI;QACN,4DAAsB;QACxB,4DAAgB;QAchB,oFAAmD;QACjD,2FAIC;QAFC,oLAA2B,IAAI,IAAC,4HACL,KAAK,IADA;QAGhC,8FAA4B;QAC1B,mFAAiB;QAAC,wEAAW;QAAA,4DAAkB;QACjD,4DAA6B;QAC7B,qEAAG;QAAA,wDAAwD;QAAA,4DAAI;QACjE,4DAAsB;QACxB,4DAAgB;QAwBlB,4DAAM;QACN,2EAAiE;QAC/D,2EAIC;QACC,2EAKC;QACC,2EAAiE;QAC/D,2EACF;QAAA,4DAAM;QACN,2EAAiE;QAC/D,wDACF;QAAA,4DAAM;QACR,4DAAM;QACN,2EAKC;QACC,2EAKC;QACC,uEACF;QAAA,4DAAM;QACN,2EAKC;QACC,wDACF;QAAA,4DAAM;QACR,4DAAM;QACN,2EAKC;QACC,2EAKC;QACC,wEACF;QAAA,4DAAM;QACN,2EAKC;QACC,wDACF;;QAAA,4DAAM;QACR,4DAAM;QACN,2EAKC;QACC,2EAKC;QACC,oFACF;QAAA,4DAAM;QACN,2EAKC;QACC,wDACF;;QAAA,4DAAM;QACR,4DAAM;QACN,2EAKC;QACC,2EAKC;QACC,4EACF;QAAA,4DAAM;QACN,2EAKC;QACC,wDACF;QAAA,4DAAM;QACR,4DAAM;QACN,2EAKC;QACC,2EAKC;QACC,4EACF;QAAA,4DAAM;QACN,2EAKC;QAUC,kFAOC;QAFC,oMAAuB,kGACd,4BAAwB,IADV;QAExB,4DAAa;QACd,sFAAiD;QAC/C,6EAAsD;QAAtC,+LAAuB;QAAvC,4DAAsD;QACxD,4DAAiB;QAGnB,4DAAM;QACR,4DAAM;QACN,2EAKC;QACC,2EAKC;QACC,mEACF;QAAA,4DAAM;QACN,2EAKC;QACC,sFAA4C;QAC1C,kFAMC;QALC,8KAAmB,sBAAkB,IAAC,yRAIrD,CAAC,4BAJoD;QAMtC,oIAIC;QACH,4DAAa;QACf,4DAAiB;QAMnB,4DAAM;QACR,4DAAM;QACR,4DAAM;QACN,uIAkHe;QACf,wIAoDe;QACjB,4DAAM;QACR,4DAAM;QACR,4DAAM;;QA5fJ,0JAA2C;QAIxC,0DAAe;QAAf,+EAAe;QA6BD,0DAAgB;QAAhB,gFAAgB;QA+BzB,0DAGG;QAHH,+YAGG;QACH,uIAAgC;QAGhC,0DAAmC;QAAnC,mIAAmC;QAgBjC,0DACF;QADE,uJACF;QAyBG,0DAAwD;QAAxD,6NAAwD;QA2CzD,0DACF;QADE,uIACF;QAsBE,0DACF;QADE,sMACF;QAsBE,0DACF;QADE,0SACF;QAsBE,0DACF;QADE,8JACF;QAsBE,0DACF;QADE,wFACF;QAoCI,0DAAuB;QAAvB,kFAAuB;QAIP,0DAAuB;QAAvB,kFAAuB;QA6BrC,0DAGC;QAHD,4PAGC;QAGkB,0DAA6B;QAA7B,sIAA6B;QAc3C,0DAAgB;QAAhB,gFAAgB;QAmHhB,0DAAe;QAAf,+EAAe;;;;;;;;;;;;;;ACvcpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAqC;;;;AAM9B,MAAM,WAAW;IACtB,YACU,KAAkB,EAClB,IAAwB,EACxB,WAAwB;QAFxB,UAAK,GAAL,KAAK,CAAa;QAClB,SAAI,GAAJ,IAAI,CAAoB;QACxB,gBAAW,GAAX,WAAW,CAAa;IAC/B,CAAC;IAEJ,kBAAkB,CAAC,GAAQ;QACzB,OAAO,IAAI,CAAC,KAAK,CAAC,eAAe,CAC/B,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,GAAG,qBAAqB,EAC/C,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CACpB,CAAC;IACJ,CAAC;IACD,WAAW,CAAC,EACV,KAAK,EACL,KAAK,EACL,QAAQ,GAAG,IAAI,EACf,QAAQ,GAAG,IAAI,EACf,SAAS,GAAG,IAAI,EAChB,SAAS,EACT,SAAS,EACT,gBAAgB,EAChB,gBAAgB,EAChB,mBAAmB,EACnB,QAAQ,EACR,6BAA6B,GAAG,IAAI,EACpC,2BAA2B,GAAG,IAAI,EAenC;QACC,IAAI,KAAK,GAAG,EAAE,CAAC;QACf,IAAI,SAAS,IAAI,SAAS,EAAE;YAC1B,KAAK;gBACH,0DAA0D,GAAG,SAAS,CAAC;SAC1E;QACD,IAAI,SAAS,IAAI,mBAAmB,EAAE;YACpC,KAAK;gBACH,uBAAuB;oBACvB,mBAAmB;oBACnB,oCAAoC,CAAC;YACvC,IAAI,SAAS,IAAI,SAAS;gBAAE,KAAK,IAAI,aAAa,GAAG,SAAS,CAAC;YAC/D,IAAI,gBAAgB;gBAAE,KAAK,IAAI,oBAAoB,GAAG,gBAAgB,CAAC;YACvE,IAAI,gBAAgB;gBAAE,KAAK,IAAI,oBAAoB,GAAG,gBAAgB,CAAC;YACvE,IAAI,MAAM,GAAG,EAAE,CAAC;YAChB,IAAI,SAAS,IAAI,QAAQ;gBAAE,MAAM,IAAI,YAAY,GAAG,QAAQ,CAAC;SAC9D;QACD,IAAI,SAAS,IAAI,SAAS,EAAE;YAC1B,KAAK,IAAI,aAAa,GAAG,SAAS,CAAC;SACpC;QACD,IAAI,gBAAgB,EAAE;YACpB,KAAK,IAAI,oBAAoB,GAAG,gBAAgB,CAAC;SAClD;QACD,IAAI,gBAAgB,EAAE;YACpB,KAAK,IAAI,oBAAoB,GAAG,gBAAgB,CAAC;SAClD;QACD,IAAI,SAAS,IAAI,QAAQ,EAAE;YACzB,KAAK,IAAI,YAAY,GAAG,QAAQ,CAAC;SAClC;QACD,IAAI,6BAA6B,IAAI,IAAI,EAAE;YACzC,KAAK,IAAI,iCAAiC,GAAG,6BAA6B;SAC3E;QACD,IAAI,2BAA2B,IAAI,IAAI,EAAE;YACvC,KAAK,IAAI,+BAA+B,GAAG,2BAA2B;SACvE;QACD,OAAO,IAAI,CAAC,KAAK,CAAC,cAAc,CAC9B,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;YACrB,wBAAwB;YACxB,KAAK;YACL,WAAW;YACX,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC,KAAK,EAAE;YAClC,SAAS;YACT,KAAK;YACL,YAAY;YACZ,QAAQ;YACR,YAAY;YACZ,QAAQ;YACR,aAAa;YACb,SAAS;YACT,KAAK,CACR,CAAC;IACJ,CAAC;IAED,cAAc,CAAC,GAAQ;QACrB,OAAO,IAAI,CAAC,KAAK,CAAC,eAAe,CAC/B,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,GAAG,+CAA+C,EACzE,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CACpB,CAAC;IACJ,CAAC;IAED,YAAY;QACV,OAAO,IAAI,CAAC,KAAK,CAAC,eAAe,CAC/B,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,GAAG,yBAAyB,EACnD,IAAI,CAAC,SAAS,CAAC,EAAE,OAAO,EAAE,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC,KAAK,EAAE,EAAE,CAAC,CAChE,CAAC;IACJ,CAAC;IAED,YAAY,CAAC,GAAQ;QACnB,OAAO,IAAI,CAAC,KAAK,CAAC,eAAe,CAC/B,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,GAAG,mBAAmB,EAC7C,GAAG,CACJ,CAAC,IAAI,CAAC,0DAAG,CAAC,CAAC,IAAQ,EAAE,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IACzC,CAAC;;sEAjHU,WAAW;8FAAX,WAAW,WAAX,WAAW,mBAFV,MAAM;;;;;;;;;;;;;ACHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAqC;;;;AAK9B,MAAM,gBAAgB;IAC3B,YACU,IAAiB,EACjB,GAAuB,EACvB,WAAwB,EACxB,mBAAuC;QAHvC,SAAI,GAAJ,IAAI,CAAa;QACjB,QAAG,GAAH,GAAG,CAAoB;QACvB,gBAAW,GAAX,WAAW,CAAa;QACxB,wBAAmB,GAAnB,mBAAmB,CAAoB;IAC9C,CAAC;IAEJ,YAAY;QACV,IAAI,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,GAAG,aAAa,CAAC;QACjD,OAAO,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;IAC3C,CAAC;IACD,gBAAgB;QACd,IAAI,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,GAAG,kBAAkB,CAAC;QACtD,OAAO,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;IAC3C,CAAC;IACD,yBAAyB;QACvB,IAAI,GAAG,GACL,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE;YACtB,oCAAoC;YACpC,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC,KAAK,EAAE,CAAC;QACrC,OAAO,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;IAC3C,CAAC;IAED,QAAQ,CAAI,KAAU;QACpB,IAAI,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,GAAG,iBAAiB,CAAC;QACrD,OAAO,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,GAAG,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC,CAAC;IAC1D,CAAC;IACD,WAAW;QACT,IAAI,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,GAAG,WAAW,CAAC;QAC/C,OAAO,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;IAC3C,CAAC;IACD,eAAe;QACb,IAAI,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,GAAG,aAAa,CAAC;QACjD,OAAO,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;IAC3C,CAAC;IACD,cAAc;QACZ,IAAI,GAAG,GACL,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,GAAG,yCAAyC,CAAC;QACrE,OAAO,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;IAC3C,CAAC;IACD,YAAY,CAAI,EAAO;QACrB,IAAI,GAAG,GACL,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,GAAG,oCAAoC,GAAG,EAAE,CAAC;QACrE,OAAO,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;IAC3C,CAAC;IACD,qBAAqB,CAAI,KAAU;QACjC,IAAI,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,GAAC,wBAAwB,CAAC;QAC1D,OAAO,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,GAAG,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,EAAE,CAAC,CAAC;IACnE,CAAC;IAED,YAAY,CAAC,EAAM;QACjB,IAAI,GAAG,GAAE;YACP,MAAM,EAAC,EAAE,CAAC,IAAI;YACd,cAAc,EAAC,EAAE,CAAC,YAAY;YAC9B,KAAK,EAAC,EAAE,CAAC,MAAM;YACf,QAAQ,EAAC,EAAE,CAAC,MAAM;YAClB,OAAO,EAAC,EAAE,CAAC,QAAQ;YACnB,OAAO,EAAC,EAAE,CAAC,KAAK;YAChB,UAAU,EAAG,EAAE,CAAC,UAAU;YAC1B,aAAa,EAAC,EAAE,CAAC,WAAW;YAC5B,aAAa,EAAC,EAAE,CAAC,WAAW;YAC5B,WAAW,EAAG,EAAE,CAAC,SAAS;SAC3B;QACD,OAAO,IAAI,CAAC,IAAI,CAAC,eAAe,CAAE,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,GAAG,6BAA6B,EAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;IAC/G,CAAC;IAED,YAAY,CAAI,EAAU;QACxB,OAAO,IAAI,CAAC,IAAI;aACb,cAAc,CACb,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,GAAG,oCAAoC,GAAG,EAAE,CACnE;aACA,IAAI,CACH,0DAAG,CAAC,CAAC,IAAS,EAAE,EAAE;YAChB,OAAO,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC,IAAS,EAAE,EAAE;gBAC5C,IAAI,CAAC,UAAU,CAAC,GAAG,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;gBAC9C,IAAI,CAAC,QAAQ,CAAC,GAAG,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;gBACtC,OAAO,IAAI,CAAC;YACd,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CACH,CAAC;IACN,CAAC;IACD,UAAU,CAAI,KAAU;QACtB,IAAI,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,GAAG,mBAAmB,CAAC;QACvD,OAAO,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,GAAG,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAC,EAAE,CAAC,CAAC;IAClE,CAAC;IACD,gBAAgB,CAAI,KAAU;QAC5B,IAAI,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,GAAG,cAAc,CAAC;QAClD,KAAK,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC,KAAK,EAAE,CAAC;QACtD,OAAO,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,GAAG,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC,CAAC;IAC1D,CAAC;IACD,kBAAkB,CAAI,KAAW;QAC/B,IAAI,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,GAAG,oBAAoB,CAAC;QACxD,IAAI,CAAC,KAAK,EAAE;YACV,KAAK,GAAG,EAAE,CAAC;SACZ;QACD,KAAK,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC,KAAK,EAAE,CAAC;QACrD,OAAO,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,GAAG,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,EAAE,CAAC,CAAC;IACnE,CAAC;IACD,iBAAiB,CAAI,GAAQ,EAAE,GAAQ;QACrC,IAAI,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,GAAG,SAAS,CAAC;QAC7C,IAAI,KAAK,GAAG,EAAE,YAAY,EAAE,EAAE,GAAC,GAAG,EAAE,cAAc,EAAE,EAAE,GAAC,GAAG,EAAE,CAAC;QAC7D,OAAO,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,GAAG,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,EAAE,CAAC,CAAC;IACnE,CAAC;IACD,iBAAiB,CAAI,KAAU;QAC7B,IAAI,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,GAAG,oBAAoB,CAAC;QACxD,KAAK,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC,KAAK,EAAE,CAAC;QACtD,OAAO,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,GAAG,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC,CAAC;IAC1D,CAAC;IACD,eAAe,CAAC,KAAU;QACxB,IAAI,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,GAAG,iBAAiB,CAAC;QACrD,OAAO,IAAI,CAAC,IAAI,CAAC,eAAe,CAAM,GAAG,EAAE,KAAK,EAAE,EAAE,CAAC,CAAC;IACxD,CAAC;IACD,eAAe,CAAC,KAAU;QACxB,IAAI,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,GAAG,iBAAiB,CAAC;QACrD,OAAO,IAAI,CAAC,IAAI,CAAC,eAAe,CAAM,GAAG,EAAE,KAAK,EAAE,EAAE,CAAC,CAAC;IACxD,CAAC;IACD,UAAU,CAAC,KAAU;QACnB,IAAI,GAAG,GACL,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE;YACtB,0DAA0D,CAAC;QAC7D,OAAO,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;IAC3C,CAAC;IACD,gBAAgB,CAAC,KAAU;QACzB,IAAI,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,GAAG,oBAAoB,CAAC;QACxD,OAAO,IAAI,CAAC,IAAI,CAAC,eAAe,CAAM,GAAG,EAAE,KAAK,EAAE,EAAE,CAAC,CAAC;IACxD,CAAC;IACD,SAAS,CAAC,KAAU;QAClB,OAAO,IAAI,CAAC,IAAI,CAAC,eAAe,CAC9B,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,GAAG,qBAAqB,EAC9C,KAAK,EACL,EAAE,CACH,CAAC;IACJ,CAAC;;gFArIU,gBAAgB;mGAAhB,gBAAgB,WAAhB,gBAAgB,mBAFf,MAAM","file":"default~moodboard-src-lib-moodboard-module~shop-src-lib-shop-module.js","sourcesContent":["import { DOCUMENT, CommonModule } from '@angular/common';\nimport { forwardRef, EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, ChangeDetectorRef, Optional, Attribute, NgZone, Inject, Input, Output, ViewChild, NgModule } from '@angular/core';\nimport { mixinTabIndex, mixinColor, mixinDisabled, MatCommonModule } from '@angular/material/core';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { hasModifierKey, DOWN_ARROW, RIGHT_ARROW, UP_ARROW, LEFT_ARROW, HOME, END, PAGE_DOWN, PAGE_UP } from '@angular/cdk/keycodes';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { normalizePassiveListenerOptions } from '@angular/cdk/platform';\nimport { Subscription } from 'rxjs';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/cdk/bidi';\nimport * as ɵngcc3 from '@angular/common';\n\nconst _c0 = [\"sliderWrapper\"];\nconst activeEventOptions = normalizePassiveListenerOptions({ passive: false });\n/**\n * Visually, a 30px separation between tick marks looks best. This is very subjective but it is\n * the default separation we chose.\n */\nconst MIN_AUTO_TICK_SEPARATION = 30;\n/** The thumb gap size for a disabled slider. */\nconst DISABLED_THUMB_GAP = 7;\n/** The thumb gap size for a non-active slider at its minimum value. */\nconst MIN_VALUE_NONACTIVE_THUMB_GAP = 7;\n/** The thumb gap size for an active slider at its minimum value. */\nconst MIN_VALUE_ACTIVE_THUMB_GAP = 10;\n/**\n * Provider Expression that allows mat-slider to register as a ControlValueAccessor.\n * This allows it to support [(ngModel)] and [formControl].\n * @docs-private\n */\nconst MAT_SLIDER_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MatSlider),\n    multi: true\n};\n/** A simple change event emitted by the MatSlider component. */\nclass MatSliderChange {\n}\n// Boilerplate for applying mixins to MatSlider.\n/** @docs-private */\nclass MatSliderBase {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nconst _MatSliderMixinBase = mixinTabIndex(mixinColor(mixinDisabled(MatSliderBase), 'accent'));\n/**\n * Allows users to select from a range of values by moving the slider thumb. It is similar in\n * behavior to the native `<input type=\"range\">` element.\n */\nclass MatSlider extends _MatSliderMixinBase {\n    constructor(elementRef, _focusMonitor, _changeDetectorRef, _dir, tabIndex, _ngZone, _document, _animationMode) {\n        super(elementRef);\n        this._focusMonitor = _focusMonitor;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dir = _dir;\n        this._ngZone = _ngZone;\n        this._animationMode = _animationMode;\n        this._invert = false;\n        this._max = 100;\n        this._min = 0;\n        this._step = 1;\n        this._thumbLabel = false;\n        this._tickInterval = 0;\n        this._value = null;\n        this._vertical = false;\n        /** Event emitted when the slider value has changed. */\n        this.change = new EventEmitter();\n        /** Event emitted when the slider thumb moves. */\n        this.input = new EventEmitter();\n        /**\n         * Emits when the raw value of the slider changes. This is here primarily\n         * to facilitate the two-way binding for the `value` input.\n         * @docs-private\n         */\n        this.valueChange = new EventEmitter();\n        /** onTouch function registered via registerOnTouch (ControlValueAccessor). */\n        this.onTouched = () => { };\n        this._percent = 0;\n        /**\n         * Whether or not the thumb is sliding.\n         * Used to determine if there should be a transition for the thumb and fill track.\n         */\n        this._isSliding = false;\n        /**\n         * Whether or not the slider is active (clicked or sliding).\n         * Used to shrink and grow the thumb as according to the Material Design spec.\n         */\n        this._isActive = false;\n        /** The size of a tick interval as a percentage of the size of the track. */\n        this._tickIntervalPercent = 0;\n        /** The dimensions of the slider. */\n        this._sliderDimensions = null;\n        this._controlValueAccessorChangeFn = () => { };\n        /** Subscription to the Directionality change EventEmitter. */\n        this._dirChangeSubscription = Subscription.EMPTY;\n        /** Called when the user has put their pointer down on the slider. */\n        this._pointerDown = (event) => {\n            // Don't do anything if the slider is disabled or the\n            // user is using anything other than the main mouse button.\n            if (this.disabled || this._isSliding || (!isTouchEvent(event) && event.button !== 0)) {\n                return;\n            }\n            this._ngZone.run(() => {\n                const oldValue = this.value;\n                const pointerPosition = getPointerPositionOnPage(event);\n                this._isSliding = true;\n                this._lastPointerEvent = event;\n                event.preventDefault();\n                this._focusHostElement();\n                this._onMouseenter(); // Simulate mouseenter in case this is a mobile device.\n                this._bindGlobalEvents(event);\n                this._focusHostElement();\n                this._updateValueFromPosition(pointerPosition);\n                this._valueOnSlideStart = oldValue;\n                // Emit a change and input event if the value changed.\n                if (oldValue != this.value) {\n                    this._emitInputEvent();\n                }\n            });\n        };\n        /**\n         * Called when the user has moved their pointer after\n         * starting to drag. Bound on the document level.\n         */\n        this._pointerMove = (event) => {\n            if (this._isSliding) {\n                // Prevent the slide from selecting anything else.\n                event.preventDefault();\n                const oldValue = this.value;\n                this._lastPointerEvent = event;\n                this._updateValueFromPosition(getPointerPositionOnPage(event));\n                // Native range elements always emit `input` events when the value changed while sliding.\n                if (oldValue != this.value) {\n                    this._emitInputEvent();\n                }\n            }\n        };\n        /** Called when the user has lifted their pointer. Bound on the document level. */\n        this._pointerUp = (event) => {\n            if (this._isSliding) {\n                event.preventDefault();\n                this._removeGlobalEvents();\n                this._isSliding = false;\n                if (this._valueOnSlideStart != this.value && !this.disabled) {\n                    this._emitChangeEvent();\n                }\n                this._valueOnSlideStart = this._lastPointerEvent = null;\n            }\n        };\n        /** Called when the window has lost focus. */\n        this._windowBlur = () => {\n            // If the window is blurred while dragging we need to stop dragging because the\n            // browser won't dispatch the `mouseup` and `touchend` events anymore.\n            if (this._lastPointerEvent) {\n                this._pointerUp(this._lastPointerEvent);\n            }\n        };\n        this._document = _document;\n        this.tabIndex = parseInt(tabIndex) || 0;\n        _ngZone.runOutsideAngular(() => {\n            const element = elementRef.nativeElement;\n            element.addEventListener('mousedown', this._pointerDown, activeEventOptions);\n            element.addEventListener('touchstart', this._pointerDown, activeEventOptions);\n        });\n    }\n    /** Whether the slider is inverted. */\n    get invert() { return this._invert; }\n    set invert(value) {\n        this._invert = coerceBooleanProperty(value);\n    }\n    /** The maximum value that the slider can have. */\n    get max() { return this._max; }\n    set max(v) {\n        this._max = coerceNumberProperty(v, this._max);\n        this._percent = this._calculatePercentage(this._value);\n        // Since this also modifies the percentage, we need to let the change detection know.\n        this._changeDetectorRef.markForCheck();\n    }\n    /** The minimum value that the slider can have. */\n    get min() { return this._min; }\n    set min(v) {\n        this._min = coerceNumberProperty(v, this._min);\n        // If the value wasn't explicitly set by the user, set it to the min.\n        if (this._value === null) {\n            this.value = this._min;\n        }\n        this._percent = this._calculatePercentage(this._value);\n        // Since this also modifies the percentage, we need to let the change detection know.\n        this._changeDetectorRef.markForCheck();\n    }\n    /** The values at which the thumb will snap. */\n    get step() { return this._step; }\n    set step(v) {\n        this._step = coerceNumberProperty(v, this._step);\n        if (this._step % 1 !== 0) {\n            this._roundToDecimal = this._step.toString().split('.').pop().length;\n        }\n        // Since this could modify the label, we need to notify the change detection.\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Whether or not to show the thumb label. */\n    get thumbLabel() { return this._thumbLabel; }\n    set thumbLabel(value) { this._thumbLabel = coerceBooleanProperty(value); }\n    /**\n     * How often to show ticks. Relative to the step so that a tick always appears on a step.\n     * Ex: Tick interval of 4 with a step of 3 will draw a tick every 4 steps (every 12 values).\n     */\n    get tickInterval() { return this._tickInterval; }\n    set tickInterval(value) {\n        if (value === 'auto') {\n            this._tickInterval = 'auto';\n        }\n        else if (typeof value === 'number' || typeof value === 'string') {\n            this._tickInterval = coerceNumberProperty(value, this._tickInterval);\n        }\n        else {\n            this._tickInterval = 0;\n        }\n    }\n    /** Value of the slider. */\n    get value() {\n        // If the value needs to be read and it is still uninitialized, initialize it to the min.\n        if (this._value === null) {\n            this.value = this._min;\n        }\n        return this._value;\n    }\n    set value(v) {\n        if (v !== this._value) {\n            let value = coerceNumberProperty(v);\n            // While incrementing by a decimal we can end up with values like 33.300000000000004.\n            // Truncate it to ensure that it matches the label and to make it easier to work with.\n            if (this._roundToDecimal && value !== this.min && value !== this.max) {\n                value = parseFloat(value.toFixed(this._roundToDecimal));\n            }\n            this._value = value;\n            this._percent = this._calculatePercentage(this._value);\n            // Since this also modifies the percentage, we need to let the change detection know.\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /** Whether the slider is vertical. */\n    get vertical() { return this._vertical; }\n    set vertical(value) {\n        this._vertical = coerceBooleanProperty(value);\n    }\n    /** The value to be used for display purposes. */\n    get displayValue() {\n        if (this.displayWith) {\n            // Value is never null but since setters and getters cannot have\n            // different types, the value getter is also typed to return null.\n            return this.displayWith(this.value);\n        }\n        // Note that this could be improved further by rounding something like 0.999 to 1 or\n        // 0.899 to 0.9, however it is very performance sensitive, because it gets called on\n        // every change detection cycle.\n        if (this._roundToDecimal && this.value && this.value % 1 !== 0) {\n            return this.value.toFixed(this._roundToDecimal);\n        }\n        return this.value || 0;\n    }\n    /** set focus to the host element */\n    focus(options) {\n        this._focusHostElement(options);\n    }\n    /** blur the host element */\n    blur() {\n        this._blurHostElement();\n    }\n    /** The percentage of the slider that coincides with the value. */\n    get percent() { return this._clamp(this._percent); }\n    /**\n     * Whether the axis of the slider is inverted.\n     * (i.e. whether moving the thumb in the positive x or y direction decreases the slider's value).\n     */\n    _shouldInvertAxis() {\n        // Standard non-inverted mode for a vertical slider should be dragging the thumb from bottom to\n        // top. However from a y-axis standpoint this is inverted.\n        return this.vertical ? !this.invert : this.invert;\n    }\n    /** Whether the slider is at its minimum value. */\n    _isMinValue() {\n        return this.percent === 0;\n    }\n    /**\n     * The amount of space to leave between the slider thumb and the track fill & track background\n     * elements.\n     */\n    _getThumbGap() {\n        if (this.disabled) {\n            return DISABLED_THUMB_GAP;\n        }\n        if (this._isMinValue() && !this.thumbLabel) {\n            return this._isActive ? MIN_VALUE_ACTIVE_THUMB_GAP : MIN_VALUE_NONACTIVE_THUMB_GAP;\n        }\n        return 0;\n    }\n    /** CSS styles for the track background element. */\n    _getTrackBackgroundStyles() {\n        const axis = this.vertical ? 'Y' : 'X';\n        const scale = this.vertical ? `1, ${1 - this.percent}, 1` : `${1 - this.percent}, 1, 1`;\n        const sign = this._shouldInvertMouseCoords() ? '-' : '';\n        return {\n            // scale3d avoids some rendering issues in Chrome. See #12071.\n            transform: `translate${axis}(${sign}${this._getThumbGap()}px) scale3d(${scale})`\n        };\n    }\n    /** CSS styles for the track fill element. */\n    _getTrackFillStyles() {\n        const percent = this.percent;\n        const axis = this.vertical ? 'Y' : 'X';\n        const scale = this.vertical ? `1, ${percent}, 1` : `${percent}, 1, 1`;\n        const sign = this._shouldInvertMouseCoords() ? '' : '-';\n        return {\n            // scale3d avoids some rendering issues in Chrome. See #12071.\n            transform: `translate${axis}(${sign}${this._getThumbGap()}px) scale3d(${scale})`,\n            // iOS Safari has a bug where it won't re-render elements which start of as `scale(0)` until\n            // something forces a style recalculation on it. Since we'll end up with `scale(0)` when\n            // the value of the slider is 0, we can easily get into this situation. We force a\n            // recalculation by changing the element's `display` when it goes from 0 to any other value.\n            display: percent === 0 ? 'none' : ''\n        };\n    }\n    /** CSS styles for the ticks container element. */\n    _getTicksContainerStyles() {\n        let axis = this.vertical ? 'Y' : 'X';\n        // For a horizontal slider in RTL languages we push the ticks container off the left edge\n        // instead of the right edge to avoid causing a horizontal scrollbar to appear.\n        let sign = !this.vertical && this._getDirection() == 'rtl' ? '' : '-';\n        let offset = this._tickIntervalPercent / 2 * 100;\n        return {\n            'transform': `translate${axis}(${sign}${offset}%)`\n        };\n    }\n    /** CSS styles for the ticks element. */\n    _getTicksStyles() {\n        let tickSize = this._tickIntervalPercent * 100;\n        let backgroundSize = this.vertical ? `2px ${tickSize}%` : `${tickSize}% 2px`;\n        let axis = this.vertical ? 'Y' : 'X';\n        // Depending on the direction we pushed the ticks container, push the ticks the opposite\n        // direction to re-center them but clip off the end edge. In RTL languages we need to flip the\n        // ticks 180 degrees so we're really cutting off the end edge abd not the start.\n        let sign = !this.vertical && this._getDirection() == 'rtl' ? '-' : '';\n        let rotate = !this.vertical && this._getDirection() == 'rtl' ? ' rotate(180deg)' : '';\n        let styles = {\n            'backgroundSize': backgroundSize,\n            // Without translateZ ticks sometimes jitter as the slider moves on Chrome & Firefox.\n            'transform': `translateZ(0) translate${axis}(${sign}${tickSize / 2}%)${rotate}`\n        };\n        if (this._isMinValue() && this._getThumbGap()) {\n            const shouldInvertAxis = this._shouldInvertAxis();\n            let side;\n            if (this.vertical) {\n                side = shouldInvertAxis ? 'Bottom' : 'Top';\n            }\n            else {\n                side = shouldInvertAxis ? 'Right' : 'Left';\n            }\n            styles[`padding${side}`] = `${this._getThumbGap()}px`;\n        }\n        return styles;\n    }\n    _getThumbContainerStyles() {\n        const shouldInvertAxis = this._shouldInvertAxis();\n        let axis = this.vertical ? 'Y' : 'X';\n        // For a horizontal slider in RTL languages we push the thumb container off the left edge\n        // instead of the right edge to avoid causing a horizontal scrollbar to appear.\n        let invertOffset = (this._getDirection() == 'rtl' && !this.vertical) ? !shouldInvertAxis : shouldInvertAxis;\n        let offset = (invertOffset ? this.percent : 1 - this.percent) * 100;\n        return {\n            'transform': `translate${axis}(-${offset}%)`\n        };\n    }\n    /**\n     * Whether mouse events should be converted to a slider position by calculating their distance\n     * from the right or bottom edge of the slider as opposed to the top or left.\n     */\n    _shouldInvertMouseCoords() {\n        const shouldInvertAxis = this._shouldInvertAxis();\n        return (this._getDirection() == 'rtl' && !this.vertical) ? !shouldInvertAxis : shouldInvertAxis;\n    }\n    /** The language direction for this slider element. */\n    _getDirection() {\n        return (this._dir && this._dir.value == 'rtl') ? 'rtl' : 'ltr';\n    }\n    ngAfterViewInit() {\n        this._focusMonitor\n            .monitor(this._elementRef, true)\n            .subscribe((origin) => {\n            this._isActive = !!origin && origin !== 'keyboard';\n            this._changeDetectorRef.detectChanges();\n        });\n        if (this._dir) {\n            this._dirChangeSubscription = this._dir.change.subscribe(() => {\n                this._changeDetectorRef.markForCheck();\n            });\n        }\n    }\n    ngOnDestroy() {\n        const element = this._elementRef.nativeElement;\n        element.removeEventListener('mousedown', this._pointerDown, activeEventOptions);\n        element.removeEventListener('touchstart', this._pointerDown, activeEventOptions);\n        this._lastPointerEvent = null;\n        this._removeGlobalEvents();\n        this._focusMonitor.stopMonitoring(this._elementRef);\n        this._dirChangeSubscription.unsubscribe();\n    }\n    _onMouseenter() {\n        if (this.disabled) {\n            return;\n        }\n        // We save the dimensions of the slider here so we can use them to update the spacing of the\n        // ticks and determine where on the slider click and slide events happen.\n        this._sliderDimensions = this._getSliderDimensions();\n        this._updateTickIntervalPercent();\n    }\n    _onFocus() {\n        // We save the dimensions of the slider here so we can use them to update the spacing of the\n        // ticks and determine where on the slider click and slide events happen.\n        this._sliderDimensions = this._getSliderDimensions();\n        this._updateTickIntervalPercent();\n    }\n    _onBlur() {\n        this.onTouched();\n    }\n    _onKeydown(event) {\n        if (this.disabled || hasModifierKey(event)) {\n            return;\n        }\n        const oldValue = this.value;\n        switch (event.keyCode) {\n            case PAGE_UP:\n                this._increment(10);\n                break;\n            case PAGE_DOWN:\n                this._increment(-10);\n                break;\n            case END:\n                this.value = this.max;\n                break;\n            case HOME:\n                this.value = this.min;\n                break;\n            case LEFT_ARROW:\n                // NOTE: For a sighted user it would make more sense that when they press an arrow key on an\n                // inverted slider the thumb moves in that direction. However for a blind user, nothing\n                // about the slider indicates that it is inverted. They will expect left to be decrement,\n                // regardless of how it appears on the screen. For speakers ofRTL languages, they probably\n                // expect left to mean increment. Therefore we flip the meaning of the side arrow keys for\n                // RTL. For inverted sliders we prefer a good a11y experience to having it \"look right\" for\n                // sighted users, therefore we do not swap the meaning.\n                this._increment(this._getDirection() == 'rtl' ? 1 : -1);\n                break;\n            case UP_ARROW:\n                this._increment(1);\n                break;\n            case RIGHT_ARROW:\n                // See comment on LEFT_ARROW about the conditions under which we flip the meaning.\n                this._increment(this._getDirection() == 'rtl' ? -1 : 1);\n                break;\n            case DOWN_ARROW:\n                this._increment(-1);\n                break;\n            default:\n                // Return if the key is not one that we explicitly handle to avoid calling preventDefault on\n                // it.\n                return;\n        }\n        if (oldValue != this.value) {\n            this._emitInputEvent();\n            this._emitChangeEvent();\n        }\n        this._isSliding = true;\n        event.preventDefault();\n    }\n    _onKeyup() {\n        this._isSliding = false;\n    }\n    /** Use defaultView of injected document if available or fallback to global window reference */\n    _getWindow() {\n        return this._document.defaultView || window;\n    }\n    /**\n     * Binds our global move and end events. They're bound at the document level and only while\n     * dragging so that the user doesn't have to keep their pointer exactly over the slider\n     * as they're swiping across the screen.\n     */\n    _bindGlobalEvents(triggerEvent) {\n        // Note that we bind the events to the `document`, because it allows us to capture\n        // drag cancel events where the user's pointer is outside the browser window.\n        const document = this._document;\n        const isTouch = isTouchEvent(triggerEvent);\n        const moveEventName = isTouch ? 'touchmove' : 'mousemove';\n        const endEventName = isTouch ? 'touchend' : 'mouseup';\n        document.addEventListener(moveEventName, this._pointerMove, activeEventOptions);\n        document.addEventListener(endEventName, this._pointerUp, activeEventOptions);\n        if (isTouch) {\n            document.addEventListener('touchcancel', this._pointerUp, activeEventOptions);\n        }\n        const window = this._getWindow();\n        if (typeof window !== 'undefined' && window) {\n            window.addEventListener('blur', this._windowBlur);\n        }\n    }\n    /** Removes any global event listeners that we may have added. */\n    _removeGlobalEvents() {\n        const document = this._document;\n        document.removeEventListener('mousemove', this._pointerMove, activeEventOptions);\n        document.removeEventListener('mouseup', this._pointerUp, activeEventOptions);\n        document.removeEventListener('touchmove', this._pointerMove, activeEventOptions);\n        document.removeEventListener('touchend', this._pointerUp, activeEventOptions);\n        document.removeEventListener('touchcancel', this._pointerUp, activeEventOptions);\n        const window = this._getWindow();\n        if (typeof window !== 'undefined' && window) {\n            window.removeEventListener('blur', this._windowBlur);\n        }\n    }\n    /** Increments the slider by the given number of steps (negative number decrements). */\n    _increment(numSteps) {\n        this.value = this._clamp((this.value || 0) + this.step * numSteps, this.min, this.max);\n    }\n    /** Calculate the new value from the new physical location. The value will always be snapped. */\n    _updateValueFromPosition(pos) {\n        if (!this._sliderDimensions) {\n            return;\n        }\n        let offset = this.vertical ? this._sliderDimensions.top : this._sliderDimensions.left;\n        let size = this.vertical ? this._sliderDimensions.height : this._sliderDimensions.width;\n        let posComponent = this.vertical ? pos.y : pos.x;\n        // The exact value is calculated from the event and used to find the closest snap value.\n        let percent = this._clamp((posComponent - offset) / size);\n        if (this._shouldInvertMouseCoords()) {\n            percent = 1 - percent;\n        }\n        // Since the steps may not divide cleanly into the max value, if the user\n        // slid to 0 or 100 percent, we jump to the min/max value. This approach\n        // is slightly more intuitive than using `Math.ceil` below, because it\n        // follows the user's pointer closer.\n        if (percent === 0) {\n            this.value = this.min;\n        }\n        else if (percent === 1) {\n            this.value = this.max;\n        }\n        else {\n            const exactValue = this._calculateValue(percent);\n            // This calculation finds the closest step by finding the closest\n            // whole number divisible by the step relative to the min.\n            const closestValue = Math.round((exactValue - this.min) / this.step) * this.step + this.min;\n            // The value needs to snap to the min and max.\n            this.value = this._clamp(closestValue, this.min, this.max);\n        }\n    }\n    /** Emits a change event if the current value is different from the last emitted value. */\n    _emitChangeEvent() {\n        this._controlValueAccessorChangeFn(this.value);\n        this.valueChange.emit(this.value);\n        this.change.emit(this._createChangeEvent());\n    }\n    /** Emits an input event when the current value is different from the last emitted value. */\n    _emitInputEvent() {\n        this.input.emit(this._createChangeEvent());\n    }\n    /** Updates the amount of space between ticks as a percentage of the width of the slider. */\n    _updateTickIntervalPercent() {\n        if (!this.tickInterval || !this._sliderDimensions) {\n            return;\n        }\n        if (this.tickInterval == 'auto') {\n            let trackSize = this.vertical ? this._sliderDimensions.height : this._sliderDimensions.width;\n            let pixelsPerStep = trackSize * this.step / (this.max - this.min);\n            let stepsPerTick = Math.ceil(MIN_AUTO_TICK_SEPARATION / pixelsPerStep);\n            let pixelsPerTick = stepsPerTick * this.step;\n            this._tickIntervalPercent = pixelsPerTick / trackSize;\n        }\n        else {\n            this._tickIntervalPercent = this.tickInterval * this.step / (this.max - this.min);\n        }\n    }\n    /** Creates a slider change object from the specified value. */\n    _createChangeEvent(value = this.value) {\n        let event = new MatSliderChange();\n        event.source = this;\n        event.value = value;\n        return event;\n    }\n    /** Calculates the percentage of the slider that a value is. */\n    _calculatePercentage(value) {\n        return ((value || 0) - this.min) / (this.max - this.min);\n    }\n    /** Calculates the value a percentage of the slider corresponds to. */\n    _calculateValue(percentage) {\n        return this.min + percentage * (this.max - this.min);\n    }\n    /** Return a number between two numbers. */\n    _clamp(value, min = 0, max = 1) {\n        return Math.max(min, Math.min(value, max));\n    }\n    /**\n     * Get the bounding client rect of the slider track element.\n     * The track is used rather than the native element to ignore the extra space that the thumb can\n     * take up.\n     */\n    _getSliderDimensions() {\n        return this._sliderWrapper ? this._sliderWrapper.nativeElement.getBoundingClientRect() : null;\n    }\n    /**\n     * Focuses the native element.\n     * Currently only used to allow a blur event to fire but will be used with keyboard input later.\n     */\n    _focusHostElement(options) {\n        this._elementRef.nativeElement.focus(options);\n    }\n    /** Blurs the native element. */\n    _blurHostElement() {\n        this._elementRef.nativeElement.blur();\n    }\n    /**\n     * Sets the model value. Implemented as part of ControlValueAccessor.\n     * @param value\n     */\n    writeValue(value) {\n        this.value = value;\n    }\n    /**\n     * Registers a callback to be triggered when the value has changed.\n     * Implemented as part of ControlValueAccessor.\n     * @param fn Callback to be registered.\n     */\n    registerOnChange(fn) {\n        this._controlValueAccessorChangeFn = fn;\n    }\n    /**\n     * Registers a callback to be triggered when the component is touched.\n     * Implemented as part of ControlValueAccessor.\n     * @param fn Callback to be registered.\n     */\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    /**\n     * Sets whether the component should be disabled.\n     * Implemented as part of ControlValueAccessor.\n     * @param isDisabled\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n    }\n}\nMatSlider.ɵfac = function MatSlider_Factory(t) { return new (t || MatSlider)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Directionality, 8), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatSlider.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatSlider, selectors: [[\"mat-slider\"]], viewQuery: function MatSlider_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, 1);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._sliderWrapper = _t.first);\n    } }, hostAttrs: [\"role\", \"slider\", 1, \"mat-slider\", \"mat-focus-indicator\"], hostVars: 29, hostBindings: function MatSlider_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"focus\", function MatSlider_focus_HostBindingHandler() { return ctx._onFocus(); })(\"blur\", function MatSlider_blur_HostBindingHandler() { return ctx._onBlur(); })(\"keydown\", function MatSlider_keydown_HostBindingHandler($event) { return ctx._onKeydown($event); })(\"keyup\", function MatSlider_keyup_HostBindingHandler() { return ctx._onKeyup(); })(\"mouseenter\", function MatSlider_mouseenter_HostBindingHandler() { return ctx._onMouseenter(); })(\"selectstart\", function MatSlider_selectstart_HostBindingHandler($event) { return $event.preventDefault(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"tabIndex\", ctx.tabIndex);\n        ɵngcc0.ɵɵattribute(\"aria-disabled\", ctx.disabled)(\"aria-valuemax\", ctx.max)(\"aria-valuemin\", ctx.min)(\"aria-valuenow\", ctx.value)(\"aria-valuetext\", ctx.valueText == null ? ctx.displayValue : ctx.valueText)(\"aria-orientation\", ctx.vertical ? \"vertical\" : \"horizontal\");\n        ɵngcc0.ɵɵclassProp(\"mat-slider-disabled\", ctx.disabled)(\"mat-slider-has-ticks\", ctx.tickInterval)(\"mat-slider-horizontal\", !ctx.vertical)(\"mat-slider-axis-inverted\", ctx._shouldInvertAxis())(\"mat-slider-invert-mouse-coords\", ctx._shouldInvertMouseCoords())(\"mat-slider-sliding\", ctx._isSliding)(\"mat-slider-thumb-label-showing\", ctx.thumbLabel)(\"mat-slider-vertical\", ctx.vertical)(\"mat-slider-min-value\", ctx._isMinValue())(\"mat-slider-hide-last-tick\", ctx.disabled || ctx._isMinValue() && ctx._getThumbGap() && ctx._shouldInvertAxis())(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    } }, inputs: { disabled: \"disabled\", color: \"color\", tabIndex: \"tabIndex\", invert: \"invert\", max: \"max\", min: \"min\", value: \"value\", step: \"step\", thumbLabel: \"thumbLabel\", tickInterval: \"tickInterval\", vertical: \"vertical\", displayWith: \"displayWith\", valueText: \"valueText\" }, outputs: { change: \"change\", input: \"input\", valueChange: \"valueChange\" }, exportAs: [\"matSlider\"], features: [ɵngcc0.ɵɵProvidersFeature([MAT_SLIDER_VALUE_ACCESSOR]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 13, vars: 6, consts: [[1, \"mat-slider-wrapper\"], [\"sliderWrapper\", \"\"], [1, \"mat-slider-track-wrapper\"], [1, \"mat-slider-track-background\", 3, \"ngStyle\"], [1, \"mat-slider-track-fill\", 3, \"ngStyle\"], [1, \"mat-slider-ticks-container\", 3, \"ngStyle\"], [1, \"mat-slider-ticks\", 3, \"ngStyle\"], [1, \"mat-slider-thumb-container\", 3, \"ngStyle\"], [1, \"mat-slider-focus-ring\"], [1, \"mat-slider-thumb\"], [1, \"mat-slider-thumb-label\"], [1, \"mat-slider-thumb-label-text\"]], template: function MatSlider_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵelementStart(2, \"div\", 2);\n        ɵngcc0.ɵɵelement(3, \"div\", 3);\n        ɵngcc0.ɵɵelement(4, \"div\", 4);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(5, \"div\", 5);\n        ɵngcc0.ɵɵelement(6, \"div\", 6);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(7, \"div\", 7);\n        ɵngcc0.ɵɵelement(8, \"div\", 8);\n        ɵngcc0.ɵɵelement(9, \"div\", 9);\n        ɵngcc0.ɵɵelementStart(10, \"div\", 10);\n        ɵngcc0.ɵɵelementStart(11, \"span\", 11);\n        ɵngcc0.ɵɵtext(12);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngStyle\", ctx._getTrackBackgroundStyles());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngStyle\", ctx._getTrackFillStyles());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngStyle\", ctx._getTicksContainerStyles());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngStyle\", ctx._getTicksStyles());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngStyle\", ctx._getThumbContainerStyles());\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵtextInterpolate(ctx.displayValue);\n    } }, directives: [ɵngcc3.NgStyle], styles: [\".mat-slider{display:inline-block;position:relative;box-sizing:border-box;padding:8px;outline:none;vertical-align:middle}.mat-slider:not(.mat-slider-disabled):active,.mat-slider.mat-slider-sliding:not(.mat-slider-disabled){cursor:-webkit-grabbing;cursor:grabbing}.mat-slider-wrapper{position:absolute;-webkit-print-color-adjust:exact;color-adjust:exact}.mat-slider-track-wrapper{position:absolute;top:0;left:0;overflow:hidden}.mat-slider-track-fill{position:absolute;transform-origin:0 0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-track-background{position:absolute;transform-origin:100% 100%;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-ticks-container{position:absolute;left:0;top:0;overflow:hidden}.mat-slider-ticks{background-repeat:repeat;background-clip:content-box;box-sizing:border-box;opacity:0;transition:opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-thumb-container{position:absolute;z-index:1;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-focus-ring{position:absolute;width:30px;height:30px;border-radius:50%;transform:scale(0);opacity:0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider.cdk-keyboard-focused .mat-slider-focus-ring,.mat-slider.cdk-program-focused .mat-slider-focus-ring{transform:scale(1);opacity:1}.mat-slider:not(.mat-slider-disabled):not(.mat-slider-sliding) .mat-slider-thumb-label,.mat-slider:not(.mat-slider-disabled):not(.mat-slider-sliding) .mat-slider-thumb{cursor:-webkit-grab;cursor:grab}.mat-slider-thumb{position:absolute;right:-10px;bottom:-10px;box-sizing:border-box;width:20px;height:20px;border:3px solid transparent;border-radius:50%;transform:scale(0.7);transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),border-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-thumb-label{display:none;align-items:center;justify-content:center;position:absolute;width:28px;height:28px;border-radius:50%;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),border-radius 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.cdk-high-contrast-active .mat-slider-thumb-label{outline:solid 1px}.mat-slider-thumb-label-text{z-index:1;opacity:0;transition:opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-sliding .mat-slider-track-fill,.mat-slider-sliding .mat-slider-track-background,.mat-slider-sliding .mat-slider-thumb-container{transition-duration:0ms}.mat-slider-has-ticks .mat-slider-wrapper::after{content:\\\"\\\";position:absolute;border-width:0;border-style:solid;opacity:0;transition:opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-has-ticks.cdk-focused:not(.mat-slider-hide-last-tick) .mat-slider-wrapper::after,.mat-slider-has-ticks:hover:not(.mat-slider-hide-last-tick) .mat-slider-wrapper::after{opacity:1}.mat-slider-has-ticks.cdk-focused:not(.mat-slider-disabled) .mat-slider-ticks,.mat-slider-has-ticks:hover:not(.mat-slider-disabled) .mat-slider-ticks{opacity:1}.mat-slider-thumb-label-showing .mat-slider-focus-ring{display:none}.mat-slider-thumb-label-showing .mat-slider-thumb-label{display:flex}.mat-slider-axis-inverted .mat-slider-track-fill{transform-origin:100% 100%}.mat-slider-axis-inverted .mat-slider-track-background{transform-origin:0 0}.mat-slider:not(.mat-slider-disabled).cdk-focused.mat-slider-thumb-label-showing .mat-slider-thumb{transform:scale(0)}.mat-slider:not(.mat-slider-disabled).cdk-focused .mat-slider-thumb-label{border-radius:50% 50% 0}.mat-slider:not(.mat-slider-disabled).cdk-focused .mat-slider-thumb-label-text{opacity:1}.mat-slider:not(.mat-slider-disabled).cdk-mouse-focused .mat-slider-thumb,.mat-slider:not(.mat-slider-disabled).cdk-touch-focused .mat-slider-thumb,.mat-slider:not(.mat-slider-disabled).cdk-program-focused .mat-slider-thumb{border-width:2px;transform:scale(1)}.mat-slider-disabled .mat-slider-focus-ring{transform:scale(0);opacity:0}.mat-slider-disabled .mat-slider-thumb{border-width:4px;transform:scale(0.5)}.mat-slider-disabled .mat-slider-thumb-label{display:none}.mat-slider-horizontal{height:48px;min-width:128px}.mat-slider-horizontal .mat-slider-wrapper{height:2px;top:23px;left:8px;right:8px}.mat-slider-horizontal .mat-slider-wrapper::after{height:2px;border-left-width:2px;right:0;top:0}.mat-slider-horizontal .mat-slider-track-wrapper{height:2px;width:100%}.mat-slider-horizontal .mat-slider-track-fill{height:2px;width:100%;transform:scaleX(0)}.mat-slider-horizontal .mat-slider-track-background{height:2px;width:100%;transform:scaleX(1)}.mat-slider-horizontal .mat-slider-ticks-container{height:2px;width:100%}.cdk-high-contrast-active .mat-slider-horizontal .mat-slider-ticks-container{height:0;outline:solid 2px;top:1px}.mat-slider-horizontal .mat-slider-ticks{height:2px;width:100%}.mat-slider-horizontal .mat-slider-thumb-container{width:100%;height:0;top:50%}.mat-slider-horizontal .mat-slider-focus-ring{top:-15px;right:-15px}.mat-slider-horizontal .mat-slider-thumb-label{right:-14px;top:-40px;transform:translateY(26px) scale(0.01) rotate(45deg)}.mat-slider-horizontal .mat-slider-thumb-label-text{transform:rotate(-45deg)}.mat-slider-horizontal.cdk-focused .mat-slider-thumb-label{transform:rotate(45deg)}.cdk-high-contrast-active .mat-slider-horizontal.cdk-focused .mat-slider-thumb-label,.cdk-high-contrast-active .mat-slider-horizontal.cdk-focused .mat-slider-thumb-label-text{transform:none}.mat-slider-vertical{width:48px;min-height:128px}.mat-slider-vertical .mat-slider-wrapper{width:2px;top:8px;bottom:8px;left:23px}.mat-slider-vertical .mat-slider-wrapper::after{width:2px;border-top-width:2px;bottom:0;left:0}.mat-slider-vertical .mat-slider-track-wrapper{height:100%;width:2px}.mat-slider-vertical .mat-slider-track-fill{height:100%;width:2px;transform:scaleY(0)}.mat-slider-vertical .mat-slider-track-background{height:100%;width:2px;transform:scaleY(1)}.mat-slider-vertical .mat-slider-ticks-container{width:2px;height:100%}.cdk-high-contrast-active .mat-slider-vertical .mat-slider-ticks-container{width:0;outline:solid 2px;left:1px}.mat-slider-vertical .mat-slider-focus-ring{bottom:-15px;left:-15px}.mat-slider-vertical .mat-slider-ticks{width:2px;height:100%}.mat-slider-vertical .mat-slider-thumb-container{height:100%;width:0;left:50%}.mat-slider-vertical .mat-slider-thumb{-webkit-backface-visibility:hidden;backface-visibility:hidden}.mat-slider-vertical .mat-slider-thumb-label{bottom:-14px;left:-40px;transform:translateX(26px) scale(0.01) rotate(-45deg)}.mat-slider-vertical .mat-slider-thumb-label-text{transform:rotate(45deg)}.mat-slider-vertical.cdk-focused .mat-slider-thumb-label{transform:rotate(-45deg)}[dir=rtl] .mat-slider-wrapper::after{left:0;right:auto}[dir=rtl] .mat-slider-horizontal .mat-slider-track-fill{transform-origin:100% 100%}[dir=rtl] .mat-slider-horizontal .mat-slider-track-background{transform-origin:0 0}[dir=rtl] .mat-slider-horizontal.mat-slider-axis-inverted .mat-slider-track-fill{transform-origin:0 0}[dir=rtl] .mat-slider-horizontal.mat-slider-axis-inverted .mat-slider-track-background{transform-origin:100% 100%}.mat-slider._mat-animation-noopable .mat-slider-track-fill,.mat-slider._mat-animation-noopable .mat-slider-track-background,.mat-slider._mat-animation-noopable .mat-slider-ticks,.mat-slider._mat-animation-noopable .mat-slider-thumb-container,.mat-slider._mat-animation-noopable .mat-slider-focus-ring,.mat-slider._mat-animation-noopable .mat-slider-thumb,.mat-slider._mat-animation-noopable .mat-slider-thumb-label,.mat-slider._mat-animation-noopable .mat-slider-thumb-label-text,.mat-slider._mat-animation-noopable .mat-slider-has-ticks .mat-slider-wrapper::after{transition:none}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatSlider.ctorParameters = () => [\n    { type: ElementRef },\n    { type: FocusMonitor },\n    { type: ChangeDetectorRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatSlider.propDecorators = {\n    invert: [{ type: Input }],\n    max: [{ type: Input }],\n    min: [{ type: Input }],\n    step: [{ type: Input }],\n    thumbLabel: [{ type: Input }],\n    tickInterval: [{ type: Input }],\n    value: [{ type: Input }],\n    displayWith: [{ type: Input }],\n    valueText: [{ type: Input }],\n    vertical: [{ type: Input }],\n    change: [{ type: Output }],\n    input: [{ type: Output }],\n    valueChange: [{ type: Output }],\n    _sliderWrapper: [{ type: ViewChild, args: ['sliderWrapper',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSlider, [{\n        type: Component,\n        args: [{\n                selector: 'mat-slider',\n                exportAs: 'matSlider',\n                providers: [MAT_SLIDER_VALUE_ACCESSOR],\n                host: {\n                    '(focus)': '_onFocus()',\n                    '(blur)': '_onBlur()',\n                    '(keydown)': '_onKeydown($event)',\n                    '(keyup)': '_onKeyup()',\n                    '(mouseenter)': '_onMouseenter()',\n                    // On Safari starting to slide temporarily triggers text selection mode which\n                    // show the wrong cursor. We prevent it by stopping the `selectstart` event.\n                    '(selectstart)': '$event.preventDefault()',\n                    'class': 'mat-slider mat-focus-indicator',\n                    'role': 'slider',\n                    '[tabIndex]': 'tabIndex',\n                    '[attr.aria-disabled]': 'disabled',\n                    '[attr.aria-valuemax]': 'max',\n                    '[attr.aria-valuemin]': 'min',\n                    '[attr.aria-valuenow]': 'value',\n                    // NVDA and Jaws appear to announce the `aria-valuenow` by calculating its percentage based\n                    // on its value between `aria-valuemin` and `aria-valuemax`. Due to how decimals are handled,\n                    // it can cause the slider to read out a very long value like 0.20000068 if the current value\n                    // is 0.2 with a min of 0 and max of 1. We work around the issue by setting `aria-valuetext`\n                    // to the same value that we set on the slider's thumb which will be truncated.\n                    '[attr.aria-valuetext]': 'valueText == null ? displayValue : valueText',\n                    '[attr.aria-orientation]': 'vertical ? \"vertical\" : \"horizontal\"',\n                    '[class.mat-slider-disabled]': 'disabled',\n                    '[class.mat-slider-has-ticks]': 'tickInterval',\n                    '[class.mat-slider-horizontal]': '!vertical',\n                    '[class.mat-slider-axis-inverted]': '_shouldInvertAxis()',\n                    // Class binding which is only used by the test harness as there is no other\n                    // way for the harness to detect if mouse coordinates need to be inverted.\n                    '[class.mat-slider-invert-mouse-coords]': '_shouldInvertMouseCoords()',\n                    '[class.mat-slider-sliding]': '_isSliding',\n                    '[class.mat-slider-thumb-label-showing]': 'thumbLabel',\n                    '[class.mat-slider-vertical]': 'vertical',\n                    '[class.mat-slider-min-value]': '_isMinValue()',\n                    '[class.mat-slider-hide-last-tick]': 'disabled || _isMinValue() && _getThumbGap() && _shouldInvertAxis()',\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"'\n                },\n                template: \"<div class=\\\"mat-slider-wrapper\\\" #sliderWrapper>\\n  <div class=\\\"mat-slider-track-wrapper\\\">\\n    <div class=\\\"mat-slider-track-background\\\" [ngStyle]=\\\"_getTrackBackgroundStyles()\\\"></div>\\n    <div class=\\\"mat-slider-track-fill\\\" [ngStyle]=\\\"_getTrackFillStyles()\\\"></div>\\n  </div>\\n  <div class=\\\"mat-slider-ticks-container\\\" [ngStyle]=\\\"_getTicksContainerStyles()\\\">\\n    <div class=\\\"mat-slider-ticks\\\" [ngStyle]=\\\"_getTicksStyles()\\\"></div>\\n  </div>\\n  <div class=\\\"mat-slider-thumb-container\\\" [ngStyle]=\\\"_getThumbContainerStyles()\\\">\\n    <div class=\\\"mat-slider-focus-ring\\\"></div>\\n    <div class=\\\"mat-slider-thumb\\\"></div>\\n    <div class=\\\"mat-slider-thumb-label\\\">\\n      <span class=\\\"mat-slider-thumb-label-text\\\">{{displayValue}}</span>\\n    </div>\\n  </div>\\n</div>\\n\",\n                inputs: ['disabled', 'color', 'tabIndex'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-slider{display:inline-block;position:relative;box-sizing:border-box;padding:8px;outline:none;vertical-align:middle}.mat-slider:not(.mat-slider-disabled):active,.mat-slider.mat-slider-sliding:not(.mat-slider-disabled){cursor:-webkit-grabbing;cursor:grabbing}.mat-slider-wrapper{position:absolute;-webkit-print-color-adjust:exact;color-adjust:exact}.mat-slider-track-wrapper{position:absolute;top:0;left:0;overflow:hidden}.mat-slider-track-fill{position:absolute;transform-origin:0 0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-track-background{position:absolute;transform-origin:100% 100%;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-ticks-container{position:absolute;left:0;top:0;overflow:hidden}.mat-slider-ticks{background-repeat:repeat;background-clip:content-box;box-sizing:border-box;opacity:0;transition:opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-thumb-container{position:absolute;z-index:1;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-focus-ring{position:absolute;width:30px;height:30px;border-radius:50%;transform:scale(0);opacity:0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider.cdk-keyboard-focused .mat-slider-focus-ring,.mat-slider.cdk-program-focused .mat-slider-focus-ring{transform:scale(1);opacity:1}.mat-slider:not(.mat-slider-disabled):not(.mat-slider-sliding) .mat-slider-thumb-label,.mat-slider:not(.mat-slider-disabled):not(.mat-slider-sliding) .mat-slider-thumb{cursor:-webkit-grab;cursor:grab}.mat-slider-thumb{position:absolute;right:-10px;bottom:-10px;box-sizing:border-box;width:20px;height:20px;border:3px solid transparent;border-radius:50%;transform:scale(0.7);transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),border-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-thumb-label{display:none;align-items:center;justify-content:center;position:absolute;width:28px;height:28px;border-radius:50%;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),border-radius 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.cdk-high-contrast-active .mat-slider-thumb-label{outline:solid 1px}.mat-slider-thumb-label-text{z-index:1;opacity:0;transition:opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-sliding .mat-slider-track-fill,.mat-slider-sliding .mat-slider-track-background,.mat-slider-sliding .mat-slider-thumb-container{transition-duration:0ms}.mat-slider-has-ticks .mat-slider-wrapper::after{content:\\\"\\\";position:absolute;border-width:0;border-style:solid;opacity:0;transition:opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-has-ticks.cdk-focused:not(.mat-slider-hide-last-tick) .mat-slider-wrapper::after,.mat-slider-has-ticks:hover:not(.mat-slider-hide-last-tick) .mat-slider-wrapper::after{opacity:1}.mat-slider-has-ticks.cdk-focused:not(.mat-slider-disabled) .mat-slider-ticks,.mat-slider-has-ticks:hover:not(.mat-slider-disabled) .mat-slider-ticks{opacity:1}.mat-slider-thumb-label-showing .mat-slider-focus-ring{display:none}.mat-slider-thumb-label-showing .mat-slider-thumb-label{display:flex}.mat-slider-axis-inverted .mat-slider-track-fill{transform-origin:100% 100%}.mat-slider-axis-inverted .mat-slider-track-background{transform-origin:0 0}.mat-slider:not(.mat-slider-disabled).cdk-focused.mat-slider-thumb-label-showing .mat-slider-thumb{transform:scale(0)}.mat-slider:not(.mat-slider-disabled).cdk-focused .mat-slider-thumb-label{border-radius:50% 50% 0}.mat-slider:not(.mat-slider-disabled).cdk-focused .mat-slider-thumb-label-text{opacity:1}.mat-slider:not(.mat-slider-disabled).cdk-mouse-focused .mat-slider-thumb,.mat-slider:not(.mat-slider-disabled).cdk-touch-focused .mat-slider-thumb,.mat-slider:not(.mat-slider-disabled).cdk-program-focused .mat-slider-thumb{border-width:2px;transform:scale(1)}.mat-slider-disabled .mat-slider-focus-ring{transform:scale(0);opacity:0}.mat-slider-disabled .mat-slider-thumb{border-width:4px;transform:scale(0.5)}.mat-slider-disabled .mat-slider-thumb-label{display:none}.mat-slider-horizontal{height:48px;min-width:128px}.mat-slider-horizontal .mat-slider-wrapper{height:2px;top:23px;left:8px;right:8px}.mat-slider-horizontal .mat-slider-wrapper::after{height:2px;border-left-width:2px;right:0;top:0}.mat-slider-horizontal .mat-slider-track-wrapper{height:2px;width:100%}.mat-slider-horizontal .mat-slider-track-fill{height:2px;width:100%;transform:scaleX(0)}.mat-slider-horizontal .mat-slider-track-background{height:2px;width:100%;transform:scaleX(1)}.mat-slider-horizontal .mat-slider-ticks-container{height:2px;width:100%}.cdk-high-contrast-active .mat-slider-horizontal .mat-slider-ticks-container{height:0;outline:solid 2px;top:1px}.mat-slider-horizontal .mat-slider-ticks{height:2px;width:100%}.mat-slider-horizontal .mat-slider-thumb-container{width:100%;height:0;top:50%}.mat-slider-horizontal .mat-slider-focus-ring{top:-15px;right:-15px}.mat-slider-horizontal .mat-slider-thumb-label{right:-14px;top:-40px;transform:translateY(26px) scale(0.01) rotate(45deg)}.mat-slider-horizontal .mat-slider-thumb-label-text{transform:rotate(-45deg)}.mat-slider-horizontal.cdk-focused .mat-slider-thumb-label{transform:rotate(45deg)}.cdk-high-contrast-active .mat-slider-horizontal.cdk-focused .mat-slider-thumb-label,.cdk-high-contrast-active .mat-slider-horizontal.cdk-focused .mat-slider-thumb-label-text{transform:none}.mat-slider-vertical{width:48px;min-height:128px}.mat-slider-vertical .mat-slider-wrapper{width:2px;top:8px;bottom:8px;left:23px}.mat-slider-vertical .mat-slider-wrapper::after{width:2px;border-top-width:2px;bottom:0;left:0}.mat-slider-vertical .mat-slider-track-wrapper{height:100%;width:2px}.mat-slider-vertical .mat-slider-track-fill{height:100%;width:2px;transform:scaleY(0)}.mat-slider-vertical .mat-slider-track-background{height:100%;width:2px;transform:scaleY(1)}.mat-slider-vertical .mat-slider-ticks-container{width:2px;height:100%}.cdk-high-contrast-active .mat-slider-vertical .mat-slider-ticks-container{width:0;outline:solid 2px;left:1px}.mat-slider-vertical .mat-slider-focus-ring{bottom:-15px;left:-15px}.mat-slider-vertical .mat-slider-ticks{width:2px;height:100%}.mat-slider-vertical .mat-slider-thumb-container{height:100%;width:0;left:50%}.mat-slider-vertical .mat-slider-thumb{-webkit-backface-visibility:hidden;backface-visibility:hidden}.mat-slider-vertical .mat-slider-thumb-label{bottom:-14px;left:-40px;transform:translateX(26px) scale(0.01) rotate(-45deg)}.mat-slider-vertical .mat-slider-thumb-label-text{transform:rotate(45deg)}.mat-slider-vertical.cdk-focused .mat-slider-thumb-label{transform:rotate(-45deg)}[dir=rtl] .mat-slider-wrapper::after{left:0;right:auto}[dir=rtl] .mat-slider-horizontal .mat-slider-track-fill{transform-origin:100% 100%}[dir=rtl] .mat-slider-horizontal .mat-slider-track-background{transform-origin:0 0}[dir=rtl] .mat-slider-horizontal.mat-slider-axis-inverted .mat-slider-track-fill{transform-origin:0 0}[dir=rtl] .mat-slider-horizontal.mat-slider-axis-inverted .mat-slider-track-background{transform-origin:100% 100%}.mat-slider._mat-animation-noopable .mat-slider-track-fill,.mat-slider._mat-animation-noopable .mat-slider-track-background,.mat-slider._mat-animation-noopable .mat-slider-ticks,.mat-slider._mat-animation-noopable .mat-slider-thumb-container,.mat-slider._mat-animation-noopable .mat-slider-focus-ring,.mat-slider._mat-animation-noopable .mat-slider-thumb,.mat-slider._mat-animation-noopable .mat-slider-thumb-label,.mat-slider._mat-animation-noopable .mat-slider-thumb-label-text,.mat-slider._mat-animation-noopable .mat-slider-has-ticks .mat-slider-wrapper::after{transition:none}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.FocusMonitor }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc2.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { change: [{\n            type: Output\n        }], input: [{\n            type: Output\n        }], valueChange: [{\n            type: Output\n        }], invert: [{\n            type: Input\n        }], max: [{\n            type: Input\n        }], min: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], step: [{\n            type: Input\n        }], thumbLabel: [{\n            type: Input\n        }], tickInterval: [{\n            type: Input\n        }], vertical: [{\n            type: Input\n        }], displayWith: [{\n            type: Input\n        }], valueText: [{\n            type: Input\n        }], _sliderWrapper: [{\n            type: ViewChild,\n            args: ['sliderWrapper']\n        }] }); })();\n/** Returns whether an event is a touch event. */\nfunction isTouchEvent(event) {\n    // This function is called for every pixel that the user has dragged so we need it to be\n    // as fast as possible. Since we only bind mouse events and touch events, we can assume\n    // that if the event's name starts with `t`, it's a touch event.\n    return event.type[0] === 't';\n}\n/** Gets the coordinates of a touch or mouse event relative to the viewport. */\nfunction getPointerPositionOnPage(event) {\n    // `touches` will be empty for start/end events so we have to fall back to `changedTouches`.\n    const point = isTouchEvent(event) ? (event.touches[0] || event.changedTouches[0]) : event;\n    return { x: point.clientX, y: point.clientY };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatSliderModule {\n}\nMatSliderModule.ɵfac = function MatSliderModule_Factory(t) { return new (t || MatSliderModule)(); };\nMatSliderModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatSliderModule });\nMatSliderModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ imports: [[CommonModule, MatCommonModule], MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatSliderModule, { declarations: function () { return [MatSlider]; }, imports: function () { return [CommonModule, MatCommonModule]; }, exports: function () { return [MatSlider, MatCommonModule]; } }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSliderModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule, MatCommonModule],\n                exports: [MatSlider, MatCommonModule],\n                declarations: [MatSlider]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_SLIDER_VALUE_ACCESSOR, MatSlider, MatSliderChange, MatSliderModule };\n\n//# sourceMappingURL=slider.js.map","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'lib-shop-home',\r\n  templateUrl: './shop-home.component.html',\r\n  styleUrls: ['./shop-home.component.scss']\r\n})\r\nexport class ShopHomeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<lib-shop></lib-shop>","/*\r\n * Public API Surface of quote\r\n */\r\n\r\nexport * from './lib/quote.service';\r\nexport * from './lib/common/components/quote-header/quote-header.component';\r\nexport * from './lib/common/components/total-cell-renderer/total-cell-renderer.component';\r\nexport * from './lib/common/components/item-type/item-type.component';\r\nexport * from './lib/quote.module';\r\nexport * from './lib/common/quote-common.module';\r\nexport * from './lib/common/components/quote-create-form/quote-create-form.component';\r\nexport * from './lib/common/components/addproduct/addproduct.component';\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ShopComponent } from './shop/shop.component';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSliderModule } from '@angular/material/slider';\r\nimport { MatStepperModule } from '@angular/material/stepper';\r\nimport { InfiniteScrollModule } from 'ngx-infinite-scroll';\r\nimport { CoreModule } from 'projects/core/src/public-api';\r\nimport { STEPPER_GLOBAL_OPTIONS } from '@angular/cdk/stepper';\r\nimport { ProductDetailsComponent } from './product-details/product-details.component';\r\nimport {MatDatepickerModule} from '@angular/material/datepicker';\r\nimport { MatNativeDateModule } from '@angular/material/core';\r\n\r\n@NgModule({\r\n  declarations: [ShopComponent,ProductDetailsComponent],\r\n  imports: [\r\n    CommonModule,\r\n    MatCardModule,\r\n    MatButtonModule,\r\n    CommonModule,\r\n    MatDialogModule,\r\n    MatStepperModule,\r\n    FlexLayoutModule,\r\n    MatCardModule,\r\n    FlexLayoutModule,\r\n    MatExpansionModule,\r\n    MatSelectModule,\r\n    MatCheckboxModule,\r\n    MatIconModule,\r\n    MatFormFieldModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatInputModule,\r\n    MatRadioModule,\r\n    CoreModule,\r\n    MatSliderModule,\r\n    MatDividerModule,\r\n    InfiniteScrollModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule\r\n  ],\r\n  exports: [ShopComponent, ProductDetailsComponent],\r\n  providers: [\r\n    {\r\n      provide: STEPPER_GLOBAL_OPTIONS,\r\n      useValue: { displayDefaultIndicatorType: false },\r\n    },\r\n  ],\r\n})\r\n\r\nexport class ShopCommonModule {}\r\n","import {\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Input,\r\n  OnInit,\r\n  Output,\r\n  TemplateRef,\r\n  ViewChild,\r\n} from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { CoreService, ScrollService } from 'projects/core/src/public-api';\r\nimport { MoodboardService } from 'projects/moodboard/src/lib/services/moodboard.service';\r\nimport {\r\n  combineLatest,\r\n  forkJoin,\r\n  merge,\r\n  of,\r\n  Subject,\r\n  Subscription,\r\n  zip,\r\n} from 'rxjs';\r\nimport {\r\n  concatAll,\r\n  debounceTime,\r\n  distinctUntilChanged,\r\n  map,\r\n  mergeAll,\r\n  mergeMap,\r\n  switchMap,\r\n  tap,\r\n} from 'rxjs/operators';\r\nimport { ShopService } from '../../service/shop.service';\r\nimport { AfterViewInit } from '@angular/core';\r\nimport { MatStepper } from '@angular/material/stepper';\r\nimport { StepperSelectionEvent } from '@angular/cdk/stepper';\r\nimport { AbstractControl, FormControl, FormGroup } from '@angular/forms';\r\nimport { InfiniteScrollDirective } from 'ngx-infinite-scroll';\r\nimport { promise } from 'protractor';\r\n\r\n@Component({\r\n  selector: 'lib-shop',\r\n  templateUrl: './shop.component.html',\r\n  styleUrls: ['./shop.component.scss'],\r\n})\r\nexport class ShopComponent implements OnInit, AfterViewInit {\r\n  @Input() source: 'SHOP' | 'MD' = 'SHOP';\r\n  @Input() lLimit = 0;\r\n  @Input() hLimit = 12;\r\n  @Input() searchPlaceholder = 'Search Products';\r\n\r\n  @Output() productClick: EventEmitter<any> = new EventEmitter();\r\n\r\n  productList: Array<any> = [];\r\n  selectedCategory: Array<any> = [];\r\n  selectedCity: Array<any> = [];\r\n\r\n  subscription: Subscription | null = null;\r\n  categoriesList: Subject<any[]> = new Subject();\r\n  catListDefault: any[] = [];\r\n  cityList: Subject<any[]> = new Subject();\r\n  cityListDefault: any[] = [];\r\n\r\n  min_price: any = '';\r\n  max_price: any = '';\r\n  minRentalPrice: any = '';\r\n  maxRentalPrice: any = '';\r\n\r\n  // filter form group;\r\n  filterFormGroup: FormGroup = new FormGroup({});\r\n  daterange =  new FormGroup({\r\n    start: new FormControl(null),\r\n    end: new FormControl(null),\r\n  })\r\n\r\n  min_price_inventory: any = '';\r\n  startCount = 0;\r\n  selectedIndex = 0;\r\n  show = false;\r\n  isLoading = false;\r\n\r\n  @ViewChild('quickFilter', { static: true }) template: ElementRef | null =\r\n    null;\r\n  @ViewChild('stepper') private myStepper: MatStepper | null = null;\r\n  searchKeywords: any = '';\r\n  oldSearchKeyword: any = '';\r\n  defaultFilters: any = null;\r\n  @ViewChild(InfiniteScrollDirective)\r\n  infiniteScroll: InfiniteScrollDirective | null = null;\r\n  constructor(\r\n    private _shopService: ShopService,\r\n    private moodboardService: MoodboardService,\r\n    private _dialog: MatDialog,\r\n    private _router: Router,\r\n    private route: ActivatedRoute,\r\n    private _coreService: CoreService,\r\n    private _cd:ChangeDetectorRef\r\n  ) {\r\n    this.selectedIndex = 0;\r\n  }\r\n  ngOnInit(): void {\r\n    this.route?.queryParams.subscribe((route) => {\r\n      this.searchKeywords = route?.keywords;\r\n      this._coreService.loadUserPreference().subscribe((data) => {\r\n        this.defaultFilters = data.result;\r\n        this.max_price = this.defaultFilters?.max_price ?? '';\r\n        this.min_price = this.defaultFilters?.min_price ?? '';\r\n        this.maxRentalPrice = this.defaultFilters?.rental_max_price ?? '';\r\n        this.minRentalPrice = this.defaultFilters?.rental_min_price ?? '';\r\n        this.min_price_inventory =\r\n          this.defaultFilters?.min_price_inventory ?? '';\r\n        zip(this.getCategory(), this.getCity()).subscribe((data) => {\r\n          this.getProducts();\r\n        });\r\n      });\r\n    });\r\n\r\n    this.filterFormGroup.addControl('minRentalPrice', new FormControl());\r\n    this.filterFormGroup.addControl('maxRentalPrice', new FormControl());\r\n    this.filterFormGroup.addControl('minPrice', new FormControl());\r\n    this.filterFormGroup.addControl('maxPrice', new FormControl());\r\n    this.filterFormGroup.addControl('qty', new FormControl());\r\n\r\n  }\r\n\r\n  get controls() {\r\n    return this.filterFormGroup.controls\r\n  }\r\n\r\n  validateErrors() {\r\n    if ((+this.min_price || +this.min_price == 0) && this.max_price != '' && this.min_price != '') {\r\n      if (+this.min_price > +this.max_price) {\r\n        this.filterFormGroup.setErrors({ buyPrice: true })\r\n      }\r\n      else {\r\n        this.filterFormGroup.setErrors(null)\r\n        //this.validateRent()\r\n      }\r\n    }\r\n    else if ((+this.max_price || +this.max_price == 0) && this.min_price != '' && this.max_price != '') {\r\n      if (+this.max_price < +this.min_price) {\r\n        this.filterFormGroup.setErrors({ buyPrice: true })\r\n      }\r\n      else {\r\n        this.filterFormGroup.setErrors(null)\r\n        //this.validateRent()\r\n      }\r\n    }\r\n   \r\n  }\r\n\r\n  validateRent(){\r\n    if ((+this.minRentalPrice || +this.minRentalPrice == 0) && this.maxRentalPrice != '' && this.minRentalPrice != '') {\r\n      if (+this.minRentalPrice > +this.maxRentalPrice) {\r\n        this.filterFormGroup.setErrors({ rentalPrice: true })\r\n      }\r\n      else {\r\n        this.filterFormGroup.setErrors(null)\r\n        //this.validateErrors()\r\n      }\r\n    }\r\n    else if ((+this.maxRentalPrice || +this.maxRentalPrice == 0) && this.minRentalPrice != ''  && this.maxRentalPrice != '') {\r\n      if (+this.maxRentalPrice < +this.minRentalPrice) {\r\n        this.filterFormGroup.setErrors({ rentalPrice: true })\r\n      }\r\n      else {\r\n        this.filterFormGroup.setErrors(null)\r\n        //this.validateErrors()\r\n      }\r\n    }\r\n  }\r\n\r\n  getUserPreference() {\r\n    this._coreService.loadUserPreference().subscribe((data) => {\r\n      this.defaultFilters = data;\r\n      this.getCity();\r\n    });\r\n  }\r\n\r\n  public goto(index: number): void {\r\n    if (index == 0) return; // First step is not selected anymore -ok\r\n    this.selectedIndex = index;\r\n  }\r\n\r\n  resetFilter() {\r\n    this._shopService.resetFilters().subscribe((data) => {\r\n      if (data.statusCode == 200) {\r\n        this.cityListDefault.map((el) => (el.isChecked = false));\r\n        this.cityListDefault.sort((a, b) =>\r\n          a.warehouse_name > b.warehouse_name ? 1 : -1\r\n        );\r\n        this.catListDefault.map((el) => (el.isChecked = false));\r\n        this.catListDefault.sort((a, b) => (a.name > b.name ? 1 : -1));\r\n\r\n        this.categoriesList.next(this.catListDefault);\r\n        this.cityList.next(this.cityListDefault);\r\n\r\n        // refresh selected\r\n        this.selectedCategory = this.catListDefault.filter((x) => x.isChecked);\r\n        this.selectedCity = this.cityListDefault.filter((x) => x.isChecked);\r\n\r\n        // reset default value\r\n        this.min_price = '';\r\n        this.max_price = '';\r\n        this.minRentalPrice = '';\r\n        this.maxRentalPrice = '';\r\n        this.min_price_inventory = '';\r\n        this.resetList();\r\n        this.daterange?.reset();\r\n        this.getProducts();\r\n      }\r\n    });\r\n  }\r\n\r\n  getCategory() {\r\n    return new Promise((res, rej) => {\r\n      this.moodboardService\r\n        .getCategoryList()\r\n        .pipe(\r\n          map((item: any) => {\r\n            item.result.map((i: any, index: any) => {\r\n              i['isChecked'] = this.defaultFilters?.category\r\n                ?.split(',')\r\n                .includes(i.sgid + '');\r\n              i['order'] = index;\r\n              return i;\r\n            });\r\n            return item;\r\n          })\r\n        )\r\n        .subscribe(\r\n          (response: any) => {\r\n            this.categoriesList.next(response.result);\r\n            this.catListDefault = response.result;\r\n            this.selectedCategory = this.catListDefault.filter(\r\n              (item) => item.isChecked\r\n            );\r\n            res(1);\r\n          },\r\n          (error) => {\r\n            rej(0);\r\n          }\r\n        );\r\n    });\r\n  }\r\n  getCity() {\r\n    return new Promise((res, rej) => {\r\n      this.moodboardService\r\n        .getCityList()\r\n        .pipe(\r\n          map((item: any) => {\r\n            item.data.map((i: any, index: any) => {\r\n              i['isChecked'] = this.defaultFilters?.warehouse\r\n                ?.split(',')\r\n                .includes(i.sgid + '');\r\n              i['order'] = index;\r\n              return i;\r\n            });\r\n            return item;\r\n          })\r\n        )\r\n        .subscribe(\r\n          (response: any) => {\r\n            this.cityList.next(response.data);\r\n            this.cityListDefault = response.data;\r\n            this.selectedCity = this.cityListDefault.filter(\r\n              (item) => item.isChecked\r\n            );\r\n            res(1);\r\n          },\r\n          (error) => {\r\n            rej(0);\r\n          }\r\n        );\r\n    });\r\n  }\r\n\r\n  // checked\r\n  onCityChecked(city: any, i: any) {\r\n    city.isChecked = !city.isChecked;\r\n    this.cityListDefault.sort((a, b) => (a.isChecked > b.isChecked ? -1 : 1));\r\n    this.cityList.next(this.cityListDefault);\r\n    this.selectedCity = this.cityListDefault.filter((item) => item.isChecked);\r\n    this.resetList();\r\n    this.getProducts();\r\n  }\r\n\r\n  onCategoriesChecked(cat: any, i: any) {\r\n    cat.isChecked = !cat.isChecked;\r\n    this.catListDefault.sort((a, b) => (a.isChecked > b.isChecked ? -1 : 1));\r\n    this.categoriesList.next(this.catListDefault);\r\n    this.selectedCategory = this.catListDefault.filter((x) => x.isChecked);\r\n    this.resetList();\r\n    this.getProducts();\r\n  }\r\n  // unchecked.\r\n  onCityUnchecked(city: any) {\r\n    city.isChecked = false;\r\n    this.cityListDefault.sort((a, b) => (a.isChecked > b.isChecked ? -1 : 1));\r\n    this.cityList.next(this.cityListDefault);\r\n    this.selectedCity = this.cityListDefault.filter((item) => item.isChecked);\r\n    this.resetList();\r\n    this.getProducts();\r\n  }\r\n\r\n  onCatUnchecked(cat: any) {\r\n    cat.isChecked = false;\r\n    this.catListDefault.sort((a, b) => (a.isChecked > b.isChecked ? -1 : 1));\r\n    this.categoriesList.next(this.catListDefault);\r\n    this.selectedCategory = this.catListDefault.filter((x) => x.isChecked);\r\n    this.resetList();\r\n    this.getProducts();\r\n  }\r\n\r\n  // remove\r\n  onPriceRemove() {\r\n    this.min_price = '';\r\n    this.max_price = '';\r\n    this.resetList();\r\n    this.getProducts();\r\n  }\r\n  onRentalPriceRemove() {\r\n    this.minRentalPrice = '';\r\n    this.maxRentalPrice = '';\r\n    this.resetList();\r\n    this.getProducts();\r\n  }\r\n  onDateRangeRemove() {\r\n    this.daterange?.reset();\r\n    this.getProducts()\r\n  }\r\n\r\n  dateRangeSelection() {\r\n    if (this.daterange?.get('start')?.value &&\r\n      this.daterange?.get('end')?.value) {\r\n      this.resetList();\r\n      this.getProducts();\r\n    }\r\n  }\r\n\r\n  // price range\r\n  onMinPriceRangeChange(ev: any) {\r\n    this.min_price = ev;\r\n    this.validateErrors();\r\n  }\r\n  onMaxPriceRangeChange(ev: any) {\r\n    this.max_price = ev;\r\n    this.validateErrors();\r\n  }\r\n  // rental price range\r\n  onMinRentalPriceRangeChange(ev: any) {\r\n    this.minRentalPrice = ev;\r\n    this.validateRent();\r\n  }\r\n  onMaxRentalPriceRangeChange(ev: any) {\r\n    this.maxRentalPrice = ev;\r\n    this.validateRent();\r\n  }\r\n  onQtyChange(ev: any) {\r\n    this.min_price_inventory = ev;\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (this.source == 'SHOP') {\r\n      this.openModal(this.template);\r\n    }\r\n    this.infiniteScroll?.scrolled\r\n      .pipe(debounceTime(2000), distinctUntilChanged())\r\n      .subscribe((resp) => {\r\n        this.infiniteScroll?.ngOnDestroy();\r\n        this.infiniteScroll?.setup();\r\n        this.getProducts(true);\r\n      });\r\n    let sub = of(\r\n      this.filterFormGroup.controls['minRentalPrice'].valueChanges,\r\n      this.filterFormGroup.controls['maxRentalPrice'].valueChanges,\r\n      this.filterFormGroup.controls['minPrice'].valueChanges,\r\n      this.filterFormGroup.controls['maxPrice'].valueChanges,\r\n      this.filterFormGroup.controls['qty'].valueChanges\r\n    );\r\n    sub\r\n      .pipe(mergeAll())\r\n      .pipe(\r\n        tap((data ) => {\r\n          if (data) {\r\n            this.isLoading = true;\r\n            this.resetList();\r\n          }\r\n        }),\r\n        debounceTime(1000),\r\n        distinctUntilChanged()\r\n      )\r\n      .subscribe((data) => {\r\n        if (data && this.filterFormGroup.valid) {\r\n          this.resetList();\r\n          this.getProducts();\r\n        }\r\n      });\r\n    let buy = of(\r\n      this.filterFormGroup?.controls['minPrice']?.valueChanges,\r\n      this.filterFormGroup?.controls['maxPrice']?.valueChanges\r\n    )\r\n    buy.pipe(mergeAll()).pipe(debounceTime(1000),\r\n        distinctUntilChanged()).subscribe((data: any) => {\r\n          if (data && this.filterFormGroup.valid && this.min_price != '' && this.max_price != '') {\r\n            const obj = {\r\n              \"min_price\": this.min_price,\r\n              \"max_price\": this.max_price\r\n            }\r\n            this._shopService.generateRent(obj).subscribe((data) => {\r\n              if (data) {\r\n                this.minRentalPrice = data.minRent\r\n                this.maxRentalPrice = data.maxRent\r\n              }\r\n            })\r\n          }\r\n        })\r\n  }\r\n  openModal(templateRef: any) {\r\n    let dialogRef = this._dialog.open(templateRef, {\r\n      width: '90%',\r\n      maxHeight: '95vh',\r\n      panelClass: 'shop-dialog',\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      this.selectedIndex = 0;\r\n    });\r\n  }\r\n  closeModal() {\r\n    this._dialog.closeAll();\r\n  }\r\n  filterProductPopup() {\r\n    this.show = true;\r\n    this.closeModal();\r\n    this.getProducts();\r\n  }\r\n  getProducts(scroll?: boolean) {\r\n    this.isLoading = true;\r\n    let catIds = this.catListDefault\r\n      .filter((item) => item.isChecked)\r\n      .map((i) => i.sgid)\r\n      .toString();\r\n    let cityIds = this.cityListDefault\r\n      .filter((item) => item.isChecked)\r\n      .map((i) => i.sgid)\r\n      .toString();\r\n    let param: any = {\r\n      start: this.lLimit,\r\n      count: this.hLimit,\r\n      category: catIds,\r\n      warehouse: cityIds,\r\n      keywords: this.searchKeywords,\r\n    };\r\n    if (this.min_price != '') param['min_price'] = this.min_price;\r\n    if (this.max_price != '') param['max_price'] = this.max_price;\r\n    if (this.minRentalPrice != '')\r\n      param['rental_min_price'] = this.minRentalPrice;\r\n    if (this.maxRentalPrice != '')\r\n      param['rental_max_price'] = this.maxRentalPrice;\r\n\r\n    if (this.min_price_inventory != '')\r\n      param['min_price_inventory'] = this.min_price_inventory;\r\n    if (this.daterange?.get('start')?.value &&\r\n      this.daterange?.get('end')?.value) {\r\n      param['preferred_delivery_start_date'] = this.getFormattedDate(this.daterange?.get('start')?.value);\r\n      param['preferred_delivery_end_date'] = this.getFormattedDate(this.daterange?.get('end')?.value);\r\n    }\r\n    this._shopService.getProducts(param).subscribe(\r\n      (data) => {\r\n        this.isLoading = false;\r\n        if (data && data.result && data.result.length >= 0) {\r\n          if (scroll) {\r\n            this.productList.push(...data.result);\r\n          } else {\r\n            this.productList = data.result;\r\n          }\r\n          this.lLimit += this.hLimit;\r\n        }\r\n      },\r\n      (error) => {\r\n        this.productList = [];\r\n      }\r\n    );\r\n  }\r\n\r\n  getFormattedDate(val: Date) {\r\n    return `${val.getFullYear()}-${val.getMonth() + 1}-${val.getDate()}`\r\n  }\r\n\r\n  itemClick(product: any) {\r\n    this.productClick.emit(product);\r\n    if (this.source == 'SHOP') {\r\n      this._router.navigate([\r\n        'shop',\r\n        product.product_id,\r\n        product.warehouse_id,\r\n        product.sku_variation_id,\r\n      ]);\r\n    }\r\n  }\r\n\r\n  search(input: string) {\r\n    this.searchKeywords = input ?? null;\r\n    this.resetList();\r\n    this.getProducts();\r\n  }\r\n\r\n  resetList() {\r\n    this.productList = [];\r\n    this.startCount = 0;\r\n    this.lLimit = 0;\r\n  }\r\n}\r\n","<div class=\"mb\" fxLayout=\"column\" fxLayoutAlign=\" stretch \">\r\n  <div\r\n    class=\"mb-details\"\r\n    fxLayout=\"row\"\r\n    fxLayoutGap=\"2rem\"\r\n    fxLayoutAlign=\"stretch\"\r\n  >\r\n    <div\r\n      class=\"left\"\r\n      fxFlex=\"22\"\r\n      fxLayoutGap=\"2rem\"\r\n      style=\"padding: 1rem\"\r\n      fxLayout=\"column\"\r\n      fxLayoutAlign=\"stretch center\"\r\n    >\r\n      <div class=\"filter\" fxLayout=\"row wrap\" fxLayoutGap=\"2rem\">\r\n        <button\r\n          *ngIf=\"source == 'SHOP'\"\r\n          mat-raised-button\r\n          (click)=\"openModal(quickFilter)\"\r\n          color=\"accent\"\r\n          aria-label=\"\"\r\n        >\r\n          Quick Filter\r\n        </button>\r\n        <button\r\n          mat-raised-button\r\n          (click)=\"resetFilter()\"\r\n          color=\"accent\"\r\n          aria-label=\"\"\r\n        >\r\n          Clear\r\n        </button>\r\n      </div>\r\n      <mat-card>\r\n        <form [formGroup]=\"filterFormGroup\" action=\"\">\r\n          <div class=\"filter\">\r\n            <div class=\"filter-inner\">\r\n              <i class=\"fas fa-funnel-dollar filter-img filter-icon\"></i>\r\n              <div class=\"filter-label\">\r\n                <label>APPLIED FILTER</label>\r\n              </div>\r\n            </div>\r\n            <div class=\"check-wrapper\" fxLayout=\"column\">\r\n              <div class=\"row mt-2 mr-2 pl-2 pull-left\">\r\n                <ng-container *ngFor=\"let cat of selectedCategory\">\r\n                  <span\r\n                    (click)=\"onCatUnchecked(cat)\"\r\n                    class=\"badge badge-secondary p-2 pointer mr-2 mb-2\"\r\n                  >\r\n                    <span *ngIf=\"cat.name\">{{ cat.name }}</span>\r\n                    <span>&nbsp;<i class=\"fa fa-close\"></i></span>\r\n                  </span>\r\n                </ng-container>\r\n\r\n                <ng-container *ngFor=\"let city of selectedCity\">\r\n                  <span\r\n                    (click)=\"onCityUnchecked(city)\"\r\n                    class=\"badge badge-secondary p-2 pointer mr-2 mb-2\"\r\n                  >\r\n                    <span *ngIf=\"city.warehouse_name\">{{\r\n                      city.warehouse_name\r\n                    }}</span>\r\n                    <span>&nbsp;<i class=\"fa fa-close\"></i></span>\r\n                  </span>\r\n                </ng-container>\r\n                <ng-container>\r\n                  <span\r\n                    (click)=\"onPriceRemove()\"\r\n                    class=\"badge badge-secondary p-2 pointer mr-2 mb-2\"\r\n                    *ngIf=\"min_price != '' || max_price != ''\"\r\n                  >\r\n                    <span *ngIf=\"min_price\">{{ min_price }} </span> -\r\n                    <span *ngIf=\"max_price\">{{ max_price }}</span>\r\n                    <!-- <span *ngIf=\"min_price != ''\"> > {{ min_price }}</span\r\n                    > -->\r\n                    <!-- <span *ngIf=\"!min_price && max_price != ''\">\r\n                      {{ max_price }}</span\r\n                    > -->\r\n                    <span>&nbsp;<i class=\"fa fa-close\"></i></span>\r\n                  </span>\r\n                </ng-container>\r\n                <ng-container>\r\n                  <span\r\n                    (click)=\"onRentalPriceRemove()\"\r\n                    class=\"badge badge-secondary p-2 pointer mr-2 mb-2\"\r\n                    *ngIf=\"minRentalPrice != '' || maxRentalPrice != ''\"\r\n                  >\r\n                    Rental Price/12 months (\r\n                    <span *ngIf=\"minRentalPrice\"> {{ minRentalPrice }} </span> -\r\n                    <span *ngIf=\"maxRentalPrice\"> {{ maxRentalPrice }}</span> )\r\n                    <!-- <span *ngIf=\"minRentalPrice != '' && maxRentalPrice != ''\"\r\n                      >Rental Price/12 months ({{ minRentalPrice }} -\r\n                      {{ maxRentalPrice }})</span\r\n                    >\r\n                    <span *ngIf=\"minRentalPrice != ''\"\r\n                      >> Rental Price/12 months {{ minRentalPrice }}</span\r\n                    >\r\n                    <span *ngIf=\"!minRentalPrice && maxRentalPrice != ''\"\r\n                      >Rental Price/12 months {{ maxRentalPrice }}</span\r\n                    > -->\r\n                    <span>&nbsp;<i class=\"fa fa-close\"></i></span>\r\n                  </span>\r\n                </ng-container>\r\n                <span\r\n                  (click)=\"onQtyChange(0)\"\r\n                  class=\"badge badge-secondary p-2 pointer mr-2 mb-2\"\r\n                  *ngIf=\"min_price_inventory > 0\"\r\n                >\r\n                  <span *ngIf=\"min_price_inventory\"\r\n                    >Inv: {{ min_price_inventory }}</span\r\n                  >\r\n                  <span>&nbsp;<i class=\"fa fa-close\"></i></span>\r\n                </span>\r\n                <ng-container *ngIf=\"daterange?.value?.start && daterange?.value?.end\">\r\n                  <span\r\n                    class=\"badge badge-secondary p-2 pointer mr-2 mb-2\"\r\n                    (click)=\"onDateRangeRemove()\"\r\n                  >\r\n                    <span >{{\r\n                      daterange?.value?.start | date:'shortDate'\r\n                    }}-{{\r\n                      daterange?.value?.end | date:'shortDate'\r\n                    }}</span>\r\n                    <span>&nbsp;<i class=\"fa fa-close\"></i></span>\r\n                  </span>\r\n                </ng-container>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"filter\">\r\n            <div class=\"filter-inner\">\r\n              <img\r\n                src=\"assets/shop/locationNew.svg\"\r\n                class=\"filter-img\"\r\n                alt=\"Cities\"\r\n              />\r\n              <div class=\"filter-label\">\r\n                <label>CITIES</label>\r\n              </div>\r\n            </div>\r\n            <div class=\"check-wrapper\" fxLayout=\"column\">\r\n              <ng-container\r\n                *ngFor=\"\r\n                  let city of cityList | async | slice: 0:3;\r\n                  let i;\r\n                  as: index\r\n                \"\r\n              >\r\n                <mat-checkbox\r\n                  (change)=\"onCityChecked(city, i)\"\r\n                  [checked]=\"city.isChecked\"\r\n                  [title]=\"city.warehouse_name\"\r\n                  class=\"wrapText\"\r\n                >\r\n                  {{ city.warehouse_name }}\r\n                </mat-checkbox>\r\n              </ng-container>\r\n              <div class=\"view-more\" (click)=\"openModal(viewMoreCity)\">\r\n                View More\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"filter\">\r\n            <div class=\"filter-inner\">\r\n              <img\r\n                src=\"assets/shop/categoryNew.svg\"\r\n                class=\"filter-img\"\r\n                alt=\"Cities\"\r\n              />\r\n\r\n              <div class=\"filter-label\">\r\n                <label>CATEGORIES</label>\r\n              </div>\r\n            </div>\r\n            <div class=\"check-wrapper\" fxLayout=\"column\">\r\n              <ng-container\r\n                *ngFor=\"\r\n                  let cat of categoriesList | async | slice: 0:3;\r\n                  let i;\r\n                  as: index\r\n                \"\r\n              >\r\n                <mat-checkbox\r\n                  (change)=\"onCategoriesChecked(cat, i)\"\r\n                  [checked]=\"cat.isChecked\"\r\n                  [title]=\"cat.name\"\r\n                  class=\"wrapText\"\r\n                >\r\n                  {{ cat.name }}\r\n                </mat-checkbox>\r\n              </ng-container>\r\n              <div class=\"view-more\" (click)=\"openModal(viewMoreCat)\">\r\n                View More\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"filter\">\r\n            <div class=\"filter-inner\">\r\n              <img\r\n                src=\"assets/shop/budgetNew.svg\"\r\n                class=\"filter-img\"\r\n                alt=\"Cities\"\r\n              />\r\n\r\n              <div class=\"filter-label\">\r\n                <label>BUY PRICE</label>\r\n              </div>\r\n            </div>\r\n            <div fxLayoutGap=\"1rem\" fxLayout=\"row wrap\">\r\n              <mat-form-field fxFlex=\"40\" appearance=\"fill\">\r\n                <mat-label>Min $</mat-label>\r\n                <input\r\n                  type=\"number\"\r\n                  #minb\r\n                  formControlName=\"minPrice\"\r\n                  (input)=\"onMinPriceRangeChange(minb.value)\"\r\n                  value=\"{{ min_price }}\"\r\n                  matInput\r\n                  [min]=\"0\"\r\n                />\r\n              </mat-form-field>\r\n              <mat-form-field fxFlex=\"40\" appearance=\"fill\">\r\n                <mat-label>Max $</mat-label>\r\n                <input\r\n                  type=\"number\"\r\n                  #maxb\r\n                  formControlName=\"maxPrice\"\r\n                  (input)=\"onMaxPriceRangeChange(maxb.value)\"\r\n                  value=\"{{ max_price }}\"\r\n                  matInput\r\n                  [min]=\"1\"\r\n                />\r\n              </mat-form-field>\r\n              <div *ngIf=\"filterFormGroup?.errors?.buyPrice\" class=\"validation\">\r\n                Min Price should be less than Max Price\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"filter\">\r\n            <div class=\"filter-inner\">\r\n              <img\r\n                src=\"assets/shop/rent-icon.svg\"\r\n                class=\"filter-img\"\r\n                alt=\"Cities\"\r\n              />\r\n              <div class=\"filter-label\">\r\n                <label>RENTAL PRICE/12 MONTHS</label>\r\n              </div>\r\n            </div>\r\n            <div fxLayoutGap=\"1rem\" fxLayout=\"row wrap\">\r\n              <mat-form-field fxFlex=\"40\" appearance=\"fill\">\r\n                <mat-label>Min $</mat-label>\r\n                <input\r\n                  #minR\r\n                  formControlName=\"minRentalPrice\"\r\n                  (input)=\"onMinRentalPriceRangeChange(minR.value)\"\r\n                  value=\"{{ minRentalPrice }}\"\r\n                  matInput\r\n                  min=\"-1\"\r\n                />\r\n              </mat-form-field>\r\n              <mat-form-field fxFlex=\"40\" appearance=\"fill\">\r\n                <mat-label>Max $</mat-label>\r\n                <input\r\n                  type=\"number\"\r\n                  #maxR\r\n                  formControlName=\"maxRentalPrice\"\r\n                  (input)=\"onMaxRentalPriceRangeChange(maxR.value)\"\r\n                  value=\"{{ maxRentalPrice }}\"\r\n                  matInput\r\n                  min=\"1\"\r\n                />\r\n              </mat-form-field>\r\n              <div *ngIf=\"filterFormGroup?.errors?.rentalPrice\" class=\"validation\">\r\n                Min Price should be less than Max Price\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"filter\">\r\n            <div class=\"filter-inner\">\r\n              <img\r\n                src=\"assets/shop/quantityNew.svg\"\r\n                class=\"filter-img\"\r\n                alt=\"Cities\"\r\n              />\r\n              <div class=\"filter-label\">\r\n                <label>AVAILABLE QUANTITY</label>\r\n              </div>\r\n            </div>\r\n            <mat-form-field appearance=\"fill\">\r\n              <mat-label>Minimum</mat-label>\r\n              <input\r\n                type=\"number\"\r\n                #minQty\r\n                formControlName=\"qty\"\r\n                (input)=\"onQtyChange(minQty.value)\"\r\n                step=\"1\"\r\n                oninput=\"this.value = isNaN(Math.abs(this.value))?null:Math.abs(this.value)\"\r\n                matInput\r\n                min=\"1\"\r\n                value=\"{{ min_price_inventory }}\"\r\n              />\r\n            </mat-form-field>\r\n          </div>\r\n         \r\n        </form>\r\n       \r\n          <div class=\"filter\" *ngIf=\"source == 'SHOP'\">\r\n            <div class=\"filter-inner\">\r\n              <img\r\n                src=\"assets/shop/delivery-01.svg\"\r\n                class=\"filter-img\"\r\n                alt=\"Cities\"\r\n              />\r\n              <div class=\"filter-label\">\r\n                <label>DELIVERY TIMELINE</label>\r\n              </div>\r\n            </div> \r\n            <mat-form-field appearance=\"fill\">\r\n              <mat-label>Enter a date range</mat-label>\r\n              <mat-date-range-input [formGroup]=\"daterange\" [rangePicker]=\"picker\">\r\n                <input matStartDate formControlName=\"start\" [value]=\"daterange.value.start\" (dateChange)=\"dateRangeSelection()\" placeholder=\"Start date\">\r\n                <input matEndDate formControlName=\"end\" [value]=\"daterange.value.end\" (dateChange)=\"dateRangeSelection()\" placeholder=\"End date\">\r\n              </mat-date-range-input>\r\n              <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n              <mat-date-range-picker #picker></mat-date-range-picker>\r\n            </mat-form-field>\r\n          </div>\r\n      </mat-card>\r\n    </div>\r\n\r\n    <div fxFlex=\"80\" fxLayout=\"column\">\r\n      <div *ngIf=\"source == 'MD'\" class=\"right-head-search\" fxLayout=\"column\">\r\n        <app-search-bar\r\n          (search)=\"search($event)\"\r\n          [placeholder]=\"searchPlaceholder\"\r\n        ></app-search-bar>\r\n        <section class=\"search_placeholder\">\r\n          <p><b>Add furniture to your moodboard</b></p>\r\n          <p style=\"margin-bottom: 0px\">\r\n            Search for a product and add it to your moodboard\r\n          </p>\r\n        </section>\r\n      </div>\r\n      <div\r\n        fxFlex\r\n        class=\"shop\"\r\n        fxLayout=\"row wrap\"\r\n        fxLayoutGap=\"1rem\"\r\n        infiniteScroll\r\n        [infiniteScrollDistance]=\"2\"\r\n        [infiniteScrollThrottle]=\"1000\"\r\n        [scrollWindow]=\"false\"\r\n      >\r\n        <mat-card\r\n          class=\"shop__card\"\r\n          (click)=\"itemClick(product)\"\r\n          fxFlex=\"22\"\r\n          *ngFor=\"let product of productList\"\r\n        >\r\n          <div *ngIf=\"source == 'MD'\" class=\"tile-box\">\r\n            {{ product.total_warehouse_quantity }}\r\n          </div>\r\n          <img\r\n            mat-card-image\r\n            [src]=\"\r\n              product?.product_sku_vartion?.get_display_image[0]?.image_url\r\n                .small\r\n            \"\r\n            alt=\"Photo of a Shiba Inu\"\r\n          />\r\n          <mat-card-title *ngIf=\"source == 'SHOP'\" class=\"title\">{{\r\n            product.product_name\r\n          }}</mat-card-title>\r\n          <mat-card-content\r\n            *ngIf=\"source == 'SHOP'\"\r\n            class=\"shop__card--content\"\r\n          >\r\n            <div>\r\n              <span class=\"shop-label\">City:</span>\r\n              <span class=\"shop-value\">{{ product.warehouse_name }}</span>\r\n            </div>\r\n            <div>\r\n              <span class=\"shop-label\">Buy Price:</span>\r\n              <span class=\"shop-value\"> ${{ product.buyPrice }}</span>\r\n            </div>\r\n            <div>\r\n              <span class=\"shop-label\">Rental Price (12mo):</span>\r\n              <span class=\"shop-value\">{{ product.rental_price }}/mo</span>\r\n            </div>\r\n            <div>\r\n              <span class=\"shop-label\">Available Qty:</span>\r\n              <span class=\"shop-value\">{{\r\n                product.total_warehouse_quantity\r\n              }}</span>\r\n            </div>\r\n          </mat-card-content>\r\n        </mat-card>\r\n        <mat-card\r\n          class=\"\"\r\n          *ngIf=\"productList.length == 0 || isLoading\"\r\n          fxFlex=\"100\"\r\n          fxLayoutAlign=\"stretch stretch\"\r\n        >\r\n          <p *ngIf=\"productList.length == 0 && !isLoading\">No Data Found.</p>\r\n          <p class=\"lodding\" *ngIf=\"isLoading\">Loading...</p>\r\n        </mat-card>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<ng-template #viewMoreCity>\r\n  <div fxLayout=\"row-reverse\">\r\n    <button\r\n      type=\"button\"\r\n      class=\"close\"\r\n      data-dismiss=\"modal\"\r\n      (click)=\"closeModal()\"\r\n    >\r\n      &times;\r\n    </button>\r\n  </div>\r\n  <div style=\"padding: 20px\" fxLayout=\"row wrap\" fxLayoutGap=\"2rem\">\r\n    <ng-container *ngFor=\"let city of cityListDefault; let i = index\">\r\n      <mat-checkbox\r\n        fxFlex=\"25\"\r\n        (change)=\"onCityChecked(city, i)\"\r\n        [checked]=\"city.isChecked\"\r\n        [title]=\"city.warehouse_name\"\r\n        class=\"wrapText\"\r\n      >\r\n        {{ city.warehouse_name }}\r\n      </mat-checkbox>\r\n    </ng-container>\r\n  </div>\r\n</ng-template>\r\n<ng-template #viewMoreCat>\r\n  <div fxLayout=\"row-reverse\">\r\n    <button\r\n      type=\"button\"\r\n      class=\"close\"\r\n      data-dismiss=\"modal\"\r\n      (click)=\"closeModal()\"\r\n    >\r\n      &times;\r\n    </button>\r\n  </div>\r\n  <div style=\"padding: 10px\" fxLayout=\"row wrap\" fxLayoutGap=\"2rem\">\r\n    <ng-container *ngFor=\"let cat of catListDefault; let i = index\">\r\n      <mat-checkbox\r\n        fxFlex=\"20\"\r\n        (change)=\"onCategoriesChecked(cat, i)\"\r\n        [checked]=\"cat.isChecked\"\r\n        [title]=\"cat.name\"\r\n        class=\"wrapText\"\r\n      >\r\n        {{ cat.name }}\r\n      </mat-checkbox>\r\n    </ng-container>\r\n  </div>\r\n</ng-template>\r\n\r\n<ng-template #quickFilter>\r\n  <mat-horizontal-stepper\r\n    [linear]=\"false\"\r\n    [selectedIndex]=\"this.selectedIndex\"\r\n    #stepper\r\n  >\r\n    <mat-step>\r\n      <div\r\n        fxLayout=\"row-reverse\"\r\n        style=\"background: #f8f8f8; margin: 0px -24px 0px -24px\"\r\n        fxLayoutAlign=\"space-between center\"\r\n      >\r\n        <h2 mat-dialog-title>\r\n          <button\r\n            type=\"button\"\r\n            class=\"close\"\r\n            data-dismiss=\"modal\"\r\n            (click)=\"closeModal()\"\r\n          >\r\n            &times;\r\n          </button>\r\n        </h2>\r\n      </div>\r\n      <mat-dialog-content\r\n        style=\"padding-bottom: 10px\"\r\n        fxLayoutGap=\"2rem\"\r\n        fxLayout=\"column\"\r\n        fxLayoutAlign=\"center center\"\r\n      >\r\n        <h1 class=\"text-center popup-title\">WANT TO FURNISH YOUR PROPERTY?</h1>\r\n        <h1 class=\"text-center popup-title-head\">Let’s get started</h1>\r\n        <div\r\n          class=\"row justify-content-center mt-5\"\r\n          fxLayout=\"row\"\r\n          fxLayoutAlign=\"space-between center\"\r\n        >\r\n          <div\r\n            (click)=\"goto(1)\"\r\n            class=\"img-icon-wrapper icon\"\r\n            fxLayout=\"column\"\r\n            fxLayoutAlign=\"space-between center\"\r\n          >\r\n            <img class=\"img-icon\" src=\"assets/shop/locationNew.svg\" alt=\"\" />\r\n            <span class=\"font17\">Location</span>\r\n          </div>\r\n          <div style=\"margin: 0 -18px 0px -5px\">\r\n            <img class=\"img-icon line\" src=\"assets/shop/Line.svg\" alt=\"\" />\r\n          </div>\r\n          <div\r\n            (click)=\"goto(2)\"\r\n            class=\"img-icon-wrapper icon\"\r\n            fxLayout=\"column\"\r\n            fxLayoutAlign=\"space-between center\"\r\n          >\r\n            <img class=\"img-icon\" src=\"assets/shop/categoryNew.svg\" alt=\"\" />\r\n            <span class=\"font17\">Categories</span>\r\n          </div>\r\n          <div style=\"margin: 0 -5px 0 -18px\">\r\n            <img class=\"img-icon line\" src=\"assets/shop/Line.svg\" alt=\"\" />\r\n          </div>\r\n          <div\r\n            (click)=\"goto(3)\"\r\n            class=\"img-icon-wrapper icon\"\r\n            fxLayout=\"column\"\r\n            fxLayoutAlign=\"space-between center\"\r\n          >\r\n            <img class=\"img-icon\" src=\"assets/shop/budgetNew.svg\" alt=\"\" />\r\n            <span class=\"font17\">Budget</span>\r\n          </div>\r\n          <div style=\"margin: 0 -1px 0 -5px\">\r\n            <img class=\"img-icon line\" src=\"assets/shop/Line.svg\" alt=\"\" />\r\n          </div>\r\n          <div\r\n            (click)=\"goto(4)\"\r\n            class=\"img-icon-wrapper icon\"\r\n            fxLayout=\"column\"\r\n            fxLayoutAlign=\"space-between center\"\r\n          >\r\n            <img class=\"img-icon\" src=\"assets/shop/quantityNew.svg\" alt=\"\" />\r\n            <span class=\"font17\">Quantity</span>\r\n          </div>\r\n          <div style=\"margin: 0 -1px 0 -5px\">\r\n            <img class=\"img-icon line\" src=\"assets/shop/Line.svg\" alt=\"\" />\r\n          </div>\r\n          <div\r\n          (click)=\"goto(5)\"\r\n          class=\"img-icon-wrapper icon\"\r\n          fxLayout=\"column\"\r\n          fxLayoutAlign=\"space-between center\"\r\n        >\r\n          <img class=\"img-icon\" src=\"assets/shop/delivery-01.svg\" alt=\"\" />\r\n          <span class=\"font17\">Delivery</span>\r\n        </div>\r\n        </div>\r\n        <div fxLayoutAlign=\"center center\">\r\n          <button\r\n            mat-raised-button\r\n            matStepperNext\r\n            color=\"accent\"\r\n            aria-label=\"\"\r\n            class=\"btn\"\r\n          >\r\n            Start\r\n          </button>\r\n        </div>\r\n      </mat-dialog-content>\r\n    </mat-step>\r\n    <mat-step>\r\n      <div\r\n        fxLayout=\"row\"\r\n        style=\"margin: 0 -25px; height: 50px; background: rgb(248, 248, 248)\"\r\n        fxLayoutAlign=\"space-between center\"\r\n      >\r\n        <div\r\n          fxLayout=\"row\"\r\n          style=\"margin: 0 25px\"\r\n          fxLayoutAlign=\"space-between center\"\r\n        >\r\n          <img\r\n            src=\"assets/shop/location.svg\"\r\n            class=\"filter-img-popup\"\r\n            style=\"margin-top: 33px; margin-right: 10px\"\r\n            alt=\"Cities\"\r\n          />\r\n          <h2 style=\"margin: 0\" class=\"font25\" mat-dialog-title>Location</h2>\r\n        </div>\r\n        <div class=\"\" fxLayout=\"row-reverse\" style=\"margin: 0 25px\">\r\n          <button\r\n            type=\"button\"\r\n            class=\"close\"\r\n            data-dismiss=\"modal\"\r\n            (click)=\"closeModal()\"\r\n          >\r\n            &times;\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <mat-dialog-content\r\n        style=\"padding-bottom: 10px; padding-top: 15px\"\r\n        fxLayout=\"column\"\r\n        fxLayoutAlign=\"stretch center\"\r\n      >\r\n        <div>\r\n          <h2 style=\"font-size: 25px\">\r\n            What locations you are looking to Furnish units in?\r\n          </h2>\r\n        </div>\r\n        <div style=\"padding: 10px\" fxLayout=\"row wrap\" fxLayoutGap=\"1rem\">\r\n          <ng-container *ngFor=\"let city of cityListDefault; let i; as: index\">\r\n            <mat-checkbox\r\n              fxFlex=\"22\"\r\n              (change)=\"onCityChecked(city, i)\"\r\n              [checked]=\"city.isChecked\"\r\n              [title]=\"city.warehouse_name\"\r\n              class=\"wrapText\"\r\n            >\r\n              {{ city.warehouse_name }}\r\n            </mat-checkbox>\r\n          </ng-container>\r\n        </div>\r\n        <div\r\n          style=\"padding-top: 10px\"\r\n          fxLayoutAlign=\"center center\"\r\n          fxLayoutGap=\"2rem\"\r\n          fxLayout=\"row\"\r\n        >\r\n          <button\r\n            mat-raised-button\r\n            matStepperPrevious\r\n            color=\"accent\"\r\n            aria-label=\"\"\r\n            class=\"btn\"\r\n          >\r\n            Previous\r\n          </button>\r\n          <button\r\n            mat-raised-button\r\n            matStepperNext\r\n            color=\"accent\"\r\n            aria-label=\"\"\r\n            class=\"btn\"\r\n          >\r\n            Next\r\n          </button>\r\n        </div>\r\n      </mat-dialog-content>\r\n    </mat-step>\r\n    <mat-step>\r\n      <div\r\n        fxLayout=\"row\"\r\n        style=\"margin: 0 -25px; height: 50px; background: rgb(248, 248, 248)\"\r\n        fxLayoutAlign=\"space-between center\"\r\n      >\r\n        <!-- <div  fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n            <img src=\"assets/shop/category.png\" class=\"filter-img\" alt=\"Cities\">\r\n            <h2 style=\"margin: 0;\" mat-dialog-title class=\"font25\">\r\n              Category\r\n        </h2>\r\n        </div> -->\r\n        <div\r\n          fxLayout=\"row\"\r\n          style=\"margin: 0 25px\"\r\n          fxLayoutAlign=\"space-between center\"\r\n        >\r\n          <img\r\n            src=\"assets/shop/category.svg\"\r\n            class=\"filter-img-popup\"\r\n            style=\"margin-top: 33px; margin-right: 10px\"\r\n            alt=\"Cities\"\r\n          />\r\n          <h2 style=\"margin: 0\" class=\"font25\" mat-dialog-title>Category</h2>\r\n        </div>\r\n        <div class=\"\" fxLayout=\"row-reverse\" style=\"margin: 0 25px\">\r\n          <button\r\n            type=\"button\"\r\n            class=\"close\"\r\n            data-dismiss=\"modal\"\r\n            (click)=\"closeModal()\"\r\n          >\r\n            &times;\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <mat-dialog-content\r\n        style=\"max-height: 60vh; padding-bottom: 10px; padding-top: 15px\"\r\n        fxLayout=\"column\"\r\n        fxLayoutAlign=\"stretch center\"\r\n      >\r\n        <div>\r\n          <h2 style=\"font-size: 25px\">\r\n            Looking for products in any particular category?\r\n          </h2>\r\n        </div>\r\n        <div style=\"padding: 10px\" fxLayout=\"row wrap\" fxLayoutGap=\"1rem\">\r\n          <ng-container *ngFor=\"let cat of catListDefault; let i; as: index\">\r\n            <mat-checkbox\r\n              (change)=\"onCategoriesChecked(cat, i)\"\r\n              fxFlex=\"23\"\r\n              [checked]=\"cat.isChecked\"\r\n              [title]=\"cat.name\"\r\n              class=\"wrapText\"\r\n            >\r\n              {{ cat.name }}\r\n            </mat-checkbox>\r\n          </ng-container>\r\n        </div>\r\n      </mat-dialog-content>\r\n      <div\r\n        style=\"padding: 1rem\"\r\n        fxLayoutAlign=\"center center\"\r\n        fxLayoutGap=\"2rem\"\r\n        fxLayout=\"row\"\r\n      >\r\n        <button\r\n          mat-raised-button\r\n          matStepperPrevious\r\n          color=\"accent\"\r\n          aria-label=\"\"\r\n          class=\"btn\"\r\n        >\r\n          Previous\r\n        </button>\r\n        <button\r\n          mat-raised-button\r\n          matStepperNext\r\n          color=\"accent\"\r\n          aria-label=\"\"\r\n          class=\"btn\"\r\n        >\r\n          Next\r\n        </button>\r\n      </div>\r\n    </mat-step>\r\n    <mat-step>\r\n      <div\r\n        fxLayout=\"row\"\r\n        style=\"margin: 0 -25px; height: 50px; background: rgb(248, 248, 248)\"\r\n        fxLayoutAlign=\"space-between center\"\r\n      >\r\n        <div\r\n          fxLayout=\"row\"\r\n          style=\"margin: 0 25px\"\r\n          fxLayoutAlign=\"space-between center\"\r\n        >\r\n          <img\r\n            src=\"assets/shop/budget.svg\"\r\n            class=\"filter-img-popup\"\r\n            style=\"margin-top: 33px; margin-right: 10px\"\r\n            alt=\"Cities\"\r\n          />\r\n          <h2 style=\"margin: 0\" class=\"font25\" mat-dialog-title>PRICE RANGE</h2>\r\n        </div>\r\n        <div class=\"\" fxLayout=\"row-reverse\" style=\"margin: 0 25px\">\r\n          <button\r\n            type=\"button\"\r\n            class=\"close\"\r\n            data-dismiss=\"modal\"\r\n            (click)=\"closeModal()\"\r\n          >\r\n            &times;\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <mat-dialog-content\r\n        style=\"padding-bottom: 10px; padding-top: 15px\"\r\n        fxLayout=\"column\"\r\n        fxLayoutAlign=\"center center\"\r\n      >\r\n        <div>\r\n          <h2 style=\"font-size: 20px\">\r\n            Is there a Budget Range you are working with?\r\n          </h2>\r\n        </div>\r\n        <form [formGroup]=\"filterFormGroup\">\r\n          <div fxFlex fxLayout=\"row\" fxLayoutAlign=\"center center\" fxLayoutGap=\"2rem\">\r\n            <div class=\"price-input\" fxLayoutAlign=\"center center\" fxLayoutGap=\"2rem\" fxLayout=\"column\">\r\n              <div class=\"h2\">BUY</div>\r\n              <div fxLayout=\"row\" fxLayoutGap=\"1rem\" fxLayoutAlign=\"space-around center\">\r\n                <div fxLayout=\"column\" fxFlex=\"30\" fxLayoutAlign=\"center center\">\r\n                  <mat-label>Starting from $</mat-label>\r\n                  <mat-form-field fxFill appearance=\"fill\">\r\n                    <input type=\"number\" #min formControlName=\"minPrice\" (input)=\"onMinPriceRangeChange(min.value)\" value=\"{{ min_price }}\" matInput\r\n                      min=\"0\" />\r\n                  </mat-form-field>\r\n                </div>\r\n                <div fxLayout=\"column\" fxFlex=\"30\" fxLayoutAlign=\"center center\">\r\n                  <mat-label>Ending to $</mat-label>\r\n                  <mat-form-field fxFill appearance=\"fill\">\r\n                    <input type=\"number\" #max formControlName=\"maxPrice\"  (input)=\"onMaxPriceRangeChange(max.value)\" value=\"{{ max_price }}\" matInput\r\n                      min=\"1\" />\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div *ngIf=\"filterFormGroup?.errors?.buyPrice\" class=\"validation\">\r\n                Min Price should be less than Max Price\r\n              </div>\r\n            </div>\r\n            <div class=\"price-input\" fxLayoutAlign=\"center center\" fxLayoutGap=\"2rem\" fxLayout=\"column\">\r\n              <div class=\"h2\">RENT</div>\r\n              <div fxLayout=\"row\" fxLayoutGap=\"1rem\" fxLayoutAlign=\"center center\">\r\n                <div fxLayout=\"column\" fxFlex=\"30\" fxLayoutAlign=\"center center\">\r\n                  <mat-label>Starting from $</mat-label>\r\n                  <mat-form-field fxFill appearance=\"fill\">\r\n                    <input type=\"number\" #minR (input)=\"onMinRentalPriceRangeChange(minR.value)\" value=\"{{ minRentalPrice }}\"\r\n                      matInput min=\"0\" />\r\n                  </mat-form-field>\r\n                </div>\r\n                <div fxLayout=\"column\" fxFlex=\"30\" fxLayoutAlign=\"center center\">\r\n                  <mat-label>Ending to $</mat-label>\r\n                  <mat-form-field fxFill appearance=\"fill\">\r\n                    <input type=\"number\" #maxR (input)=\"onMaxRentalPriceRangeChange(maxR.value)\" value=\"{{ maxRentalPrice }}\"\r\n                      matInput min=\"1\" />\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div *ngIf=\"filterFormGroup?.errors?.rentalPrice\" class=\"validation\">\r\n                Min Price should be less than Max Price\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </form>\r\n        <div\r\n          style=\"padding-top: 10px\"\r\n          fxLayoutAlign=\"center center\"\r\n          fxLayoutGap=\"2rem\"\r\n          fxLayout=\"row\"\r\n        >\r\n          <button\r\n            mat-raised-button\r\n            matStepperPrevious\r\n            color=\"accent\"\r\n            aria-label=\"\"\r\n            class=\"btn\"\r\n          >\r\n            Previous\r\n          </button>\r\n          <button\r\n            mat-raised-button\r\n            matStepperNext\r\n            color=\"accent\"\r\n            class=\"btn\"\r\n            aria-label=\"\" *ngIf=\"filterFormGroup.valid\"\r\n          >\r\n            Next\r\n          </button>\r\n        </div>\r\n      </mat-dialog-content>\r\n    </mat-step>\r\n    <mat-step>\r\n      <div\r\n        fxLayout=\"row\"\r\n        style=\"margin: 0 -25px; height: 50px; background: rgb(248, 248, 248)\"\r\n        fxLayoutAlign=\"space-between center\"\r\n      >\r\n        <div\r\n          fxLayout=\"row\"\r\n          style=\"margin: 0 25px\"\r\n          fxLayoutAlign=\"space-between center\"\r\n        >\r\n          <img\r\n            src=\"assets/shop/quantity.svg\"\r\n            class=\"filter-img-popup\"\r\n            style=\"margin-top: 33px; margin-right: 10px\"\r\n            alt=\"Cities\"\r\n          />\r\n          <h2 style=\"margin: 0\" class=\"font25\" mat-dialog-title>Quantity</h2>\r\n        </div>\r\n        <div class=\"\" fxLayout=\"row-reverse\" style=\"margin: 0 25px\">\r\n          <button\r\n            type=\"button\"\r\n            class=\"close\"\r\n            data-dismiss=\"modal\"\r\n            (click)=\"closeModal()\"\r\n          >\r\n            &times;\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <mat-dialog-content\r\n        style=\"padding-bottom: 10px; padding-top: 15px\"\r\n        fxLayout=\"column\"\r\n        fxLayoutAlign=\"center center\"\r\n      >\r\n        <div>\r\n          <h2 style=\"font-size: 25px\">\r\n            What is the minimum quantity you are interested in?\r\n          </h2>\r\n        </div>\r\n        <div style=\"padding: 10px 0px\" fxLayoutAlign=\"center center\">\r\n          <mat-form-field appearance=\"fill\" fxFlex=\"90\">\r\n            <mat-label>Miniumum Quantity</mat-label>\r\n            <input\r\n              type=\"number\"\r\n              #minQty\r\n              step=\"1\"\r\n              (input)=\"onQtyChange(minQty.value)\"\r\n              matInput\r\n              min=\"1\"\r\n              value=\"{{ min_price_inventory }}\"\r\n            />\r\n          </mat-form-field>\r\n        </div>\r\n        <div\r\n          style=\"padding-top: 10px\"\r\n          fxLayoutAlign=\"center center\"\r\n          fxLayoutGap=\"2rem\"\r\n          fxLayout=\"row\"\r\n        >\r\n          <button\r\n            mat-raised-button\r\n            matStepperPrevious\r\n            color=\"accent\"\r\n            aria-label=\"\"\r\n            class=\"btn\"\r\n          >\r\n            Previous\r\n          </button>\r\n          <button\r\n            mat-raised-button\r\n            matStepperNext\r\n            color=\"accent\"\r\n            aria-label=\"\"\r\n            class=\"btn\"\r\n            \r\n          >\r\n            Next\r\n          </button>\r\n        </div>\r\n      </mat-dialog-content>\r\n    </mat-step>\r\n    <mat-step>\r\n      <div\r\n        fxLayout=\"row\"\r\n        style=\"margin: 0 -25px; height: 50px; background: rgb(248, 248, 248)\"\r\n        fxLayoutAlign=\"space-between center\"\r\n      >\r\n        <div\r\n          fxLayout=\"row\"\r\n          style=\"margin: 0 25px\"\r\n          fxLayoutAlign=\"space-between center\"\r\n        >\r\n          <img\r\n            src=\"assets/shop/delivery-01.svg\"\r\n            class=\"filter-img-popup\"\r\n            style=\"margin-top: 33px; margin-right: 10px\"\r\n            alt=\"Cities\"\r\n          />\r\n          <h2 style=\"margin: 0\" class=\"font25\" mat-dialog-title>Delivery Timeline</h2>\r\n        </div>\r\n        <div class=\"\" fxLayout=\"row-reverse\" style=\"margin: 0 25px\">\r\n          <button\r\n            type=\"button\"\r\n            class=\"close\"\r\n            data-dismiss=\"modal\"\r\n            (click)=\"closeModal()\"\r\n          >\r\n            &times;\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <mat-dialog-content\r\n        style=\"padding-bottom: 10px; padding-top: 15px\"\r\n        fxLayout=\"column\"\r\n        fxLayoutAlign=\"center center\"\r\n      >\r\n        <div>\r\n          <h2 style=\"font-size: 25px\">\r\n            What is your preferred delivery timeline ?\r\n          </h2>\r\n        </div>\r\n       \r\n          <div style=\"padding: 10px 0px\" fxLayoutAlign=\"center center\">\r\n            <mat-form-field appearance=\"fill\">\r\n              <mat-label>Enter a date range</mat-label>\r\n              <mat-date-range-input [formGroup]=\"daterange\" [rangePicker]=\"picker\">\r\n                <input matStartDate formControlName=\"start\" placeholder=\"Start date\">\r\n                <input matEndDate formControlName=\"end\" placeholder=\"End date\">\r\n              </mat-date-range-input>\r\n              <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n              <mat-date-range-picker #picker></mat-date-range-picker>\r\n            </mat-form-field>\r\n          </div>\r\n       \r\n        <div\r\n          style=\"padding-top: 10px\"\r\n          fxLayoutAlign=\"center center\"\r\n          fxLayoutGap=\"2rem\"\r\n          fxLayout=\"row\"\r\n        >\r\n          <button\r\n            mat-raised-button\r\n            matStepperPrevious\r\n            color=\"accent\"\r\n            aria-label=\"\"\r\n            class=\"btn\"\r\n          >\r\n            Previous\r\n          </button>\r\n          <button\r\n            mat-raised-button\r\n            matStepperNext\r\n            color=\"accent\"\r\n            aria-label=\"\"\r\n            class=\"btn\"\r\n            (click)=\"filterProductPopup()\"\r\n          >\r\n            Finish\r\n          </button>\r\n        </div>\r\n      </mat-dialog-content>\r\n    </mat-step>\r\n  </mat-horizontal-stepper>\r\n</ng-template>","import { Routes } from '@angular/router';\r\nimport { ProductDetailsComponent } from './common/product-details/product-details.component';\r\nimport { ZeroZeroSevenComponent } from './components/zero-zero-seven/zero-zero-seven.component';\r\nimport { ShopHomeComponent } from './components/shop-home/shop-home.component';\r\n\r\nexport const shopRouting: Routes = [\r\n  {\r\n    path: '',\r\n    component: ShopHomeComponent,\r\n  }, {\r\n    path:':productId/:warehouseId/:variationId',\r\n    component : ProductDetailsComponent\r\n  }, {\r\n    path:':productId/:warehouseId/:variationId/007',\r\n    component : ZeroZeroSevenComponent\r\n  }\r\n];\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ToasterService, UserService } from 'projects/core/src/public-api';\r\nimport { QuoteService } from 'projects/quote/src/public-api';\r\nimport { MoodboardService } from '../../services/moodboard.service';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'lib-create-moodboard-popup',\r\n  templateUrl: './create-moodboard-popup.component.html',\r\n  styleUrls: ['./create-moodboard-popup.component.scss']\r\n})\r\nexport class CreateMoodboardPopupComponent implements OnInit {\r\n\r\n  mbCreateForm: FormGroup;\r\n  stateList: any = [];\r\n  mbTypeList: any = [];\r\n  catagorydata = [{\r\n      imageSrc: 'assets/moodboard/images/Categories-01.png',\r\n      value: 'Living Room',\r\n      type_id: 1\r\n    },\r\n    {\r\n      imageSrc: 'assets/moodboard/images/Categories-02.png',\r\n      value: 'Bedroom',\r\n      type_id: 2\r\n    },\r\n    {\r\n      imageSrc: 'assets/moodboard/images/Categories-03.png',\r\n      value: 'Dining Room',\r\n      type_id: 3\r\n    },\r\n\r\n    {\r\n      imageSrc: 'assets/moodboard/images/Categories-04.png',\r\n      value: 'Office',\r\n      type_id: 4\r\n    },\r\n    {\r\n      imageSrc: 'assets/moodboard/images/Categories-05.png',\r\n      value: 'Outdoor',\r\n      type_id: 5\r\n    },\r\n    {\r\n      imageSrc: 'assets/moodboard/images/Categories-06.png',\r\n      value: 'Others',\r\n      type_id: 6\r\n    }\r\n  ]\r\n  mbId: any = null;\r\n  currentPage: any = '';\r\n  boardname: any = '';\r\n  showPDropdown: any = false;\r\n  showDropdown: any = false;\r\n  dCompanyList: any = [];\r\n  companyList: any = [];\r\n  projectList: any = [];\r\n  selectedCompany: any = '';\r\n  selectedProject: any = '';\r\n\r\n  constructor(public fb: FormBuilder, private moodboardService:MoodboardService,\r\n    public _user: UserService, private _toster: ToasterService, private _quoteService: QuoteService,\r\n    public _dialogRef: MatDialogRef<CreateMoodboardPopupComponent>,\r\n    private activatedRoute: ActivatedRoute, private router: Router) {\r\n    this.mbCreateForm = this.fb.group({\r\n                          moodboardName: ['', Validators.required],\r\n                          moodboardType: ['', Validators.required],\r\n                          moodboardCompany: [''],\r\n                          moodboardProjectName: [''],\r\n                          company_id: [''],\r\n                          project_id: [''],\r\n                          moodboardState: ['', Validators.required],\r\n                          moodboardCity: ['', Validators.required],\r\n                          moodboardZip: ['', Validators.required]\r\n                        });\r\n     }\r\n  ngOnInit(): void {\r\n    this.getStates();\r\n    this.getMoodBoardType();  \r\n    this.getcompanyByUserMoodboard();\r\n    this.getCompanyList();\r\n  }\r\n  getMoodBoardType(){\r\n    this.moodboardService.getMoodBoardType().subscribe((response:any) => {\r\n      this.mbTypeList = response.result;\r\n      this.catagorydata = this.mbTypeList.map((item: any, i: any) => Object.assign({}, item, this.catagorydata[i]));\r\n    });    \r\n  }\r\n  getcompanyByUserMoodboard(){\r\n    this.moodboardService.getcompanyByUserMoodboard().subscribe((response:any) => {\r\n      this.mbCreateForm.patchValue({moodboardCompany:response.result[0].company});\r\n    });    \r\n  }\r\n\r\n  getCompanyList() {\r\n    this._quoteService.getCompanyList().subscribe((data: any) => {\r\n      if(typeof data.result == 'string'){\r\n        this.companyList = [];\r\n        this.selectedCompany = \"\";\r\n        return;\r\n      }\r\n     // this.companyList = data.result.map((x: any) => x.company);\r\n      this.companyList  = data.result;\r\n      let companyId = data.result.find((x: any)=> x.company == this.selectedCompany)?.sgid;\r\n      if(companyId){\r\n        this.getProjectList(companyId, null);\r\n      }\r\n    });\r\n  }\r\n  getProjectList(companyId: any, event: any) {\r\n    if(event !== null) companyId = event.target.value;\r\n    this._quoteService.getProjectList(companyId).subscribe((data: any)=> {\r\n      if(typeof data.result == 'string'){\r\n        this.projectList = [];\r\n        this.selectedProject = \"\";\r\n      } else {\r\n        this.projectList  = data.result; //.map((x: any)=> x.project);\r\n        this.selectedProject = this.projectList[0];\r\n      }\r\n    })  \r\n  }\r\n\r\n \r\n  getStates(){\r\n    this.moodboardService.getStateList().subscribe((response:any) => {\r\n      this.stateList = response.states;\r\n    });    \r\n\r\n  }\r\n  getMoodboard(){\r\n    this.moodboardService.getMoodBoard(this.mbId).subscribe((response:any) => {\r\n      this.boardname = response.moodboard.boardname;\r\n      this.mbCreateForm.setValue({\r\n        moodboardName: response.moodboard.boardname,\r\n        moodboardType: response.moodboard.boardtypeid,\r\n        moodboardCompany: response.moodboard.company_name,\r\n        moodboardProjectName: response.moodboard.project_name,\r\n        moodboardState: response.moodboard.state,\r\n        moodboardCity: response.moodboard.city,\r\n        moodboardZip: response.moodboard.zipcode\r\n      });\r\n    });    \r\n  }\r\n  resetForm(){\r\n    this.mbCreateForm.reset();\r\n  }\r\n  cancel() {\r\n    this._dialogRef.close();\r\n  }\r\n  onSubmit() {\r\n    let val = this.mbCreateForm.value;\r\n    let param: {[index: string]:any} = { \r\n      moodboard_name: val.moodboardName,\r\n      moodboard_type: val.moodboardType,\r\n      company_name: val.moodboardCompany,\r\n      project_name: val.moodboardProjectName,\r\n      state: val.moodboardState,\r\n      city: val.moodboardCity,\r\n      zipcode: val.moodboardZip,\r\n      userid: this._user.getUser().getId()\r\n    \r\n    }\r\n    if(this.showDropdown == false)\r\n    param['company_name'] = this.companyList.find((x: any)=> x.sgid == val.company_id)?.company;\r\n    if(this.showPDropdown == false)\r\n    param['project_name'] = this.projectList.find((x: any)=> x.sgid == val.project_id)?.project;\r\n    \r\n    this.moodboardService.createMoodboard(param).subscribe((response:any) => {\r\n        if(response.statusCode === 200)\r\n        { this._toster.success(response.message);\r\n      //    this.router.navigate(['moodboard',response.moodboard_id])\r\n        }\r\n        else this._toster.error(response.message);\r\n      }, error => this._toster.error('Please contact site administrator!')\r\n      );\r\n  }\r\n\r\n}\r\n","<div\r\n  fxFlex\r\n  class=\"mb-create__form\"\r\n  fxLayout=\"column\"\r\n  fxLayoutAlign=\"center center\"\r\n>  \r\n  <!-- <div class=\"mb\" fxLayout=\"row\" fxLayoutAlign=\"center center\" fxLayoutGap=\"2rem\">\r\n      <div class=\"mb-create\" fxLayout=\"row\" fxLayoutAlign=\"center center\" fxLayoutGap=\"2rem\">\r\n          <span class=\"mb-create-text\">CREATE A NEW MOODBOARD</span>\r\n      </div>\r\n  </div> -->\r\n  <div  \r\n  fxLayout=\"row\"\r\n  fxFlex=\"100\"\r\n  style=\"width: 100%;\"\r\n  >\r\n<div          \r\n  fxFlex=\"95\"\r\n  fxLayout=\"row\"\r\n  fxLayoutAlign=\"center center\">\r\n<span class=\"mb-create__form--title\"> CREATE A NEW MOODBOARD</span>\r\n</div>\r\n<div          \r\n  fxFlex=\"5\"\r\n  fxLayout=\"row\"\r\n  fxLayoutAlign=\"row-reverse\">\r\n<span class=\"mb-create__form--title\" (click)=\"cancel();\"> \r\n  <img src=\"assets/moodboard/images/close-22.svg\" height=\"22px\" width=\"22px\">\r\n</span>\r\n</div>\r\n</div>  \r\n  <div class=\"mb-form\">\r\n    <form [formGroup]=\"mbCreateForm\"  class=\"add-field\" >\r\n      <label style=\"display: flex;\" class=\"label\">Moodboard Type <span class=\"asterisk\">*</span></label>\r\n      <mat-button-toggle-group formControlName=\"moodboardType\" aria-label=\"Moodboard Type\">\r\n        <ng-container *ngFor=\"let item of catagorydata; let i = index\">\r\n        <mat-button-toggle class=\"toggle-btn\" value=\"{{item?.type_id}}\">\r\n            <img mat-card-image  width=\"100px\" height=\"100px\" src=\"{{item.imageSrc}}\" alt=\"{{item.value}}\">\r\n              <div fxLayout=\"row\" class=\"text\" fxLayoutGap=\"1rem\" fxLayoutAlign=\"start center\">\r\n                <div fxLayout=\"row\" class=\"text-lable\" >{{item.value}}</div>\r\n              </div>\r\n        </mat-button-toggle>\r\n        </ng-container>\r\n      </mat-button-toggle-group>\r\n\r\n  <div class=\"mb-form-inner\" fxLayout=\"row\" fxLayoutAlign=\"center center\" fxLayoutGap=\"2rem\">\r\n    <div fxLayout=\"column\" fxLayoutAlign=\"stretch\" fxLayoutGap=\"2rem\"> \r\n      <!-- <mat-form-field appearance = \"fill\">\r\n        <label for=\"moodboardName\" class=\"label\">Moodboard Name <span class=\"asterisk\">*</span></label>\r\n        <input formControlName=\"moodboardName\" matInput placeholder = \"Name your Board\">\r\n      </mat-form-field> -->\r\n      <div fxFlex=\"45\" fxLayout=\"column\" fxLayoutAlign=\" stretch\">\r\n        <span class=\"label\">Moodboard Name<span class=\"asterisk\">*</span></span>\r\n        <input\r\n          [ngClass]=\"{\r\n            'error-border': mbCreateForm.get('moodboardName')?.invalid\r\n          }\"\r\n          type=\"text\"\r\n          formControlName=\"moodboardName\"\r\n          placeholder=\"Name your Board\"\r\n        />\r\n      </div>\r\n    \r\n     <!-- <mat-form-field appearance = \"fill\">\r\n      <label for=\"moodboardCompany\" class=\"label\">Company Name <span class=\"asterisk\">*</span></label>\r\n      <input formControlName=\"moodboardCompany\" matInput placeholder = \"Enter Company Name\">\r\n   </mat-form-field>\r\n   <mat-form-field appearance = \"fill\">\r\n    <label for=\"moodboardProjectName\" class=\"label\">Project Name <span class=\"asterisk\">*</span></label>\r\n    <input formControlName=\"moodboardProjectName\" matInput placeholder = \"Name your Project\">\r\n  </mat-form-field> -->\r\n  <div fxFlex=\"45\" fxLayout=\"column\" fxLayoutAlign=\" stretch\">\r\n    <span class=\"label\">Project Name<span class=\"asterisk\">*</span> </span>\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"stretch\" style=\"padding: 0px; margin: 0 0 0 -15px;\">\r\n      <a mat-button *ngIf=\"_user.getUser().isInternalUser()\" style=\"padding: 0px 10px 0px 9px; margin: -4px -5px -5px 0px;\" (click)=\"showPDropdown=!showPDropdown\" class=\"add\">\r\n        <img src=\"assets/moodboard/images/SVG-Icons-06.svg\">\r\n      </a>\r\n      <a *ngIf=\"!_user.getUser().isInternalUser()\" style=\"padding: 0px 10px 0px 9px; margin: -4px -5px -5px 0px;\" class=\"add\">\r\n        <img src=\"assets/moodboard/images/SVG-Icons-06.svg\">        </a>\r\n  \r\n    <input *ngIf=\"showPDropdown\"\r\n      [ngClass]=\"{\r\n        'error-border': mbCreateForm.get('moodboardProjectName')?.invalid\r\n      }\"\r\n      type=\"text\"\r\n      formControlName=\"moodboardProjectName\"\r\n      placeholder=\"Add Project Name\"\r\n    />\r\n    <select *ngIf=\"_user.getUser().isInternalUser() && !showPDropdown \"\r\n    [ngClass]=\"{\r\n      'error-border': mbCreateForm.get('project_id')?.invalid\r\n    }\"\r\n    formControlName=\"project_id\"\r\n  >\r\n    <option *ngFor=\"let prj of projectList\" [value]=\"prj.sgid\">\r\n      {{ prj.project }}\r\n    </option>\r\n  </select>\r\n</div>\r\n  </div>\r\n  <div fxFlex=\"45\" fxLayout=\"column\" fxLayoutAlign=\" stretch\">\r\n    <span class=\"label\">City<span class=\"asterisk\">*</span></span>\r\n    <input\r\n      [ngClass]=\"{\r\n        'error-border': mbCreateForm.get('moodboardCity')?.invalid\r\n      }\"\r\n      type=\"text\"\r\n      formControlName=\"moodboardCity\"\r\n      placeholder=\"Enter a City\"\r\n    />\r\n  </div>\r\n  \r\n\r\n  \r\n    </div>\r\n    <div fxLayout=\"column\" fxLayoutAlign=\"stretch\" fxLayoutGap=\"2rem\"> \r\n      <!-- <mat-form-field appearance = \"fill\" >\r\n        <mat-label class=\"label\">State <span class=\"asterisk\">*</span></mat-label>\r\n          <mat-select formControlName=\"moodboardState\">\r\n            <mat-option *ngFor=\"let state of stateList\" [value]=\"state.sgid\">{{state.name}}</mat-option>\r\n          </mat-select>\r\n  \r\n      </mat-form-field>\r\n      <mat-form-field appearance = \"fill\">\r\n        <label for=\"moodboardCity\" class=\"label\">City <span class=\"asterisk\">*</span></label>\r\n        <input formControlName=\"moodboardCity\" matInput placeholder = \"Enter a City\">\r\n     </mat-form-field>\r\n     <mat-form-field appearance = \"fill\">\r\n      <label for=\"moodboardZip\" class=\"label\">Zip Code <span class=\"asterisk\">*</span></label>\r\n      <input (input)=\"validatedCityZipCode()\" formControlName=\"moodboardZip\" matInput placeholder = \"Add a ZipCode\">\r\n   </mat-form-field> -->\r\n   <div fxFlex=\"45\" fxLayout=\"column\" fxLayoutAlign=\" stretch\">\r\n    <span class=\"label\">Company Name<span class=\"asterisk\">*</span>\r\n  </span>\r\n  <div fxLayout=\"row\" fxLayoutAlign=\"stretch\" style=\"padding: 0px; margin: 0 0 0 -15px;\">\r\n  <a mat-button *ngIf=\"_user.getUser().isInternalUser()\" style=\"padding: 0px 10px 0px 9px; margin: -4px -5px -5px 0px;\" (click)=\"showDropdown=!showDropdown; showPDropdown=!showPDropdown\" class=\"add\">\r\n    <img src=\"assets/moodboard/images/SVG-Icons-06.svg\">\r\n  </a>\r\n  <a mat-button *ngIf=\"!_user.getUser().isInternalUser()\" style=\"padding: 0px 10px 0px 9px; margin: -4px -5px -5px 0px;\" class=\"add\">\r\n    <img src=\"assets/moodboard/images/SVG-Icons-06.svg\">\r\n  </a>\r\n  <input *ngIf=\"showDropdown\"\r\n      [readonly]=\"!_user.getUser().isInternalUser()\"\r\n      [ngClass]=\"{\r\n        'error-border': mbCreateForm.get('moodboardCompany')?.invalid,\r\n        'read-only': !_user.getUser().isInternalUser()\r\n      }\"\r\n      type=\"text\"\r\n      formControlName=\"moodboardCompany\"\r\n      placeholder=\"Add Company Name\"\r\n    />\r\n    <select *ngIf=\"_user.getUser().isInternalUser() && !showDropdown\"\r\n    [ngClass]=\"{\r\n      'error-border': mbCreateForm.get('company_id')?.invalid\r\n    }\"\r\n    formControlName=\"company_id\"\r\n    (change)=\"getProjectList('', $event)\"\r\n  >\r\n    <option  *ngFor=\"let cmp of companyList\" [value]=\"cmp.sgid\" >\r\n      {{ cmp.company }}\r\n    </option>\r\n  </select>\r\n</div>\r\n  </div>\r\n\r\n   <div fxFlex=\"45\" fxLayout=\"column\" fxLayoutAlign=\" stretch\">\r\n    <span class=\"label\">State<span class=\"asterisk\">*</span></span>\r\n    <select\r\n      [ngClass]=\"{\r\n        'error-border': mbCreateForm.get('moodboardState')?.invalid\r\n      }\"\r\n      formControlName=\"moodboardState\"\r\n    >\r\n      <option *ngFor=\"let state of stateList\" [value]=\"state.sgid\">\r\n        {{ state.name }}\r\n      </option>\r\n    </select>\r\n  </div>\r\n  \r\n  \r\n  \r\n  <div fxFlex=\"45\" fxLayout=\"column\" fxLayoutAlign=\" stretch\">\r\n    <span class=\"label\">Zip Code<span class=\"asterisk\">*</span></span>\r\n    <input\r\n      [ngClass]=\"{\r\n        'error-border': mbCreateForm.get('moodboardZip')?.invalid\r\n      }\"\r\n      type=\"text\"\r\n      formControlName=\"moodboardZip\"\r\n      placeholder=\"Add a ZipCode\"\r\n    />\r\n  </div>\r\n  \r\n    </div>\r\n  </div>\r\n  <!-- <div class=\"mb-form-inner\" fxLayout=\"row\" fxLayoutAlign=\"center center\" fxLayoutGap=\"2rem\">\r\n    <button *ngIf=\"mbId == '' || mbId != '' && currentPage == 'create'\"           mat-raised-button\r\n    color=\"accent\"  type=\"submit\" mat-button>CREATE</button>\r\n    <button *ngIf=\"mbId != '' && currentPage != 'create'\" type=\"submit\"           mat-raised-button\r\n    color=\"accent\" mat-button>UPDATE</button>\r\n    <button (click)=\"resetForm();\"  mat-raised-button color=\"accent\"  mat-button>CANCEL</button>\r\n    <div fxLayoutGap=\"4rem\"></div>         \r\n  \r\n  </div>           -->\r\n  \r\n  \r\n\r\n  </form>  \r\n  <div\r\n  class=\"mb-create__actions\"\r\n  fxLayout=\"row\"\r\n  fxLayoutAlign=\"center center\"\r\n  fxLayoutGap=\"2rem\"\r\n>\r\n  <button\r\n    mat-raised-button\r\n    [disabled]=\"mbCreateForm.invalid\"\r\n    class=\"btn btn-primary\"\r\n    (click)=\"onSubmit()\"\r\n  >\r\n  CREATE\r\n  </button>\r\n  <button\r\n  class=\"btn btn-cancel\"\r\n  mat-raised-button (click)=\"cancel()\">CANCEL</button>\r\n</div>\r\n  </div>          \r\n  </div>      \r\n       \r\n  \r\n  \r\n  ","import { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { shopRouting } from './shop.routing';\r\nimport { STEPPER_GLOBAL_OPTIONS } from '@angular/cdk/stepper';\r\nimport { ZeroZeroSevenComponent } from './components/zero-zero-seven/zero-zero-seven.component';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { ShopCommonModule } from './common/shop-common.module';\r\nimport { ShopHomeComponent } from './components/shop-home/shop-home.component';\r\n\r\n@NgModule({\r\n  declarations: [ ZeroZeroSevenComponent, ShopHomeComponent],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(shopRouting),\r\n    ShopCommonModule,\r\n    MatCardModule\r\n  ],\r\n  exports: [],\r\n  providers: [\r\n    {\r\n      provide: STEPPER_GLOBAL_OPTIONS,\r\n      useValue: { displayDefaultIndicatorType: false }\r\n    }\r\n  ]\r\n})\r\nexport class ShopModule {}\r\n","<div\r\n  class=\"product\"\r\n  fxLayoutGap=\"1rem\"\r\n  fxLayout=\"row\"\r\n  fxLayoutAlign=\"center\"\r\n>\r\n<mat-card fxFlex=\"90\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\r\n    <div class=\"product-details\" fxLayout=\"row\" fxFlex=\"100\" fxLayoutGap=\"1rem\" fxLayoutAlign=\"center\">\r\n        <div fxLayout=\"row\" fxFlex=\"100\" fxLayoutAlign=\"center\">\r\n            <h1> Product Details </h1> </div>\r\n        <span fxFlex></span>\r\n    </div>\r\n\r\n    <table width=\"100%\">\r\n        <tr>\r\n            <td width=\"33%\">Product Name:</td>\r\n            <td width=\"66%\">{{productDetails?.name}}</td>\r\n        </tr>\r\n        <tr>\r\n            <td width=\"33%\">Category:</td>\r\n            <td width=\"66%\">{{productDetails?.category?.name}}</td>\r\n        </tr>\r\n        <tr>\r\n            <td width=\"33%\">Total Available Qty:</td>\r\n            <td width=\"66%\">{{availQty}}</td>\r\n        </tr>\r\n        <tr>\r\n            <td width=\"33%\">Registered with Ops:</td>\r\n            <td width=\"66%\">{{ productDetails?.is_publish_ops === 1 ? 'Yes' : 'No' }}</td>\r\n        </tr>\r\n    </table>\r\n    <span fxFlex></span>\r\n    <button style=\"margin: 12px;\"            mat-flat-button\r\n    color=\"accent\" (click)=\"viewProduct();\"> View Product </button>\r\n    <div fxLayout=\"row wrap\" fxLayoutGap=\"2rem\">\r\n        <mat-card class=\"card\" *ngFor=\"let details of productDetails?.variations; let i = index\">\r\n            <p class=\"mb-2\">Supplier Name: <strong>{{ details.supplier.name }}</strong>\r\n                <span>\r\n                    <img src=\"{{ details?.default_images[0]?.image_url?.small }}\" alt=\"\" style=\"width: 100px; height: 100px; position: absolute;\">\r\n                </span>\r\n              </p>\r\n              <p class=\"mb-2\">A Price: <strong>{{ details.pricing_asset_value | currency }}</strong></p>\r\n              <p class=\"mb-2 mt-4\">BU x: <strong>{{ details.supplier.business_pdm_buy_used_multiplier }}</strong></p>\r\n              <p class=\"mb-2\">BU Price: <strong>{{ details.buyUsedPrice | currency }}</strong></p>\r\n              <p class=\"mb-2 mt-4\">BN x: <strong>{{ details.supplier.business_pdm_buy_new_multiplier }}</strong></p>\r\n              <p class=\"mb-2\">BN Price: <strong>{{ details.buyPrice | currency }}</strong></p>\r\n              <p class=\"mb-2\">Rental Price (12 mo): <strong>{{ details?.default_price[24]?.rental_price | currency }}</strong></p>\r\n              <p class=\"mb-2 mt-4\">Supplier SKU: <strong>{{ details?.product_number !== null ? details?.product_number : 'NA' }}</strong></p>\r\n              <p class=\"mb-2\">Inhabitr SKU: <strong>{{ details.inhabitr_sku !== 'null' ? details.inhabitr_sku : 'NA' }}</strong></p>\r\n              <p class=\"mb-2\">Total Available Qty: \r\n                  <strong>{{ (sumTotal(details?.warehouse_location_new) + sumSUpplierTotal(details?.warehouse_location_new))  }}</strong>\r\n                </p>\r\n              <p class=\"mb-2 mt-4\">Warehouse(s):</p>\r\n              <table class=\"table table-bodered\">\r\n                <thead>\r\n                    <th>Warehouse</th>\r\n                    <th>Inh. Inv.</th>\r\n                    <th>Sup. Inv.</th>\r\n                    <th>Tot. Inv.</th>\r\n                </thead>\r\n                <tbody *ngFor=\"let wh of details?.warehouse_location_new; last as isLast\">\r\n                    <tr>\r\n                        <td style=\"text-transform: capitalize;\">{{ wh.warehouse?.warehouse_name }}</td>\r\n                        <td>{{wh.non_assigned_inv ? wh.non_assigned_inv : 0}}</td>\r\n                        <td>{{wh.supplier_quantity ? wh.supplier_quantity : 0}}</td>\r\n                        <td>{{ (wh.non_assigned_inv + wh.supplier_quantity) }}</td>\r\n                    </tr>\r\n                    <!-- <tr *ngIf=\"isLast\">\r\n                        <td> <b>Total</b></td>\r\n                        <td></td>\r\n                        <td></td>\r\n                        <td>{{ }}</td>\r\n                    </tr> -->\r\n                    \r\n                </tbody>\r\n                \r\n              </table>\r\n              \r\n              <p class=\"mb-2 mt-4\"><strong>Attributes:</strong></p>\r\n              <ul class=\"list-group list-group-flush\">\r\n                <li class=\"list-group-item\" *ngFor=\"let attr of details?.attribute_combination;\">\r\n                    {{ attr.attribute.type }} : {{ attr.attribute.name }}\r\n                </li>\r\n              </ul>\r\n\r\n        </mat-card>\r\n    </div>\r\n</mat-card>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { MoodboardService } from 'projects/moodboard/src/lib/services/moodboard.service';\r\n\r\n@Component({\r\n  selector: 'lib-zero-zero-seven',\r\n  templateUrl: './zero-zero-seven.component.html',\r\n  styleUrls: ['./zero-zero-seven.component.scss']\r\n})\r\nexport class ZeroZeroSevenComponent implements OnInit {\r\n  productId: number = NaN;\r\n  warehouseId: number = NaN;\r\n  sgId: number = NaN;\r\n  availQty: number = NaN;\r\n  productDetails: any; \r\n  constructor( private _moodboardService: MoodboardService,\r\n    private _route: ActivatedRoute, private _router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this._route.params.subscribe((data) => {\r\n      this.productId = data.productId;\r\n      this.warehouseId = data.warehouseId;\r\n      this.sgId = data.sgid;\r\n      this.getProduct(this.productId, this.warehouseId);\r\n    });\r\n\r\n  }\r\n  viewProduct(){\r\n    this._router.navigate([\r\n      'item',\r\n      this.productId,\r\n      this.warehouseId,\r\n      this.sgId\r\n    ]);\r\n\r\n  }\r\n\r\n  sumTotal(totData: any) {\r\n    let invTotal: number;\r\n    invTotal = 0;\r\n    totData.forEach((tot: any) => {\r\n      if(tot.non_assigned_inv !== null) {\r\n        invTotal += parseInt( tot.non_assigned_inv)\r\n      }\r\n    });\r\n    \r\n    return invTotal;\r\n  }\r\n  \r\n  sumSUpplierTotal(sData: any) {\r\n    let supTotal: number;\r\n    supTotal = 0;\r\n    sData.forEach((stot: any) => {\r\n      if(stot.supplier_quantity !== null) {\r\n        supTotal += parseInt( stot.supplier_quantity)\r\n      }\r\n    });\r\n\r\n    return supTotal;\r\n  }\r\n  getProduct(pid: any, wid: any) {\r\n    this._moodboardService\r\n      .getProductDetails(pid, wid)\r\n      .subscribe((response: any) => {\r\n        this.productDetails =response.result;\r\n        // this logic is because at some point warehouse_location_new is empty in variations so checking if empty pull qty from next variation\r\n        this.productDetails?.variations?.forEach((element: any) => {\r\n          if(element.warehouse_location_new.length > 0) {\r\n            this.availQty = parseInt(element.warehouse_location_new[0].sum_inhabitr_quantity) + parseInt(element.warehouse_location_new[0].sum_supplier_quantity)\r\n          } else {\r\n            this.availQty = 0;\r\n          }\r\n        });\r\n      });\r\n\r\n  }\r\n\r\n}\r\n","import { Directive, ElementRef, EventEmitter, Input, NgModule, NgZone, Output } from '@angular/core';\nimport { fromEvent, of } from 'rxjs';\nimport { filter, map, mergeMap, tap, throttleTime } from 'rxjs/operators';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/services/ngx-ins-utils.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?} selector\n * @param {?} scrollWindow\n * @param {?} defaultElement\n * @param {?} fromRoot\n * @return {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nfunction resolveContainerElement(selector, scrollWindow, defaultElement, fromRoot) {\n    /** @type {?} */\n    const hasWindow = window && !!window.document && window.document.documentElement;\n    /** @type {?} */\n    let container = hasWindow && scrollWindow ? window : defaultElement;\n    if (selector) {\n        /** @type {?} */\n        const containerIsString = selector && hasWindow && typeof selector === 'string';\n        container = containerIsString\n            ? findElement(selector, defaultElement.nativeElement, fromRoot)\n            : selector;\n        if (!container) {\n            throw new Error('ngx-infinite-scroll {resolveContainerElement()}: selector for');\n        }\n    }\n    return container;\n}\n/**\n * @param {?} selector\n * @param {?} customRoot\n * @param {?} fromRoot\n * @return {?}\n */\nfunction findElement(selector, customRoot, fromRoot) {\n    /** @type {?} */\n    const rootEl = fromRoot ? window.document : customRoot;\n    return rootEl.querySelector(selector);\n}\n/**\n * @param {?} prop\n * @return {?}\n */\nfunction inputPropChanged(prop) {\n    return prop && !prop.firstChange;\n}\n/**\n * @return {?}\n */\nfunction hasWindowDefined() {\n    return typeof window !== 'undefined';\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/services/axis-resolver.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst VerticalProps = {\n    clientHeight: \"clientHeight\",\n    offsetHeight: \"offsetHeight\",\n    scrollHeight: \"scrollHeight\",\n    pageYOffset: \"pageYOffset\",\n    offsetTop: \"offsetTop\",\n    scrollTop: \"scrollTop\",\n    top: \"top\"\n};\n/** @type {?} */\nconst HorizontalProps = {\n    clientHeight: \"clientWidth\",\n    offsetHeight: \"offsetWidth\",\n    scrollHeight: \"scrollWidth\",\n    pageYOffset: \"pageXOffset\",\n    offsetTop: \"offsetLeft\",\n    scrollTop: \"scrollLeft\",\n    top: \"left\"\n};\nclass AxisResolver {\n    /**\n     * @param {?=} vertical\n     */\n    constructor(vertical = true) {\n        this.vertical = vertical;\n        this.propsMap = vertical ? VerticalProps : HorizontalProps;\n    }\n    /**\n     * @return {?}\n     */\n    clientHeightKey() {\n        return this.propsMap.clientHeight;\n    }\n    /**\n     * @return {?}\n     */\n    offsetHeightKey() {\n        return this.propsMap.offsetHeight;\n    }\n    /**\n     * @return {?}\n     */\n    scrollHeightKey() {\n        return this.propsMap.scrollHeight;\n    }\n    /**\n     * @return {?}\n     */\n    pageYOffsetKey() {\n        return this.propsMap.pageYOffset;\n    }\n    /**\n     * @return {?}\n     */\n    offsetTopKey() {\n        return this.propsMap.offsetTop;\n    }\n    /**\n     * @return {?}\n     */\n    scrollTopKey() {\n        return this.propsMap.scrollTop;\n    }\n    /**\n     * @return {?}\n     */\n    topKey() {\n        return this.propsMap.top;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/services/event-trigger.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @param {?} alwaysCallback\n * @param {?} shouldFireScrollEvent\n * @param {?} isTriggeredCurrentTotal\n * @return {?}\n */\nfunction shouldTriggerEvents(alwaysCallback, shouldFireScrollEvent, isTriggeredCurrentTotal) {\n    if (alwaysCallback && shouldFireScrollEvent) {\n        return true;\n    }\n    if (!isTriggeredCurrentTotal && shouldFireScrollEvent) {\n        return true;\n    }\n    return false;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/services/position-resolver.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?} __0\n * @return {?}\n */\nfunction createResolver({ windowElement, axis }) {\n    return createResolverWithContainer({ axis, isWindow: isElementWindow(windowElement) }, windowElement);\n}\n/**\n * @param {?} resolver\n * @param {?} windowElement\n * @return {?}\n */\nfunction createResolverWithContainer(resolver, windowElement) {\n    /** @type {?} */\n    const container = resolver.isWindow || (windowElement && !windowElement.nativeElement)\n        ? windowElement\n        : windowElement.nativeElement;\n    return Object.assign(Object.assign({}, resolver), { container });\n}\n/**\n * @param {?} windowElement\n * @return {?}\n */\nfunction isElementWindow(windowElement) {\n    /** @type {?} */\n    const isWindow = ['Window', 'global'].some((/**\n     * @param {?} obj\n     * @return {?}\n     */\n    (obj) => Object.prototype.toString.call(windowElement).includes(obj)));\n    return isWindow;\n}\n/**\n * @param {?} isContainerWindow\n * @param {?} windowElement\n * @return {?}\n */\nfunction getDocumentElement(isContainerWindow, windowElement) {\n    return isContainerWindow ? windowElement.document.documentElement : null;\n}\n/**\n * @param {?} element\n * @param {?} resolver\n * @return {?}\n */\nfunction calculatePoints(element, resolver) {\n    /** @type {?} */\n    const height = extractHeightForElement(resolver);\n    return resolver.isWindow\n        ? calculatePointsForWindow(height, element, resolver)\n        : calculatePointsForElement(height, element, resolver);\n}\n/**\n * @param {?} height\n * @param {?} element\n * @param {?} resolver\n * @return {?}\n */\nfunction calculatePointsForWindow(height, element, resolver) {\n    const { axis, container, isWindow } = resolver;\n    const { offsetHeightKey, clientHeightKey } = extractHeightPropKeys(axis);\n    // scrolled until now / current y point\n    /** @type {?} */\n    const scrolled = height +\n        getElementPageYOffset(getDocumentElement(isWindow, container), axis, isWindow);\n    // total height / most bottom y point\n    /** @type {?} */\n    const nativeElementHeight = getElementHeight(element.nativeElement, isWindow, offsetHeightKey, clientHeightKey);\n    /** @type {?} */\n    const totalToScroll = getElementOffsetTop(element.nativeElement, axis, isWindow) +\n        nativeElementHeight;\n    return { height, scrolled, totalToScroll, isWindow };\n}\n/**\n * @param {?} height\n * @param {?} element\n * @param {?} resolver\n * @return {?}\n */\nfunction calculatePointsForElement(height, element, resolver) {\n    const { axis, container } = resolver;\n    // perhaps use container.offsetTop instead of 'scrollTop'\n    /** @type {?} */\n    const scrolled = container[axis.scrollTopKey()];\n    /** @type {?} */\n    const totalToScroll = container[axis.scrollHeightKey()];\n    return { height, scrolled, totalToScroll, isWindow: false };\n}\n/**\n * @param {?} axis\n * @return {?}\n */\nfunction extractHeightPropKeys(axis) {\n    return {\n        offsetHeightKey: axis.offsetHeightKey(),\n        clientHeightKey: axis.clientHeightKey()\n    };\n}\n/**\n * @param {?} __0\n * @return {?}\n */\nfunction extractHeightForElement({ container, isWindow, axis }) {\n    const { offsetHeightKey, clientHeightKey } = extractHeightPropKeys(axis);\n    return getElementHeight(container, isWindow, offsetHeightKey, clientHeightKey);\n}\n/**\n * @param {?} elem\n * @param {?} isWindow\n * @param {?} offsetHeightKey\n * @param {?} clientHeightKey\n * @return {?}\n */\nfunction getElementHeight(elem, isWindow, offsetHeightKey, clientHeightKey) {\n    if (isNaN(elem[offsetHeightKey])) {\n        /** @type {?} */\n        const docElem = getDocumentElement(isWindow, elem);\n        return docElem ? docElem[clientHeightKey] : 0;\n    }\n    else {\n        return elem[offsetHeightKey];\n    }\n}\n/**\n * @param {?} elem\n * @param {?} axis\n * @param {?} isWindow\n * @return {?}\n */\nfunction getElementOffsetTop(elem, axis, isWindow) {\n    /** @type {?} */\n    const topKey = axis.topKey();\n    // elem = elem.nativeElement;\n    if (!elem.getBoundingClientRect) {\n        // || elem.css('none')) {\n        return;\n    }\n    return (elem.getBoundingClientRect()[topKey] +\n        getElementPageYOffset(elem, axis, isWindow));\n}\n/**\n * @param {?} elem\n * @param {?} axis\n * @param {?} isWindow\n * @return {?}\n */\nfunction getElementPageYOffset(elem, axis, isWindow) {\n    /** @type {?} */\n    const pageYOffset = axis.pageYOffsetKey();\n    /** @type {?} */\n    const scrollTop = axis.scrollTopKey();\n    /** @type {?} */\n    const offsetTop = axis.offsetTopKey();\n    if (isNaN(window.pageYOffset)) {\n        return getDocumentElement(isWindow, elem)[scrollTop];\n    }\n    else if (elem.ownerDocument) {\n        return elem.ownerDocument.defaultView[pageYOffset];\n    }\n    else {\n        return elem[offsetTop];\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/services/scroll-resolver.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?} container\n * @param {?} distance\n * @param {?} scrollingDown\n * @return {?}\n */\nfunction shouldFireScrollEvent(container, distance, scrollingDown) {\n    /** @type {?} */\n    let remaining;\n    /** @type {?} */\n    let containerBreakpoint;\n    if (container.totalToScroll <= 0) {\n        return false;\n    }\n    /** @type {?} */\n    const scrolledUntilNow = container.isWindow ? container.scrolled : container.height + container.scrolled;\n    if (scrollingDown) {\n        remaining =\n            (container.totalToScroll - scrolledUntilNow) / container.totalToScroll;\n        containerBreakpoint = distance.down / 10;\n    }\n    else {\n        /** @type {?} */\n        const totalHiddenContentHeight = container.scrolled + (container.totalToScroll - scrolledUntilNow);\n        remaining = container.scrolled / totalHiddenContentHeight;\n        containerBreakpoint = distance.up / 10;\n    }\n    /** @type {?} */\n    const shouldFireEvent = remaining <= containerBreakpoint;\n    return shouldFireEvent;\n}\n/**\n * @param {?} lastScrollPosition\n * @param {?} container\n * @return {?}\n */\nfunction isScrollingDownwards(lastScrollPosition, container) {\n    return lastScrollPosition < container.scrolled;\n}\n/**\n * @param {?} lastScrollPosition\n * @param {?} container\n * @param {?} distance\n * @return {?}\n */\nfunction getScrollStats(lastScrollPosition, container, distance) {\n    /** @type {?} */\n    const scrollDown = isScrollingDownwards(lastScrollPosition, container);\n    return {\n        fire: shouldFireScrollEvent(container, distance, scrollDown),\n        scrollDown\n    };\n}\n/**\n * @param {?} position\n * @param {?} scrollState\n * @return {?}\n */\n\n/**\n * @param {?} totalToScroll\n * @param {?} scrollState\n * @return {?}\n */\n\n/**\n * @param {?} scrollState\n * @return {?}\n */\n\n/**\n * @param {?} scroll\n * @param {?} scrollState\n * @param {?} triggered\n * @param {?} isScrollingDown\n * @return {?}\n */\n\n/**\n * @param {?} totalToScroll\n * @param {?} scrollState\n * @param {?} isScrollingDown\n * @return {?}\n */\n\n/**\n * @param {?} scrollState\n * @param {?} scrolledUntilNow\n * @param {?} totalToScroll\n * @return {?}\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/services/scroll-state.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass ScrollState {\n    /**\n     * @param {?} __0\n     */\n    constructor({ totalToScroll }) {\n        this.lastScrollPosition = 0;\n        this.lastTotalToScroll = 0;\n        this.totalToScroll = 0;\n        this.triggered = {\n            down: 0,\n            up: 0\n        };\n        this.totalToScroll = totalToScroll;\n    }\n    /**\n     * @param {?} position\n     * @return {?}\n     */\n    updateScrollPosition(position) {\n        return (this.lastScrollPosition = position);\n    }\n    /**\n     * @param {?} totalToScroll\n     * @return {?}\n     */\n    updateTotalToScroll(totalToScroll) {\n        if (this.lastTotalToScroll !== totalToScroll) {\n            this.lastTotalToScroll = this.totalToScroll;\n            this.totalToScroll = totalToScroll;\n        }\n    }\n    /**\n     * @param {?} scrolledUntilNow\n     * @param {?} totalToScroll\n     * @return {?}\n     */\n    updateScroll(scrolledUntilNow, totalToScroll) {\n        this.updateScrollPosition(scrolledUntilNow);\n        this.updateTotalToScroll(totalToScroll);\n    }\n    /**\n     * @param {?} scroll\n     * @param {?} isScrollingDown\n     * @return {?}\n     */\n    updateTriggeredFlag(scroll, isScrollingDown) {\n        if (isScrollingDown) {\n            this.triggered.down = scroll;\n        }\n        else {\n            this.triggered.up = scroll;\n        }\n    }\n    /**\n     * @param {?} totalToScroll\n     * @param {?} isScrollingDown\n     * @return {?}\n     */\n    isTriggeredScroll(totalToScroll, isScrollingDown) {\n        return isScrollingDown\n            ? this.triggered.down === totalToScroll\n            : this.triggered.up === totalToScroll;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/services/scroll-register.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?} config\n * @return {?}\n */\nfunction createScroller(config) {\n    const { scrollContainer, scrollWindow, element, fromRoot } = config;\n    /** @type {?} */\n    const resolver = createResolver({\n        axis: new AxisResolver(!config.horizontal),\n        windowElement: resolveContainerElement(scrollContainer, scrollWindow, element, fromRoot)\n    });\n    /** @type {?} */\n    const scrollState = new ScrollState({\n        totalToScroll: calculatePoints(element, resolver)\n    });\n    /** @type {?} */\n    const options = {\n        container: resolver.container,\n        throttle: config.throttle\n    };\n    /** @type {?} */\n    const distance = {\n        up: config.upDistance,\n        down: config.downDistance\n    };\n    return attachScrollEvent(options).pipe(mergeMap((/**\n     * @return {?}\n     */\n    () => of(calculatePoints(element, resolver)))), map((/**\n     * @param {?} positionStats\n     * @return {?}\n     */\n    (positionStats) => toInfiniteScrollParams(scrollState.lastScrollPosition, positionStats, distance))), tap((/**\n     * @param {?} __0\n     * @return {?}\n     */\n    ({ stats }) => scrollState.updateScroll(stats.scrolled, stats.totalToScroll))), filter((/**\n     * @param {?} __0\n     * @return {?}\n     */\n    ({ fire, scrollDown, stats: { totalToScroll } }) => shouldTriggerEvents(config.alwaysCallback, fire, scrollState.isTriggeredScroll(totalToScroll, scrollDown)))), tap((/**\n     * @param {?} __0\n     * @return {?}\n     */\n    ({ scrollDown, stats: { totalToScroll } }) => {\n        scrollState.updateTriggeredFlag(totalToScroll, scrollDown);\n    })), map(toInfiniteScrollAction));\n}\n/**\n * @param {?} options\n * @return {?}\n */\nfunction attachScrollEvent(options) {\n    /** @type {?} */\n    let obs = fromEvent(options.container, 'scroll');\n    // For an unknown reason calling `sampleTime()` causes trouble for many users, even with `options.throttle = 0`.\n    // Let's avoid calling the function unless needed.\n    // Replacing with throttleTime seems to solve the problem\n    // See https://github.com/orizens/ngx-infinite-scroll/issues/198\n    if (options.throttle) {\n        obs = obs.pipe(throttleTime(options.throttle));\n    }\n    return obs;\n}\n/**\n * @param {?} lastScrollPosition\n * @param {?} stats\n * @param {?} distance\n * @return {?}\n */\nfunction toInfiniteScrollParams(lastScrollPosition, stats, distance) {\n    const { scrollDown, fire } = getScrollStats(lastScrollPosition, stats, distance);\n    return {\n        scrollDown,\n        fire,\n        stats\n    };\n}\n/** @type {?} */\nconst InfiniteScrollActions = {\n    DOWN: '[NGX_ISE] DOWN',\n    UP: '[NGX_ISE] UP'\n};\n/**\n * @param {?} response\n * @return {?}\n */\nfunction toInfiniteScrollAction(response) {\n    const { scrollDown, stats: { scrolled: currentScrollPosition } } = response;\n    return {\n        type: scrollDown ? InfiniteScrollActions.DOWN : InfiniteScrollActions.UP,\n        payload: {\n            currentScrollPosition\n        }\n    };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/modules/infinite-scroll.directive.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass InfiniteScrollDirective {\n    /**\n     * @param {?} element\n     * @param {?} zone\n     */\n    constructor(element, zone) {\n        this.element = element;\n        this.zone = zone;\n        this.scrolled = new EventEmitter();\n        this.scrolledUp = new EventEmitter();\n        this.infiniteScrollDistance = 2;\n        this.infiniteScrollUpDistance = 1.5;\n        this.infiniteScrollThrottle = 150;\n        this.infiniteScrollDisabled = false;\n        this.infiniteScrollContainer = null;\n        this.scrollWindow = true;\n        this.immediateCheck = false;\n        this.horizontal = false;\n        this.alwaysCallback = false;\n        this.fromRoot = false;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        if (!this.infiniteScrollDisabled) {\n            this.setup();\n        }\n    }\n    /**\n     * @param {?} __0\n     * @return {?}\n     */\n    ngOnChanges({ infiniteScrollContainer, infiniteScrollDisabled, infiniteScrollDistance }) {\n        /** @type {?} */\n        const containerChanged = inputPropChanged(infiniteScrollContainer);\n        /** @type {?} */\n        const disabledChanged = inputPropChanged(infiniteScrollDisabled);\n        /** @type {?} */\n        const distanceChanged = inputPropChanged(infiniteScrollDistance);\n        /** @type {?} */\n        const shouldSetup = (!disabledChanged && !this.infiniteScrollDisabled) ||\n            (disabledChanged && !infiniteScrollDisabled.currentValue) || distanceChanged;\n        if (containerChanged || disabledChanged || distanceChanged) {\n            this.destroyScroller();\n            if (shouldSetup) {\n                this.setup();\n            }\n        }\n    }\n    /**\n     * @return {?}\n     */\n    setup() {\n        if (hasWindowDefined()) {\n            this.zone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => {\n                this.disposeScroller = createScroller({\n                    fromRoot: this.fromRoot,\n                    alwaysCallback: this.alwaysCallback,\n                    disable: this.infiniteScrollDisabled,\n                    downDistance: this.infiniteScrollDistance,\n                    element: this.element,\n                    horizontal: this.horizontal,\n                    scrollContainer: this.infiniteScrollContainer,\n                    scrollWindow: this.scrollWindow,\n                    throttle: this.infiniteScrollThrottle,\n                    upDistance: this.infiniteScrollUpDistance\n                }).subscribe((/**\n                 * @param {?} payload\n                 * @return {?}\n                 */\n                (payload) => this.zone.run((/**\n                 * @return {?}\n                 */\n                () => this.handleOnScroll(payload)))));\n            }));\n        }\n    }\n    /**\n     * @param {?} __0\n     * @return {?}\n     */\n    handleOnScroll({ type, payload }) {\n        switch (type) {\n            case InfiniteScrollActions.DOWN:\n                return this.scrolled.emit(payload);\n            case InfiniteScrollActions.UP:\n                return this.scrolledUp.emit(payload);\n            default:\n                return;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.destroyScroller();\n    }\n    /**\n     * @return {?}\n     */\n    destroyScroller() {\n        if (this.disposeScroller) {\n            this.disposeScroller.unsubscribe();\n        }\n    }\n}\nInfiniteScrollDirective.ɵfac = function InfiniteScrollDirective_Factory(t) { return new (t || InfiniteScrollDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };\nInfiniteScrollDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: InfiniteScrollDirective, selectors: [[\"\", \"infiniteScroll\", \"\"], [\"\", \"infinite-scroll\", \"\"], [\"\", \"data-infinite-scroll\", \"\"]], inputs: { infiniteScrollDistance: \"infiniteScrollDistance\", infiniteScrollUpDistance: \"infiniteScrollUpDistance\", infiniteScrollThrottle: \"infiniteScrollThrottle\", infiniteScrollDisabled: \"infiniteScrollDisabled\", infiniteScrollContainer: \"infiniteScrollContainer\", scrollWindow: \"scrollWindow\", immediateCheck: \"immediateCheck\", horizontal: \"horizontal\", alwaysCallback: \"alwaysCallback\", fromRoot: \"fromRoot\" }, outputs: { scrolled: \"scrolled\", scrolledUp: \"scrolledUp\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature] });\n/** @nocollapse */\nInfiniteScrollDirective.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgZone }\n];\nInfiniteScrollDirective.propDecorators = {\n    scrolled: [{ type: Output }],\n    scrolledUp: [{ type: Output }],\n    infiniteScrollDistance: [{ type: Input }],\n    infiniteScrollUpDistance: [{ type: Input }],\n    infiniteScrollThrottle: [{ type: Input }],\n    infiniteScrollDisabled: [{ type: Input }],\n    infiniteScrollContainer: [{ type: Input }],\n    scrollWindow: [{ type: Input }],\n    immediateCheck: [{ type: Input }],\n    horizontal: [{ type: Input }],\n    alwaysCallback: [{ type: Input }],\n    fromRoot: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(InfiniteScrollDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[infiniteScroll], [infinite-scroll], [data-infinite-scroll]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, { scrolled: [{\n            type: Output\n        }], scrolledUp: [{\n            type: Output\n        }], infiniteScrollDistance: [{\n            type: Input\n        }], infiniteScrollUpDistance: [{\n            type: Input\n        }], infiniteScrollThrottle: [{\n            type: Input\n        }], infiniteScrollDisabled: [{\n            type: Input\n        }], infiniteScrollContainer: [{\n            type: Input\n        }], scrollWindow: [{\n            type: Input\n        }], immediateCheck: [{\n            type: Input\n        }], horizontal: [{\n            type: Input\n        }], alwaysCallback: [{\n            type: Input\n        }], fromRoot: [{\n            type: Input\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/modules/ngx-infinite-scroll.module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass InfiniteScrollModule {\n}\nInfiniteScrollModule.ɵfac = function InfiniteScrollModule_Factory(t) { return new (t || InfiniteScrollModule)(); };\nInfiniteScrollModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: InfiniteScrollModule });\nInfiniteScrollModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ providers: [], imports: [[]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(InfiniteScrollModule, { declarations: [InfiniteScrollDirective], exports: [InfiniteScrollDirective] }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(InfiniteScrollModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [InfiniteScrollDirective],\n                exports: [InfiniteScrollDirective],\n                imports: [],\n                providers: []\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/ngx-infinite-scroll.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Angular library starter.\n * Build an Angular library compatible with AoT compilation & Tree shaking.\n * Written by Roberto Simonetti.\n * MIT license.\n * https://github.com/robisim74/angular-library-starter\n */\n/**\n * Entry point for all public APIs of the package.\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: ngx-infinite-scroll.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { InfiniteScrollDirective, InfiniteScrollModule };\n\n//# sourceMappingURL=ngx-infinite-scroll.js.map","import { FocusMonitor } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { InjectionToken, forwardRef, EventEmitter, Directive, ChangeDetectorRef, Optional, Inject, ContentChildren, Input, Output, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, Attribute, ViewChild, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { mixinDisableRipple, MatCommonModule, MatRippleModule } from '@angular/material/core';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to configure the\n * default options for all button toggles within an app.\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/material/core';\n\nconst _c0 = [\"button\"];\nconst _c1 = [\"*\"];\nconst MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS = new InjectionToken('MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS');\n/**\n * Injection token that can be used to reference instances of `MatButtonToggleGroup`.\n * It serves as alternative token to the actual `MatButtonToggleGroup` class which\n * could cause unnecessary retention of the class and its component metadata.\n */\nconst MAT_BUTTON_TOGGLE_GROUP = new InjectionToken('MatButtonToggleGroup');\n/**\n * Provider Expression that allows mat-button-toggle-group to register as a ControlValueAccessor.\n * This allows it to support [(ngModel)].\n * @docs-private\n */\nconst MAT_BUTTON_TOGGLE_GROUP_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MatButtonToggleGroup),\n    multi: true\n};\n// Counter used to generate unique IDs.\nlet uniqueIdCounter = 0;\n/** Change event object emitted by MatButtonToggle. */\nclass MatButtonToggleChange {\n    constructor(\n    /** The MatButtonToggle that emits the event. */\n    source, \n    /** The value assigned to the MatButtonToggle. */\n    value) {\n        this.source = source;\n        this.value = value;\n    }\n}\n/** Exclusive selection button toggle group that behaves like a radio-button group. */\nclass MatButtonToggleGroup {\n    constructor(_changeDetector, defaultOptions) {\n        this._changeDetector = _changeDetector;\n        this._vertical = false;\n        this._multiple = false;\n        this._disabled = false;\n        /**\n         * The method to be called in order to update ngModel.\n         * Now `ngModel` binding is not supported in multiple selection mode.\n         */\n        this._controlValueAccessorChangeFn = () => { };\n        /** onTouch function registered via registerOnTouch (ControlValueAccessor). */\n        this._onTouched = () => { };\n        this._name = `mat-button-toggle-group-${uniqueIdCounter++}`;\n        /**\n         * Event that emits whenever the value of the group changes.\n         * Used to facilitate two-way data binding.\n         * @docs-private\n         */\n        this.valueChange = new EventEmitter();\n        /** Event emitted when the group's value changes. */\n        this.change = new EventEmitter();\n        this.appearance =\n            defaultOptions && defaultOptions.appearance ? defaultOptions.appearance : 'standard';\n    }\n    /** `name` attribute for the underlying `input` element. */\n    get name() { return this._name; }\n    set name(value) {\n        this._name = value;\n        if (this._buttonToggles) {\n            this._buttonToggles.forEach(toggle => {\n                toggle.name = this._name;\n                toggle._markForCheck();\n            });\n        }\n    }\n    /** Whether the toggle group is vertical. */\n    get vertical() { return this._vertical; }\n    set vertical(value) {\n        this._vertical = coerceBooleanProperty(value);\n    }\n    /** Value of the toggle group. */\n    get value() {\n        const selected = this._selectionModel ? this._selectionModel.selected : [];\n        if (this.multiple) {\n            return selected.map(toggle => toggle.value);\n        }\n        return selected[0] ? selected[0].value : undefined;\n    }\n    set value(newValue) {\n        this._setSelectionByValue(newValue);\n        this.valueChange.emit(this.value);\n    }\n    /** Selected button toggles in the group. */\n    get selected() {\n        const selected = this._selectionModel ? this._selectionModel.selected : [];\n        return this.multiple ? selected : (selected[0] || null);\n    }\n    /** Whether multiple button toggles can be selected. */\n    get multiple() { return this._multiple; }\n    set multiple(value) {\n        this._multiple = coerceBooleanProperty(value);\n    }\n    /** Whether multiple button toggle group is disabled. */\n    get disabled() { return this._disabled; }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        if (this._buttonToggles) {\n            this._buttonToggles.forEach(toggle => toggle._markForCheck());\n        }\n    }\n    ngOnInit() {\n        this._selectionModel = new SelectionModel(this.multiple, undefined, false);\n    }\n    ngAfterContentInit() {\n        this._selectionModel.select(...this._buttonToggles.filter(toggle => toggle.checked));\n    }\n    /**\n     * Sets the model value. Implemented as part of ControlValueAccessor.\n     * @param value Value to be set to the model.\n     */\n    writeValue(value) {\n        this.value = value;\n        this._changeDetector.markForCheck();\n    }\n    // Implemented as part of ControlValueAccessor.\n    registerOnChange(fn) {\n        this._controlValueAccessorChangeFn = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n    }\n    /** Dispatch change event with current selection and group value. */\n    _emitChangeEvent() {\n        const selected = this.selected;\n        const source = Array.isArray(selected) ? selected[selected.length - 1] : selected;\n        const event = new MatButtonToggleChange(source, this.value);\n        this._controlValueAccessorChangeFn(event.value);\n        this.change.emit(event);\n    }\n    /**\n     * Syncs a button toggle's selected state with the model value.\n     * @param toggle Toggle to be synced.\n     * @param select Whether the toggle should be selected.\n     * @param isUserInput Whether the change was a result of a user interaction.\n     * @param deferEvents Whether to defer emitting the change events.\n     */\n    _syncButtonToggle(toggle, select, isUserInput = false, deferEvents = false) {\n        // Deselect the currently-selected toggle, if we're in single-selection\n        // mode and the button being toggled isn't selected at the moment.\n        if (!this.multiple && this.selected && !toggle.checked) {\n            this.selected.checked = false;\n        }\n        if (this._selectionModel) {\n            if (select) {\n                this._selectionModel.select(toggle);\n            }\n            else {\n                this._selectionModel.deselect(toggle);\n            }\n        }\n        else {\n            deferEvents = true;\n        }\n        // We need to defer in some cases in order to avoid \"changed after checked errors\", however\n        // the side-effect is that we may end up updating the model value out of sequence in others\n        // The `deferEvents` flag allows us to decide whether to do it on a case-by-case basis.\n        if (deferEvents) {\n            Promise.resolve().then(() => this._updateModelValue(isUserInput));\n        }\n        else {\n            this._updateModelValue(isUserInput);\n        }\n    }\n    /** Checks whether a button toggle is selected. */\n    _isSelected(toggle) {\n        return this._selectionModel && this._selectionModel.isSelected(toggle);\n    }\n    /** Determines whether a button toggle should be checked on init. */\n    _isPrechecked(toggle) {\n        if (typeof this._rawValue === 'undefined') {\n            return false;\n        }\n        if (this.multiple && Array.isArray(this._rawValue)) {\n            return this._rawValue.some(value => toggle.value != null && value === toggle.value);\n        }\n        return toggle.value === this._rawValue;\n    }\n    /** Updates the selection state of the toggles in the group based on a value. */\n    _setSelectionByValue(value) {\n        this._rawValue = value;\n        if (!this._buttonToggles) {\n            return;\n        }\n        if (this.multiple && value) {\n            if (!Array.isArray(value) && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw Error('Value must be an array in multiple-selection mode.');\n            }\n            this._clearSelection();\n            value.forEach((currentValue) => this._selectValue(currentValue));\n        }\n        else {\n            this._clearSelection();\n            this._selectValue(value);\n        }\n    }\n    /** Clears the selected toggles. */\n    _clearSelection() {\n        this._selectionModel.clear();\n        this._buttonToggles.forEach(toggle => toggle.checked = false);\n    }\n    /** Selects a value if there's a toggle that corresponds to it. */\n    _selectValue(value) {\n        const correspondingOption = this._buttonToggles.find(toggle => {\n            return toggle.value != null && toggle.value === value;\n        });\n        if (correspondingOption) {\n            correspondingOption.checked = true;\n            this._selectionModel.select(correspondingOption);\n        }\n    }\n    /** Syncs up the group's value with the model and emits the change event. */\n    _updateModelValue(isUserInput) {\n        // Only emit the change event for user input.\n        if (isUserInput) {\n            this._emitChangeEvent();\n        }\n        // Note: we emit this one no matter whether it was a user interaction, because\n        // it is used by Angular to sync up the two-way data binding.\n        this.valueChange.emit(this.value);\n    }\n}\nMatButtonToggleGroup.ɵfac = function MatButtonToggleGroup_Factory(t) { return new (t || MatButtonToggleGroup)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS, 8)); };\nMatButtonToggleGroup.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatButtonToggleGroup, selectors: [[\"mat-button-toggle-group\"]], contentQueries: function MatButtonToggleGroup_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatButtonToggle, 1);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._buttonToggles = _t);\n    } }, hostAttrs: [\"role\", \"group\", 1, \"mat-button-toggle-group\"], hostVars: 5, hostBindings: function MatButtonToggleGroup_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-disabled\", ctx.disabled);\n        ɵngcc0.ɵɵclassProp(\"mat-button-toggle-vertical\", ctx.vertical)(\"mat-button-toggle-group-appearance-standard\", ctx.appearance === \"standard\");\n    } }, inputs: { appearance: \"appearance\", name: \"name\", vertical: \"vertical\", value: \"value\", multiple: \"multiple\", disabled: \"disabled\" }, outputs: { valueChange: \"valueChange\", change: \"change\" }, exportAs: [\"matButtonToggleGroup\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            MAT_BUTTON_TOGGLE_GROUP_VALUE_ACCESSOR,\n            { provide: MAT_BUTTON_TOGGLE_GROUP, useExisting: MatButtonToggleGroup },\n        ])] });\nMatButtonToggleGroup.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS,] }] }\n];\nMatButtonToggleGroup.propDecorators = {\n    _buttonToggles: [{ type: ContentChildren, args: [forwardRef(() => MatButtonToggle), {\n                    // Note that this would technically pick up toggles\n                    // from nested groups, but that's not a case that we support.\n                    descendants: true\n                },] }],\n    appearance: [{ type: Input }],\n    name: [{ type: Input }],\n    vertical: [{ type: Input }],\n    value: [{ type: Input }],\n    valueChange: [{ type: Output }],\n    multiple: [{ type: Input }],\n    disabled: [{ type: Input }],\n    change: [{ type: Output }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatButtonToggleGroup, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-button-toggle-group',\n                providers: [\n                    MAT_BUTTON_TOGGLE_GROUP_VALUE_ACCESSOR,\n                    { provide: MAT_BUTTON_TOGGLE_GROUP, useExisting: MatButtonToggleGroup },\n                ],\n                host: {\n                    'role': 'group',\n                    'class': 'mat-button-toggle-group',\n                    '[attr.aria-disabled]': 'disabled',\n                    '[class.mat-button-toggle-vertical]': 'vertical',\n                    '[class.mat-button-toggle-group-appearance-standard]': 'appearance === \"standard\"'\n                },\n                exportAs: 'matButtonToggleGroup'\n            }]\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS]\n            }] }]; }, { valueChange: [{\n            type: Output\n        }], change: [{\n            type: Output\n        }], appearance: [{\n            type: Input\n        }], name: [{\n            type: Input\n        }], vertical: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], multiple: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], _buttonToggles: [{\n            type: ContentChildren,\n            args: [forwardRef(() => MatButtonToggle), {\n                    // Note that this would technically pick up toggles\n                    // from nested groups, but that's not a case that we support.\n                    descendants: true\n                }]\n        }] }); })();\n// Boilerplate for applying mixins to the MatButtonToggle class.\n/** @docs-private */\nclass MatButtonToggleBase {\n}\nconst _MatButtonToggleMixinBase = mixinDisableRipple(MatButtonToggleBase);\n/** Single button inside of a toggle group. */\nclass MatButtonToggle extends _MatButtonToggleMixinBase {\n    constructor(toggleGroup, _changeDetectorRef, _elementRef, _focusMonitor, defaultTabIndex, defaultOptions) {\n        super();\n        this._changeDetectorRef = _changeDetectorRef;\n        this._elementRef = _elementRef;\n        this._focusMonitor = _focusMonitor;\n        this._isSingleSelector = false;\n        this._checked = false;\n        /**\n         * Users can specify the `aria-labelledby` attribute which will be forwarded to the input element\n         */\n        this.ariaLabelledby = null;\n        this._disabled = false;\n        /** Event emitted when the group value changes. */\n        this.change = new EventEmitter();\n        const parsedTabIndex = Number(defaultTabIndex);\n        this.tabIndex = (parsedTabIndex || parsedTabIndex === 0) ? parsedTabIndex : null;\n        this.buttonToggleGroup = toggleGroup;\n        this.appearance =\n            defaultOptions && defaultOptions.appearance ? defaultOptions.appearance : 'standard';\n    }\n    /** Unique ID for the underlying `button` element. */\n    get buttonId() { return `${this.id}-button`; }\n    /** The appearance style of the button. */\n    get appearance() {\n        return this.buttonToggleGroup ? this.buttonToggleGroup.appearance : this._appearance;\n    }\n    set appearance(value) {\n        this._appearance = value;\n    }\n    /** Whether the button is checked. */\n    get checked() {\n        return this.buttonToggleGroup ? this.buttonToggleGroup._isSelected(this) : this._checked;\n    }\n    set checked(value) {\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this._checked) {\n            this._checked = newValue;\n            if (this.buttonToggleGroup) {\n                this.buttonToggleGroup._syncButtonToggle(this, this._checked);\n            }\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /** Whether the button is disabled. */\n    get disabled() {\n        return this._disabled || (this.buttonToggleGroup && this.buttonToggleGroup.disabled);\n    }\n    set disabled(value) { this._disabled = coerceBooleanProperty(value); }\n    ngOnInit() {\n        const group = this.buttonToggleGroup;\n        this._isSingleSelector = group && !group.multiple;\n        this.id = this.id || `mat-button-toggle-${uniqueIdCounter++}`;\n        if (this._isSingleSelector) {\n            this.name = group.name;\n        }\n        if (group) {\n            if (group._isPrechecked(this)) {\n                this.checked = true;\n            }\n            else if (group._isSelected(this) !== this._checked) {\n                // As as side effect of the circular dependency between the toggle group and the button,\n                // we may end up in a state where the button is supposed to be checked on init, but it\n                // isn't, because the checked value was assigned too early. This can happen when Ivy\n                // assigns the static input value before the `ngOnInit` has run.\n                group._syncButtonToggle(this, this._checked);\n            }\n        }\n    }\n    ngAfterViewInit() {\n        this._focusMonitor.monitor(this._elementRef, true);\n    }\n    ngOnDestroy() {\n        const group = this.buttonToggleGroup;\n        this._focusMonitor.stopMonitoring(this._elementRef);\n        // Remove the toggle from the selection once it's destroyed. Needs to happen\n        // on the next tick in order to avoid \"changed after checked\" errors.\n        if (group && group._isSelected(this)) {\n            group._syncButtonToggle(this, false, false, true);\n        }\n    }\n    /** Focuses the button. */\n    focus(options) {\n        this._buttonElement.nativeElement.focus(options);\n    }\n    /** Checks the button toggle due to an interaction with the underlying native button. */\n    _onButtonClick() {\n        const newChecked = this._isSingleSelector ? true : !this._checked;\n        if (newChecked !== this._checked) {\n            this._checked = newChecked;\n            if (this.buttonToggleGroup) {\n                this.buttonToggleGroup._syncButtonToggle(this, this._checked, true);\n                this.buttonToggleGroup._onTouched();\n            }\n        }\n        // Emit a change event when it's the single selector\n        this.change.emit(new MatButtonToggleChange(this, this.value));\n    }\n    /**\n     * Marks the button toggle as needing checking for change detection.\n     * This method is exposed because the parent button toggle group will directly\n     * update bound properties of the radio button.\n     */\n    _markForCheck() {\n        // When the group value changes, the button will not be notified.\n        // Use `markForCheck` to explicit update button toggle's status.\n        this._changeDetectorRef.markForCheck();\n    }\n}\nMatButtonToggle.ɵfac = function MatButtonToggle_Factory(t) { return new (t || MatButtonToggle)(ɵngcc0.ɵɵdirectiveInject(MAT_BUTTON_TOGGLE_GROUP, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS, 8)); };\nMatButtonToggle.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatButtonToggle, selectors: [[\"mat-button-toggle\"]], viewQuery: function MatButtonToggle_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, 1);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._buttonElement = _t.first);\n    } }, hostAttrs: [\"role\", \"presentation\", 1, \"mat-button-toggle\"], hostVars: 12, hostBindings: function MatButtonToggle_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"focus\", function MatButtonToggle_focus_HostBindingHandler() { return ctx.focus(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-label\", null)(\"aria-labelledby\", null)(\"id\", ctx.id)(\"name\", null);\n        ɵngcc0.ɵɵclassProp(\"mat-button-toggle-standalone\", !ctx.buttonToggleGroup)(\"mat-button-toggle-checked\", ctx.checked)(\"mat-button-toggle-disabled\", ctx.disabled)(\"mat-button-toggle-appearance-standard\", ctx.appearance === \"standard\");\n    } }, inputs: { disableRipple: \"disableRipple\", ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], tabIndex: \"tabIndex\", appearance: \"appearance\", checked: \"checked\", disabled: \"disabled\", id: \"id\", name: \"name\", ariaLabel: [\"aria-label\", \"ariaLabel\"], value: \"value\" }, outputs: { change: \"change\" }, exportAs: [\"matButtonToggle\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c1, decls: 6, vars: 9, consts: [[\"type\", \"button\", 1, \"mat-button-toggle-button\", \"mat-focus-indicator\", 3, \"id\", \"disabled\", \"click\"], [\"button\", \"\"], [1, \"mat-button-toggle-label-content\"], [1, \"mat-button-toggle-focus-overlay\"], [\"matRipple\", \"\", 1, \"mat-button-toggle-ripple\", 3, \"matRippleTrigger\", \"matRippleDisabled\"]], template: function MatButtonToggle_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"button\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"click\", function MatButtonToggle_Template_button_click_0_listener() { return ctx._onButtonClick(); });\n        ɵngcc0.ɵɵelementStart(2, \"span\", 2);\n        ɵngcc0.ɵɵprojection(3);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(4, \"span\", 3);\n        ɵngcc0.ɵɵelement(5, \"span\", 4);\n    } if (rf & 2) {\n        const _r0 = ɵngcc0.ɵɵreference(1);\n        ɵngcc0.ɵɵproperty(\"id\", ctx.buttonId)(\"disabled\", ctx.disabled || null);\n        ɵngcc0.ɵɵattribute(\"tabindex\", ctx.disabled ? -1 : ctx.tabIndex)(\"aria-pressed\", ctx.checked)(\"name\", ctx.name || null)(\"aria-label\", ctx.ariaLabel)(\"aria-labelledby\", ctx.ariaLabelledby);\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵproperty(\"matRippleTrigger\", _r0)(\"matRippleDisabled\", ctx.disableRipple || ctx.disabled);\n    } }, directives: [ɵngcc2.MatRipple], styles: [\".mat-button-toggle-standalone,.mat-button-toggle-group{position:relative;display:inline-flex;flex-direction:row;white-space:nowrap;overflow:hidden;border-radius:2px;-webkit-tap-highlight-color:transparent}.cdk-high-contrast-active .mat-button-toggle-standalone,.cdk-high-contrast-active .mat-button-toggle-group{outline:solid 1px}.mat-button-toggle-standalone.mat-button-toggle-appearance-standard,.mat-button-toggle-group-appearance-standard{border-radius:4px}.cdk-high-contrast-active .mat-button-toggle-standalone.mat-button-toggle-appearance-standard,.cdk-high-contrast-active .mat-button-toggle-group-appearance-standard{outline:0}.mat-button-toggle-vertical{flex-direction:column}.mat-button-toggle-vertical .mat-button-toggle-label-content{display:block}.mat-button-toggle{white-space:nowrap;position:relative}.mat-button-toggle .mat-icon svg{vertical-align:top}.mat-button-toggle.cdk-keyboard-focused .mat-button-toggle-focus-overlay{opacity:1}.cdk-high-contrast-active .mat-button-toggle.cdk-keyboard-focused .mat-button-toggle-focus-overlay{opacity:.5}.mat-button-toggle-appearance-standard:not(.mat-button-toggle-disabled):hover .mat-button-toggle-focus-overlay{opacity:.04}.mat-button-toggle-appearance-standard.cdk-keyboard-focused:not(.mat-button-toggle-disabled) .mat-button-toggle-focus-overlay{opacity:.12}.cdk-high-contrast-active .mat-button-toggle-appearance-standard.cdk-keyboard-focused:not(.mat-button-toggle-disabled) .mat-button-toggle-focus-overlay{opacity:.5}@media(hover: none){.mat-button-toggle-appearance-standard:not(.mat-button-toggle-disabled):hover .mat-button-toggle-focus-overlay{display:none}}.mat-button-toggle-label-content{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;display:inline-block;line-height:36px;padding:0 16px;position:relative}.mat-button-toggle-appearance-standard .mat-button-toggle-label-content{padding:0 12px}.mat-button-toggle-label-content>*{vertical-align:middle}.mat-button-toggle-focus-overlay{border-radius:inherit;pointer-events:none;opacity:0;top:0;left:0;right:0;bottom:0;position:absolute}.mat-button-toggle-checked .mat-button-toggle-focus-overlay{border-bottom:solid 36px}.cdk-high-contrast-active .mat-button-toggle-checked .mat-button-toggle-focus-overlay{opacity:.5;height:0}.cdk-high-contrast-active .mat-button-toggle-checked.mat-button-toggle-appearance-standard .mat-button-toggle-focus-overlay{border-bottom:solid 500px}.mat-button-toggle .mat-button-toggle-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-button-toggle-button{border:0;background:none;color:inherit;padding:0;margin:0;font:inherit;outline:none;width:100%;cursor:pointer}.mat-button-toggle-disabled .mat-button-toggle-button{cursor:default}.mat-button-toggle-button::-moz-focus-inner{border:0}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatButtonToggle.ctorParameters = () => [\n    { type: MatButtonToggleGroup, decorators: [{ type: Optional }, { type: Inject, args: [MAT_BUTTON_TOGGLE_GROUP,] }] },\n    { type: ChangeDetectorRef },\n    { type: ElementRef },\n    { type: FocusMonitor },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS,] }] }\n];\nMatButtonToggle.propDecorators = {\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }],\n    _buttonElement: [{ type: ViewChild, args: ['button',] }],\n    id: [{ type: Input }],\n    name: [{ type: Input }],\n    value: [{ type: Input }],\n    tabIndex: [{ type: Input }],\n    appearance: [{ type: Input }],\n    checked: [{ type: Input }],\n    disabled: [{ type: Input }],\n    change: [{ type: Output }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatButtonToggle, [{\n        type: Component,\n        args: [{\n                selector: 'mat-button-toggle',\n                template: \"<button #button class=\\\"mat-button-toggle-button mat-focus-indicator\\\"\\n        type=\\\"button\\\"\\n        [id]=\\\"buttonId\\\"\\n        [attr.tabindex]=\\\"disabled ? -1 : tabIndex\\\"\\n        [attr.aria-pressed]=\\\"checked\\\"\\n        [disabled]=\\\"disabled || null\\\"\\n        [attr.name]=\\\"name || null\\\"\\n        [attr.aria-label]=\\\"ariaLabel\\\"\\n        [attr.aria-labelledby]=\\\"ariaLabelledby\\\"\\n        (click)=\\\"_onButtonClick()\\\">\\n  <span class=\\\"mat-button-toggle-label-content\\\">\\n    <ng-content></ng-content>\\n  </span>\\n</button>\\n\\n<span class=\\\"mat-button-toggle-focus-overlay\\\"></span>\\n<span class=\\\"mat-button-toggle-ripple\\\" matRipple\\n     [matRippleTrigger]=\\\"button\\\"\\n     [matRippleDisabled]=\\\"this.disableRipple || this.disabled\\\">\\n</span>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                exportAs: 'matButtonToggle',\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                inputs: ['disableRipple'],\n                host: {\n                    '[class.mat-button-toggle-standalone]': '!buttonToggleGroup',\n                    '[class.mat-button-toggle-checked]': 'checked',\n                    '[class.mat-button-toggle-disabled]': 'disabled',\n                    '[class.mat-button-toggle-appearance-standard]': 'appearance === \"standard\"',\n                    'class': 'mat-button-toggle',\n                    '[attr.aria-label]': 'null',\n                    '[attr.aria-labelledby]': 'null',\n                    '[attr.id]': 'id',\n                    '[attr.name]': 'null',\n                    '(focus)': 'focus()',\n                    'role': 'presentation'\n                },\n                styles: [\".mat-button-toggle-standalone,.mat-button-toggle-group{position:relative;display:inline-flex;flex-direction:row;white-space:nowrap;overflow:hidden;border-radius:2px;-webkit-tap-highlight-color:transparent}.cdk-high-contrast-active .mat-button-toggle-standalone,.cdk-high-contrast-active .mat-button-toggle-group{outline:solid 1px}.mat-button-toggle-standalone.mat-button-toggle-appearance-standard,.mat-button-toggle-group-appearance-standard{border-radius:4px}.cdk-high-contrast-active .mat-button-toggle-standalone.mat-button-toggle-appearance-standard,.cdk-high-contrast-active .mat-button-toggle-group-appearance-standard{outline:0}.mat-button-toggle-vertical{flex-direction:column}.mat-button-toggle-vertical .mat-button-toggle-label-content{display:block}.mat-button-toggle{white-space:nowrap;position:relative}.mat-button-toggle .mat-icon svg{vertical-align:top}.mat-button-toggle.cdk-keyboard-focused .mat-button-toggle-focus-overlay{opacity:1}.cdk-high-contrast-active .mat-button-toggle.cdk-keyboard-focused .mat-button-toggle-focus-overlay{opacity:.5}.mat-button-toggle-appearance-standard:not(.mat-button-toggle-disabled):hover .mat-button-toggle-focus-overlay{opacity:.04}.mat-button-toggle-appearance-standard.cdk-keyboard-focused:not(.mat-button-toggle-disabled) .mat-button-toggle-focus-overlay{opacity:.12}.cdk-high-contrast-active .mat-button-toggle-appearance-standard.cdk-keyboard-focused:not(.mat-button-toggle-disabled) .mat-button-toggle-focus-overlay{opacity:.5}@media(hover: none){.mat-button-toggle-appearance-standard:not(.mat-button-toggle-disabled):hover .mat-button-toggle-focus-overlay{display:none}}.mat-button-toggle-label-content{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;display:inline-block;line-height:36px;padding:0 16px;position:relative}.mat-button-toggle-appearance-standard .mat-button-toggle-label-content{padding:0 12px}.mat-button-toggle-label-content>*{vertical-align:middle}.mat-button-toggle-focus-overlay{border-radius:inherit;pointer-events:none;opacity:0;top:0;left:0;right:0;bottom:0;position:absolute}.mat-button-toggle-checked .mat-button-toggle-focus-overlay{border-bottom:solid 36px}.cdk-high-contrast-active .mat-button-toggle-checked .mat-button-toggle-focus-overlay{opacity:.5;height:0}.cdk-high-contrast-active .mat-button-toggle-checked.mat-button-toggle-appearance-standard .mat-button-toggle-focus-overlay{border-bottom:solid 500px}.mat-button-toggle .mat-button-toggle-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-button-toggle-button{border:0;background:none;color:inherit;padding:0;margin:0;font:inherit;outline:none;width:100%;cursor:pointer}.mat-button-toggle-disabled .mat-button-toggle-button{cursor:default}.mat-button-toggle-button::-moz-focus-inner{border:0}\\n\"]\n            }]\n    }], function () { return [{ type: MatButtonToggleGroup, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_BUTTON_TOGGLE_GROUP]\n            }] }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc1.FocusMonitor }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS]\n            }] }]; }, { ariaLabelledby: [{\n            type: Input,\n            args: ['aria-labelledby']\n        }], change: [{\n            type: Output\n        }], tabIndex: [{\n            type: Input\n        }], appearance: [{\n            type: Input\n        }], checked: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], id: [{\n            type: Input\n        }], name: [{\n            type: Input\n        }], ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], _buttonElement: [{\n            type: ViewChild,\n            args: ['button']\n        }], value: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatButtonToggleModule {\n}\nMatButtonToggleModule.ɵfac = function MatButtonToggleModule_Factory(t) { return new (t || MatButtonToggleModule)(); };\nMatButtonToggleModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatButtonToggleModule });\nMatButtonToggleModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ imports: [[MatCommonModule, MatRippleModule], MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatButtonToggleModule, { declarations: function () { return [MatButtonToggleGroup, MatButtonToggle]; }, imports: function () { return [MatCommonModule, MatRippleModule]; }, exports: function () { return [MatCommonModule, MatButtonToggleGroup, MatButtonToggle]; } }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatButtonToggleModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatCommonModule, MatRippleModule],\n                exports: [MatCommonModule, MatButtonToggleGroup, MatButtonToggle],\n                declarations: [MatButtonToggleGroup, MatButtonToggle]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS, MAT_BUTTON_TOGGLE_GROUP, MAT_BUTTON_TOGGLE_GROUP_VALUE_ACCESSOR, MatButtonToggle, MatButtonToggleChange, MatButtonToggleGroup, MatButtonToggleModule };\n\n//# sourceMappingURL=button-toggle.js.map","import { Location } from '@angular/common';\r\nimport { Component, Inject, OnInit } from '@angular/core';\r\nimport {\r\n  MatDialog,\r\n  MatDialogRef,\r\n  MAT_DIALOG_DATA,\r\n} from '@angular/material/dialog';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ToasterService, UserService } from 'projects/core/src/public-api';\r\nimport { CreateMoodboardPopupComponent } from 'projects/moodboard/src/lib/components/create-moodboard-popup/create-moodboard-popup.component';\r\nimport { MoodboardService } from 'projects/moodboard/src/lib/services/moodboard.service';\r\nimport { QuoteListService } from 'projects/quote/src/lib/components/quote-list/quote-list.service';\r\nimport {\r\n  AddproductComponent,\r\n  QuoteCreateFormComponent,\r\n} from 'projects/quote/src/public-api';\r\nimport { ShopService } from '../../service/shop.service';\r\n\r\n@Component({\r\n  selector: 'lib-product-details',\r\n  templateUrl: './product-details.component.html',\r\n  styleUrls: ['./product-details.component.scss'],\r\n})\r\nexport class ProductDetailsComponent implements OnInit {\r\n  productdetails: any;\r\n  panelOpenState: any = false;\r\n  activeIndex: any;\r\n  totalQty: any;\r\n  monthNums: any = 12;\r\n  rentalPrice: any;\r\n\r\n  productId: number = NaN;\r\n  warehouseId: number = NaN;\r\n  variationId: number = NaN;\r\n  forDialog: boolean = false;\r\n  forMoodboard: boolean = true;\r\n  forQuote: boolean = true;\r\n  forHitler: boolean = false;\r\n\r\n  selectedType: '0' | '1' = '0';\r\n  quantityCounter = 1;\r\n\r\n  moodboardList: Array<any> = [];\r\n  selectedMoodboard: string = '';\r\n  quoteList: Array<any> = [];\r\n  selectedQuote: string = '';\r\n  constructor(\r\n    private _dialog: MatDialog,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    private moodboardService: MoodboardService,\r\n    private _route: ActivatedRoute,\r\n    private _moodboardService: MoodboardService,\r\n    private _quoteListService: QuoteListService,\r\n    private _user: UserService,\r\n    private _shopService: ShopService,\r\n    private _toaster: ToasterService,\r\n    private __dialog: MatDialog,\r\n    private _router: Router,\r\n    private _location: Location,\r\n    public dialogRef: MatDialogRef<any>\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    if (this.data) {\r\n      this.forDialog = this.data.hasOwnProperty('forDialog')\r\n        ? this.data?.forDialog\r\n        : false;\r\n      this.forMoodboard = this.data.hasOwnProperty('forMoodboard')\r\n        ? this.data?.forMoodboard\r\n        : true;\r\n      this.forQuote = this.data.hasOwnProperty('forQuote')\r\n        ? this.data?.forQuote\r\n        : true;\r\n\r\n      this.forHitler = this.data.hasOwnProperty('forHitler')\r\n        ? this.data?.forHitler\r\n        : false;\r\n    }\r\n\r\n    if (!this.forDialog) {\r\n      this._route.params.subscribe((data) => {\r\n        this.productId = data.productId;\r\n        this.warehouseId = data.warehouseId;\r\n        this.variationId = data.variationId;\r\n        this.getProduct(this.productId, this.warehouseId, this.variationId);\r\n      });\r\n      this.getMyMoodboards();\r\n      this.getMyQuotes();\r\n    } else {\r\n      this.productId = this.data?.item?.product_id;\r\n      this.warehouseId = this.data?.item?.warehouse_id;\r\n      this.variationId = this.data?.item?.sku_variation_id;\r\n      this.getProduct(this.productId, this.warehouseId, this.variationId);\r\n      if (this.forMoodboard) {\r\n        this.getMyMoodboards();\r\n      }\r\n    }\r\n  }\r\n\r\n  increment(): void {\r\n    if (this.quantityCounter + 1 > this.data?.item?.supplier_quantity) {\r\n      return;\r\n    }\r\n    this.quantityCounter++;\r\n  }\r\n  decrement(): void {\r\n    if (this.quantityCounter - 1 < 0) {\r\n      return;\r\n    }\r\n    this.quantityCounter--;\r\n  }\r\n  updateRent(event: any) {\r\n    console.log(event);\r\n    var actualMonths = 36;\r\n    var userSelectedMonths = event;\r\n    var selectedMonths = actualMonths - userSelectedMonths;\r\n    this.monthNums = userSelectedMonths;\r\n    this.productdetails?.variations[this.activeIndex]?.default_price.forEach(\r\n      (prices: any, index: any) => {\r\n        if (selectedMonths == index) {\r\n          this.rentalPrice = prices.rental_price;\r\n        }\r\n      }\r\n    );\r\n  }\r\n  closeModal() {\r\n    this._dialog.closeAll();\r\n  }\r\n  getProduct(pid: any, wid: any, skuId: any) {\r\n    this.moodboardService\r\n      .getProductDetails(pid, wid)\r\n      .subscribe((response: any) => {\r\n        this.productdetails = response.result;\r\n        this.activeIndex = response.result.variations.findIndex(\r\n          (item: any) => item.sgid == skuId\r\n        );\r\n        this.totalQty = 0;\r\n        this.rentalPrice =\r\n          this.productdetails?.variations[\r\n            this.activeIndex\r\n          ]?.default_price[24]?.rental_price;\r\n        this.productdetails?.variations[\r\n          this.activeIndex\r\n        ]?.warehouse_location_new.forEach((value: any, index: any) => {\r\n          this.totalQty += value.total_warehouse_quantity;\r\n        });\r\n      });\r\n  }\r\n\r\n  getMyMoodboards() {\r\n    this._moodboardService.getMyMoodBoardList().subscribe(\r\n      (data: any) => {\r\n        this.moodboardList = data?.result;\r\n        if (this.data?.moodboardId) {\r\n          this.selectedMoodboard = this.data.moodboardId;\r\n        } else if (data?.result?.length > 0) {\r\n          this.selectedMoodboard = data?.result[0].id;\r\n        }\r\n      },\r\n      (error) => (this.moodboardList = [])\r\n    );\r\n  }\r\n  getMyQuotes() {\r\n    this._quoteListService\r\n      .getQuoteList<Array<any>>(this._user.getUser().getId(), 'my', 'quotes')\r\n      .subscribe(\r\n        (data: Array<any>) => {\r\n          this.quoteList = data;\r\n          this.selectedQuote = data[0].sgid;\r\n        },\r\n        (error) => (this.quoteList = [])\r\n      );\r\n  }\r\n\r\n  addItemToMoodboard() {\r\n    let obj = {\r\n      month: this.monthNums,\r\n      button_type: this.selectedType,\r\n      mood_board_id: this.selectedMoodboard,\r\n      product_id: this.productId,\r\n      product_ids: [this.productId],\r\n      quantity: this.quantityCounter,\r\n      sku: this.variationId,\r\n      user_id: this._user.getUser().getId(),\r\n      warehouse_id: this.warehouseId,\r\n    };\r\n    this._shopService.addItemToMoodboard(obj).subscribe(\r\n      (data) => {\r\n        this._toaster.success('Item added to Moodboard');\r\n        this.quantityCounter = 1;\r\n      },\r\n      (error) => this._toaster.error('Fail to add')\r\n    );\r\n  }\r\n\r\n  addItemToQuote() {\r\n    // let obj = {\r\n    //   button_type: this.selectedType,\r\n    //   floorplan_id: null,\r\n    //   month: this.monthNums,\r\n    //   moodboard_id: null,\r\n    //   product_id: this.productId,\r\n    //   quantity: this.quantityCounter,\r\n    //   quote_id: this.selectedQuote,\r\n    //   sku: this.variationId,\r\n    //   units: null,\r\n    //   user_id: this._user.getUser().getId(),\r\n    //   warehouse_id: this.warehouseId,\r\n    // };\r\n    // this._shopService.addItemToQuote(obj).subscribe(\r\n    //   (data) => this._toaster.success('Item added to Quote'),\r\n    //   (error) => this._toaster.error('Fail to add')\r\n    // );\r\n    this._dialog\r\n      .open(AddproductComponent, {\r\n        height: '80%',\r\n        width: '50%',\r\n        data: {\r\n          isDialog: true,\r\n          quoteId: this.selectedQuote,\r\n          product_id: this.productId,\r\n          sku: this.variationId,\r\n          quantity: this.quantityCounter,\r\n          button_type: this.selectedType,\r\n          month: this.monthNums,\r\n          warehouse_id: this.warehouseId,\r\n          user_id: this._user.getUser().getId(),\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((data) => {\r\n        this.quantityCounter = 1;\r\n        console.log(data);\r\n      });\r\n  }\r\n  createNewMB() {\r\n    this._dialog\r\n      .open(CreateMoodboardPopupComponent, {\r\n        height: '80%',\r\n        width: '70%',\r\n        data: {\r\n          isDialog: true,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((data) => {\r\n        console.log(data);\r\n      });\r\n  }\r\n  createNewQuote() {\r\n    this._dialog\r\n      .open(QuoteCreateFormComponent, {\r\n        height: '80%',\r\n        width: '70%',\r\n        data: {\r\n          isDialog: true,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((data) => {\r\n        console.log(data);\r\n      });\r\n  }\r\n\r\n  cityChange(evt: any) {\r\n    if (evt?.value) {\r\n      this.warehouseId = evt.value;\r\n      let warehouse = this.productdetails.warehouses.find(\r\n        (x: any) => x.warehouse_id == evt.value\r\n      );\r\n      this.variationId = warehouse.sku_variation_id;\r\n      this.reload();\r\n    }\r\n  }\r\n\r\n  variationChange(variation: any) {\r\n    this.variationId = variation.sgid;\r\n    this.warehouseId = variation.warehouse_location_new[0].warehouse_id;\r\n    this.reload();\r\n  }\r\n  reload() {\r\n    if (this.forDialog) {\r\n      this.getProduct(this.productId, this.warehouseId, this.variationId);\r\n      return;\r\n    }\r\n    this._router.navigate([\r\n      'shop',\r\n      this.productId,\r\n      this.warehouseId,\r\n      this.variationId,\r\n    ]);\r\n    this.monthNums = 12;\r\n  }\r\n\r\n  back() {\r\n    this._location.back();\r\n  }\r\n  itemChange(product: any) {}\r\n\r\n  buyMoodboard() {\r\n    const buyObj = this.getBuyOrRentObject('buy');\r\n    this._shopService.addItemToMoodboard(buyObj).subscribe(\r\n      (data) => {\r\n        this._toaster.success('Item added to Moodboard');\r\n        this.dialogRef.close({ event: 'added' });\r\n      },\r\n      (error) => this._toaster.error('Fail to add')\r\n    );\r\n  }\r\n\r\n  rentMoodboard() {\r\n    const buyObj = this.getBuyOrRentObject('rent');\r\n    this._shopService.addItemToMoodboard(buyObj).subscribe(\r\n      (data) => {\r\n        this._toaster.success('Item added to Moodboard');\r\n        this.dialogRef.close({ event: 'added' });\r\n      },\r\n      (error) => this._toaster.error('Fail to add')\r\n    );\r\n  }\r\n\r\n  getBuyOrRentObject(type: string) {\r\n    return {\r\n      button_type: type == 'buy' ? '1' : '0',\r\n      month: this.monthNums,\r\n      mood_board_id: this.data.moodboardId,\r\n      product_id: this.productId,\r\n      product_ids: [this.productId],\r\n      quantity: this.quantityCounter,\r\n      sku: this.variationId,\r\n      user_id: this._user.getUser().getId(),\r\n      warehouse_id: this.warehouseId,\r\n    };\r\n  }\r\n}\r\n","<div\r\n  class=\"product\"\r\n  fxLayoutGap=\"1rem\"\r\n  fxLayout=\"column\"\r\n  fxLayoutAlign=\" stretch\"\r\n  [ngClass]=\"{ 'dialog-padding': forDialog }\"\r\n>\r\n  <div\r\n    class=\"product-details\"\r\n    *ngIf=\"forDialog\"\r\n    fxLayout=\"row\"\r\n    fxFlex=\"100\"\r\n    fxLayoutGap=\"1rem\"\r\n    fxLayoutAlign=\"space-between center\"\r\n    style=\"margin-bottom: 0rem !important\"\r\n  >\r\n    <!-- <div [ngClass]=\"{ 'product-details-title': !forDialog }\" fxFlex=\"95\">\r\n      {{ productdetails?.name }} -\r\n      {{ productdetails?.variations[activeIndex]?.sgid }}\r\n    </div> -->\r\n    <ng-container *ngIf=\"forDialog\">\r\n      <span class=\"product_variation_header\"\r\n        >{{ productdetails?.name }} -\r\n        {{ productdetails?.variations[activeIndex]?.sgid }}</span\r\n      >\r\n    </ng-container>\r\n    <div fxLayout=\"row-reverse\">\r\n      <button\r\n        type=\"button\"\r\n        class=\"close\"\r\n        data-dismiss=\"modal\"\r\n        (click)=\"closeModal()\"\r\n      >\r\n        &times;\r\n      </button>\r\n    </div>\r\n  </div>\r\n  <div fxLayout=\"row\" fxLayoutGap=\"1rem\" class=\"h2\">\r\n    <ng-container *ngIf=\"!forDialog\">\r\n      <mat-icon style=\"cursor: pointer\" (click)=\"back()\"> arrow_back </mat-icon>\r\n      <span class=\"product_variation_header\"\r\n        >Dashboard/Product/ {{ productdetails?.name }}</span\r\n      >\r\n    </ng-container>\r\n  </div>\r\n  <mat-divider></mat-divider>\r\n  <div\r\n    class=\"product-details\"\r\n    fxLayout=\"row\"\r\n    fxFlex=\"100\"\r\n    fxLayoutGap=\"1rem\"\r\n    fxLayoutAlign=\"stretch\"\r\n  >\r\n    <div\r\n      class=\"left\"\r\n      fxFlex=\"50\"\r\n      fxLayoutGap=\"1rem\"\r\n      fxLayout=\"column\"\r\n      fxLayoutAlign=\"start  stretch\"\r\n    >\r\n      <div\r\n        fxLayout=\"column\"\r\n        fxLayoutAlign=\"center center\"\r\n        style=\"height: 375px\"\r\n        class=\"product-image\"\r\n      >\r\n        <img\r\n          style=\"max-width: 250px; max-height: 100%\"\r\n          class=\"img\"\r\n          src=\"{{\r\n            productdetails?.variations[activeIndex]?.default_images[0]\r\n              ?.image_url.large\r\n          }}\"\r\n          alt=\"{{ productdetails?.name }}\"\r\n        />\r\n        <app-image-slider\r\n          [list]=\"productdetails?.variations\"\r\n          [imgKey]=\"'default_images[0].image_url.small'\"\r\n          (onChange)=\"variationChange($event)\"\r\n          class=\"image-slider\"\r\n        ></app-image-slider>\r\n      </div>\r\n      <mat-accordion class=\"example-headers-align\" multi>\r\n        <mat-expansion-panel\r\n          class=\"no-box-shadow\"\r\n          (opened)=\"panelOpenState = true\"\r\n          (closed)=\"panelOpenState = false\"\r\n        >\r\n          <mat-expansion-panel-header>\r\n            <mat-panel-title> Feature And Description </mat-panel-title>\r\n          </mat-expansion-panel-header>\r\n          <p>\r\n            {{ productdetails?.features_description }}\r\n          </p>\r\n        </mat-expansion-panel>\r\n      </mat-accordion>\r\n\r\n      <!-- <mat-accordion class=\"example-headers-align\" multi>\r\n        <mat-expansion-panel\r\n          class=\"no-box-shadow\"\r\n          (opened)=\"panelOpenState = true\"\r\n          (closed)=\"panelOpenState = false\"\r\n        >\r\n          <mat-expansion-panel-header>\r\n            <mat-panel-title> Features </mat-panel-title>\r\n          </mat-expansion-panel-header>\r\n          <p>{{ productdetails?.features }}</p>\r\n        </mat-expansion-panel>\r\n      </mat-accordion> -->\r\n      <mat-accordion class=\"example-headers-align\" multi>\r\n        <mat-expansion-panel\r\n          class=\"no-box-shadow\"\r\n          (opened)=\"panelOpenState = true\"\r\n          (closed)=\"panelOpenState = false\"\r\n        >\r\n          <mat-expansion-panel-header>\r\n            <mat-panel-title> Dimensions </mat-panel-title>\r\n          </mat-expansion-panel-header>\r\n          <p>{{ productdetails?.variations[activeIndex]?.dimension }}</p>\r\n        </mat-expansion-panel>\r\n      </mat-accordion>\r\n      <!-- <mat-card>\r\n        <div\r\n          fxLayout=\"row wrap\"\r\n          fxLayoutAlign=\"stretch\"\r\n          class=\"variations__img\"\r\n        >\r\n          <div\r\n            class=\"img-class\"\r\n            fxFlex=\"22\"\r\n            (click)=\"variationChange(imgSrc)\"\r\n            *ngFor=\"let imgSrc of productdetails?.variations\"\r\n            [ngClass]=\"{ 'selected-variation': imgSrc.sgid == variationId }\"\r\n          >\r\n            <img\r\n              width=\"100%\"\r\n              height=\"100%\"\r\n              class=\"img\"\r\n              src=\"{{ imgSrc.default_images[0]?.image_url.large }}\"\r\n              alt=\"{{ productdetails?.name }}\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </mat-card> -->\r\n    </div>\r\n    <div fxFlex=\"50\" fxLayout=\"column\" fxLayoutAlign=\"start stretch\">\r\n      <div\r\n        class=\"product-details__right\"\r\n        fxLayout=\"row wrap\"\r\n        fxLayoutAlign=\"flex-start\"\r\n      >\r\n        <div\r\n          class=\"row\"\r\n          fxLayout=\"row wrap\"\r\n          fxFlex=\"100\"\r\n          fxLayoutAlign=\"flex-start\"\r\n        >\r\n          <div class=\"column label\" fxFlex=\"40\" fxLayoutAlign=\"flex-start\">\r\n            Product Name:\r\n          </div>\r\n          <div class=\"column value\" fxFlex=\"58\" fxLayoutAlign=\"flex-start\">\r\n            {{ productdetails?.name }}\r\n          </div>\r\n        </div>\r\n        <div\r\n          class=\"row\"\r\n          fxLayout=\"row wrap\"\r\n          fxFlex=\"100\"\r\n          fxLayoutAlign=\"flex-start\"\r\n        >\r\n          <div\r\n            class=\"column label\"\r\n            fxLayout=\"column\"\r\n            fxFlex=\"40\"\r\n            fxLayoutAlign=\"flex-start\"\r\n          >\r\n            Category:\r\n          </div>\r\n          <div\r\n            class=\"column value\"\r\n            fxLayout=\"column\"\r\n            fxFlex=\"58\"\r\n            fxLayoutAlign=\"flex-start\"\r\n          >\r\n            {{ productdetails?.category?.category_name }}\r\n          </div>\r\n        </div>\r\n        <div\r\n          class=\"row\"\r\n          fxLayout=\"row wrap\"\r\n          fxFlex=\"100\"\r\n          fxLayoutAlign=\"flex-start\"\r\n        >\r\n          <div\r\n            class=\"column label\"\r\n            fxLayout=\"column\"\r\n            fxFlex=\"40\"\r\n            fxLayoutAlign=\"flex-start\"\r\n          >\r\n            Buy Price:\r\n          </div>\r\n          <div\r\n            class=\"column value\"\r\n            fxLayout=\"column\"\r\n            fxFlex=\"58\"\r\n            fxLayoutAlign=\"flex-start\"\r\n          >\r\n            {{ productdetails?.variations[activeIndex]?.buyPrice | currency }}\r\n          </div>\r\n        </div>\r\n        <div\r\n          class=\"row\"\r\n          fxLayout=\"row wrap\"\r\n          fxFlex=\"100\"\r\n          fxLayoutAlign=\"flex-start\"\r\n        >\r\n          <div\r\n            class=\"column label\"\r\n            fxLayout=\"column\"\r\n            fxFlex=\"40\"\r\n            fxLayoutAlign=\"flex-start\"\r\n          >\r\n            Rental Price/12 month:\r\n          </div>\r\n          <div\r\n            class=\"column value\"\r\n            fxLayout=\"column\"\r\n            fxFlex=\"58\"\r\n            fxLayoutAlign=\"flex-start\"\r\n          >\r\n            {{ rentalPrice | currency }}\r\n          </div>\r\n        </div>\r\n        <div\r\n          class=\"row\"\r\n          fxLayout=\"row wrap\"\r\n          fxFlex=\"100\"\r\n          fxLayoutAlign=\"flex-start\"\r\n        >\r\n          <div\r\n            class=\"column label\"\r\n            fxLayout=\"column\"\r\n            fxFlex=\"40\"\r\n            fxLayoutAlign=\"flex-start\"\r\n          >\r\n            Available Qty:\r\n          </div>\r\n          <div\r\n            class=\"column value\"\r\n            fxLayout=\"column\"\r\n            fxFlex=\"58\"\r\n            fxLayoutAlign=\"flex-start\"\r\n          >\r\n            {{ totalQty }}\r\n          </div>\r\n        </div>\r\n        <div\r\n          class=\"row\"\r\n          fxLayout=\"row wrap\"\r\n          fxFlex=\"100\"\r\n          fxLayoutAlign=\"flex-start center\"\r\n        >\r\n          <div\r\n            class=\"column label\"\r\n            fxLayout=\"column\"\r\n            fxFlex=\"40\"\r\n            fxLayoutAlign=\"flex-start\"\r\n          >\r\n            Rent Duration:\r\n          </div>\r\n          <div\r\n            class=\"column\"\r\n            fxLayout=\"row\"\r\n            fxFlex=\"58\"\r\n            fxLayoutAlign=\"flex-start\"\r\n          >\r\n            <!-- <input\r\n              fxFlex\r\n              class=\"range-slider__range\"\r\n              type=\"range\"\r\n              value=\"{{ monthNums }}\"\r\n              min=\"1\"\r\n              max=\"36\"\r\n              (change)=\"updateRent($event)\"\r\n            /> -->\r\n            <mat-slider\r\n              fxFlex\r\n              min=\"1\"\r\n              max=\"36\"\r\n              step=\"1\"\r\n              [(ngModel)]=\"monthNums\"\r\n              (input)=\"updateRent($event.value)\"\r\n            ></mat-slider>\r\n            <mat-form-field fxFlex=\"15\" appearance=\"outline\">\r\n              <input matInput [(ngModel)]=\"monthNums\" type=\"text\" />\r\n            </mat-form-field>\r\n\r\n            <!-- <span class=\"range-slider__value\">{{ monthNums }}</span> -->\r\n          </div>\r\n        </div>\r\n        <div\r\n          class=\"row\"\r\n          fxLayout=\"row wrap\"\r\n          fxFlex=\"100\"\r\n          fxLayoutAlign=\"flex-start\"\r\n        >\r\n          <div\r\n            class=\"column label\"\r\n            fxLayout=\"column\"\r\n            fxFlex=\"40\"\r\n            fxLayoutAlign=\"center start\"\r\n          >\r\n            City:\r\n          </div>\r\n          <div\r\n            class=\"column\"\r\n            fxLayout=\"column\"\r\n            fxFlex=\"58\"\r\n            fxLayoutAlign=\"flex-start\"\r\n          >\r\n            <mat-form-field fxFlex appearance=\"outline\">\r\n              <mat-select\r\n                (selectionChange)=\"cityChange($event)\"\r\n                [(value)]=\"\r\n                  productdetails?.variations[activeIndex]\r\n                    ?.warehouse_location_new[0].warehouse_id\r\n                \"\r\n              >\r\n                <mat-option\r\n                  *ngFor=\"let city of productdetails?.warehouses\"\r\n                  [value]=\"city.warehouse_id\"\r\n                  >{{ city.warehouse_name }}</mat-option\r\n                >\r\n              </mat-select>\r\n            </mat-form-field>\r\n            <!-- <select class=\"grey\" (selectionChange)=\"cityChange($event)\" [(ngModel)]=\"productdetails?.variations[activeIndex]\r\n            ?.warehouse_location_new[0].warehouse_id\"\r\n           fxFlex>\r\n              <option  *ngFor=\"let city of productdetails?.warehouses\"  [value]=\"city.warehouse_id\">{{ city.warehouse_name }}</option>\r\n            </select> -->\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <ng-container *ngIf=\"!forDialog\">\r\n        <div\r\n          *ngIf=\"forMoodboard || forQuote\"\r\n          fxLayout=\"row\"\r\n          fxLayoutGap=\"2rem\"\r\n          class=\"add-item__header\"\r\n        >\r\n          <mat-radio-group\r\n            fxLayout=\"row\"\r\n            fxLayoutAlign=\"start center\"\r\n            [(ngModel)]=\"selectedType\"\r\n          >\r\n            <mat-radio-button style=\"padding-right: 2rem\" value=\"0\">\r\n              Rent\r\n            </mat-radio-button>\r\n            <mat-radio-button value=\"1\"> Buy </mat-radio-button>\r\n          </mat-radio-group>\r\n          <div\r\n            fxFlex\r\n            fxLayout=\"row\"\r\n            fxLayoutAlign=\"start center\"\r\n            style=\"padding-top: 0.1rem\"\r\n          >\r\n            <span style=\"padding-right: 2rem\"> Qty : </span>\r\n            <app-counter\r\n              [(counter)]=\"quantityCounter\"\r\n              fxFlex=\"30\"\r\n              [readOnly]=\"true\"\r\n            ></app-counter>\r\n          </div>\r\n        </div>\r\n        <div\r\n          class=\"add-to-md\"\r\n          *ngIf=\"forHitler || forMoodboard\"\r\n          [fxLayout]=\"forHitler ? 'row' : 'column'\"\r\n          fxLayoutAlign=\"center  center\"\r\n        >\r\n          <mat-label class=\"label pb_5\">Add/Select Moodboard</mat-label>\r\n          <div fxLayout=\"row\" fxLayoutGap=\"1rem\" fxLayoutAlign=\"start center\">\r\n            <!-- <div (click)=\"createNewMB()\" class=\"add-to-md-button\">\r\n            <img  src=\"assets/shop/addButton.svg\"/>\r\n          </div> -->\r\n            <!-- <mat-form-field *ngIf=\"!forHitler\" fxFlex=\"50\" appearance=\"outline\">\r\n            <mat-select\r\n              [disabled]=\"this.data?.moodboardId\"\r\n              [(ngModel)]=\"selectedMoodboard\"\r\n            >\r\n              <mat-option\r\n                *ngFor=\"let moodboard of moodboardList\"\r\n                [value]=\"moodboard.id\"\r\n                >{{ moodboard.id + \" - \" + moodboard.boardname }}</mat-option\r\n              >\r\n              <mat-option *ngIf=\"moodboardList.length === 0\" value=\"\"\r\n                >No Moodborad</mat-option\r\n              >\r\n            </mat-select>\r\n          </mat-form-field> -->\r\n            <!-- <select class=\"grey\"  [disabled]=\"this.data?.moodboardId\" [(ngModel)]=\"selectedMoodboard\" fxFlex=\"50\">\r\n            <option  *ngIf=\"moodboardList.length === 0\" value=\"\" >No Moodborad</option>\r\n            <option  *ngFor=\"let moodboard of moodboardList\"  [value]=\"moodboard.id\">{{ moodboard.id + \" - \" + moodboard.boardname }}</option>\r\n          </select> -->\r\n            <button\r\n              class=\"add-button round_button label\"\r\n              [disabled]=\"true || moodboardList.length === 0\"\r\n              mat-flat-button\r\n              color=\"accent\"\r\n              (click)=\"addItemToMoodboard()\"\r\n            >\r\n              ADD TO MOODBOARD\r\n            </button>\r\n          </div>\r\n\r\n          <!-- <div *ngIf=\"forHitler\" style=\"padding: 0.5rem\">\r\n          Add to\r\n          <span style=\"font-weight: bold\">{{ data?.mb?.boardname }}</span>\r\n        </div> -->\r\n        </div>\r\n        <div *ngIf=\"forQuote\" fxLayout=\"column\" class=\"add-to-quote\">\r\n          <mat-label class=\"label pb_5\">Add/Select Quote</mat-label>\r\n          <div fxLayout=\"row\" fxLayoutGap=\"1rem\" fxLayoutAlign=\"start center\">\r\n            <!-- <div (click)=\"createNewQuote()\" class=\"add-to-quote-button\">\r\n              <img src=\"assets/shop/addButton.svg\" />\r\n            </div> -->\r\n            <!-- <mat-form-field fxFlex=\"50\" appearance=\"outline\">\r\n            <mat-select [(ngModel)]=\"selectedQuote\">\r\n              <mat-option\r\n                *ngFor=\"let quote of quoteList\"\r\n                [value]=\"quote.sgid\"\r\n                >{{ quote.sgid + \" - \" + quote.name }}</mat-option\r\n              >\r\n              <mat-option *ngIf=\"quoteList.length === 0\" value=\"\"\r\n                >No Quotes</mat-option\r\n              >\r\n            </mat-select>\r\n          </mat-form-field> -->\r\n            <!-- <select class=\"grey\" [(ngModel)]=\"selectedQuote\" fxFlex=\"50\">\r\n              <option *ngIf=\"quoteList.length === 0\" value=\"\" value=\"\">\r\n                Select a Project\r\n              </option>\r\n              <option *ngFor=\"let quote of quoteList\" [value]=\"quote.sgid\">\r\n                {{ quote.sgid + \" - \" + quote.name }}\r\n              </option>\r\n            </select> -->\r\n            <button\r\n              class=\"add-button round_button label\"\r\n              [disabled]=\"true || quoteList.length === 0\"\r\n              mat-flat-button\r\n              (click)=\"addItemToQuote()\"\r\n              color=\"accent\"\r\n            >\r\n              ADD TO QUOTE\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </ng-container>\r\n      <ng-container *ngIf=\"forDialog\">\r\n        <div\r\n          class=\"product-details__right\"\r\n          fxLayout=\"column\"\r\n          style=\"padding: 40px\"\r\n        >\r\n          <div\r\n            fxFlex\r\n            fxLayout=\"row\"\r\n            fxLayoutAlign=\"start center\"\r\n            fxLayout=\"row wrap\"\r\n            fxFlex=\"100\"\r\n            fxLayoutAlign=\"flex-start center\"\r\n            style=\"padding-top: 0.1rem\"\r\n          >\r\n            <span style=\"padding-right: 1rem\"> Quantity : </span>\r\n            <app-counter\r\n              [(counter)]=\"quantityCounter\"\r\n              fxFlex=\"20\"\r\n              [readOnly]=\"true\"\r\n              [customCss]=\"true\"\r\n            ></app-counter>\r\n          </div>\r\n          <div\r\n            fxFlex\r\n            fxLayout=\"row\"\r\n            fxLayoutAlign=\"start center\"\r\n            fxLayoutGap=\"1rem\"\r\n            style=\"padding-top: 2rem\"\r\n          >\r\n            <button\r\n              mat-raised-button\r\n              type=\"button\"\r\n              class=\"summary_btn_position\"\r\n              color=\"accent\"\r\n              aria-label=\"\"\r\n              (click)=\"rentMoodboard()\"\r\n            >\r\n              RENT\r\n            </button>\r\n            <button\r\n              mat-raised-button\r\n              type=\"button\"\r\n              class=\"summary_btn_position\"\r\n              color=\"accent\"\r\n              aria-label=\"\"\r\n              (click)=\"buyMoodboard()\"\r\n            >\r\n              BUY\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </ng-container>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { EnvironmentService, HttpService } from 'projects/core/src/public-api';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { UserService } from '../../../../core/src/lib/services/user.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ShopService {\r\n  constructor(\r\n    private _http: HttpService,\r\n    private _env: EnvironmentService,\r\n    private userService: UserService\r\n  ) {}\r\n\r\n  addItemToMoodboard(obj: any): Observable<any> {\r\n    return this._http.sendPOSTRequest(\r\n      this._env.getEndPoint() + 'add/moodboard/items',\r\n      JSON.stringify(obj)\r\n    );\r\n  }\r\n  getProducts({\r\n    start,\r\n    count,\r\n    category = null,\r\n    supplier = null,\r\n    warehouse = null,\r\n    min_price,\r\n    max_price,\r\n    rental_min_price,\r\n    rental_max_price,\r\n    min_price_inventory,\r\n    keywords,\r\n    preferred_delivery_start_date = null,\r\n    preferred_delivery_end_date = null\r\n  }: {\r\n    start: number;\r\n    count: number;\r\n    category?: string | null;\r\n    supplier?: string | null;\r\n    warehouse?: string | null;\r\n    min_price?: number;\r\n    max_price?: number;\r\n    rental_min_price?: number;\r\n    rental_max_price?: number;\r\n    min_price_inventory?: number;\r\n    keywords?: string | null;\r\n    preferred_delivery_start_date?:any;\r\n    preferred_delivery_end_date?:any\r\n  }): Observable<any> {\r\n    let price = '';\r\n    if (undefined != min_price) {\r\n      price +=\r\n        '&price_option_1=purchase&price_option_2=range&min_price=' + min_price;\r\n    }\r\n    if (undefined != min_price_inventory) {\r\n      price +=\r\n        '&min_price_inventory=' +\r\n        min_price_inventory +\r\n        '&inventory_filter_request_type=all';\r\n      if (undefined != max_price) price += '&max_price=' + max_price;\r\n      if (rental_min_price) price += '&rental_min_price=' + rental_min_price;\r\n      if (rental_max_price) price += '&rental_max_price=' + rental_max_price;\r\n      let search = '';\r\n      if (undefined != keywords) search += '&keywords=' + keywords;\r\n    }\r\n    if (undefined != max_price) {\r\n      price += '&max_price=' + max_price;\r\n    }\r\n    if (rental_min_price) {\r\n      price += '&rental_min_price=' + rental_min_price;\r\n    }\r\n    if (rental_max_price) {\r\n      price += '&rental_max_price=' + rental_max_price;\r\n    }\r\n    if (undefined != keywords) {\r\n      price += '&keywords=' + keywords;\r\n    }\r\n    if (preferred_delivery_start_date != null) {\r\n      price += '&preferred_delivery_start_date=' + preferred_delivery_start_date\r\n    }\r\n    if (preferred_delivery_end_date != null) {\r\n      price += '&preferred_delivery_end_date=' + preferred_delivery_end_date\r\n    }\r\n    return this._http.sendGETRequest(\r\n      this._env.getEndPoint() +\r\n        'product/filter2?start=' +\r\n        start +\r\n        '&user_id=' +\r\n        this.userService.getUser().getId() +\r\n        '&count=' +\r\n        count +\r\n        '&category=' +\r\n        category +\r\n        '&supplier=' +\r\n        supplier +\r\n        '&warehouse=' +\r\n        warehouse +\r\n        price\r\n    );\r\n  }\r\n\r\n  addItemToQuote(obj: any): Observable<any> {\r\n    return this._http.sendPOSTRequest(\r\n      this._env.getEndPoint() + 'put/product/commonQuoteForProductAndMoodboard',\r\n      JSON.stringify(obj)\r\n    );\r\n  }\r\n\r\n  resetFilters(): Observable<any> {\r\n    return this._http.sendPOSTRequest(\r\n      this._env.getEndPoint() + 'clearSearchFilterParams',\r\n      JSON.stringify({ user_id: this.userService.getUser().getId() })\r\n    );\r\n  }\r\n\r\n  generateRent(obj :any) {\r\n    return this._http.sendPOSTRequest(\r\n      this._env.getEndPoint() + 'generateRentRange' ,\r\n      obj\r\n    ).pipe(map((data:any) => data.message))\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { EnvironmentService } from 'projects/core/src/lib/services/environment.service';\r\nimport { ComputationService, HttpService, PdfService, UserService } from 'projects/core/src/public-api';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class MoodboardService {\r\n  constructor(\r\n    private http: HttpService,\r\n    private env: EnvironmentService,\r\n    private userService: UserService,\r\n    private _computationService: ComputationService\r\n  ) {}\r\n\r\n  getStateList<T>(): Observable<T> {\r\n    let url = this.env.getEndPoint() + 'load/states';\r\n    return this.http.sendGETRequest(url, {});\r\n  }\r\n  getMoodBoardType<T>(): Observable<T> {\r\n    let url = this.env.getEndPoint() + 'getMoodBoardType';\r\n    return this.http.sendGETRequest(url, {});\r\n  }\r\n  getcompanyByUserMoodboard<T>(): Observable<T> {\r\n    let url =\r\n      this.env.getEndPoint() +\r\n      'getcompanyByUserMoodboard?user_id=' +\r\n      this.userService.getUser().getId();\r\n    return this.http.sendGETRequest(url, {});\r\n  }\r\n  \r\n  getItems<T>(param: any): Observable<T> {\r\n    let url = this.env.getEndPoint() + 'product/filter2';\r\n    return this.http.sendGETRequest(url, { params: param });\r\n  }\r\n  getCityList<T>(): Observable<T> {\r\n    let url = this.env.getEndPoint() + 'warehouse';\r\n    return this.http.sendGETRequest(url, {});\r\n  }\r\n  getCategoryList<T>(): Observable<T> {\r\n    let url = this.env.getEndPoint() + 'getCategory';\r\n    return this.http.sendGETRequest(url, {});\r\n  }\r\n  getProjectList<T>(): Observable<T> {\r\n    let url =\r\n      this.env.getEndPoint() + 'getMoodBoardProjectFilter?project_name=';\r\n    return this.http.sendGETRequest(url, {});\r\n  }\r\n  getMoodBoard<T>(id: any): Observable<T> {\r\n    let url =\r\n      this.env.getEndPoint() + 'load/moodboard/items?moodboard_id=' + id;\r\n    return this.http.sendGETRequest(url, {});\r\n  }\r\n  deleteItemToMoodboard<T>(param?:any): Observable<T> {\r\n    let url = this.env.getEndPoint()+'remove/moodboard/items';\r\n    return this.http.sendPOSTRequest(url, JSON.stringify(param) ,{});\r\n  }\r\n\r\n  updateMDItem(md:any){\r\n    let obj ={\r\n      \"sgid\":md.sgid,\r\n      \"moodboard_id\":md.moodboard_id,\r\n      \"qty\":md.is_qty,\r\n      \"months\":md.months,\r\n      \"total\":md.is_total,\r\n      \"price\":md.price,\r\n      sale_price : md.sale_price,\r\n      \"asset_value\":md.asset_value,\r\n      \"button_type\":md.button_type,\r\n      \"buy_price\" : md.buy_price,\r\n    }\r\n    return this.http.sendPOSTRequest( this.env.getEndPoint() + 'update/moodboard/singleitem',JSON.stringify(obj))\r\n  }\r\n  \r\n  getMBSummary<T>(id: number): Observable<T> {\r\n    return this.http\r\n      .sendGETRequest(\r\n        this.env.getEndPoint() + 'load/moodboard/items?moodboard_id=' + id\r\n      )\r\n      .pipe(\r\n        map((data: any) => {\r\n          return data.moodboard_items.map((item: any) => {\r\n            item['is_total'] = parseFloat(item.net_total);\r\n            item['is_qty'] = parseFloat(item.qty);\r\n            return item;\r\n          });\r\n        })\r\n      );\r\n  }\r\n  removeMyMB<T>(param: any): Observable<T> {\r\n    let url = this.env.getEndPoint() + 'disable/moodboard';\r\n    return this.http.sendPOSTRequest(url, JSON.stringify(param),{});\r\n  }\r\n  getMoodBoardList<T>(param: any): Observable<T> {\r\n    let url = this.env.getEndPoint() + 'getMoodBoard';\r\n    param['user_id'] = this.userService.getUser().getId();\r\n    return this.http.sendGETRequest(url, { params: param });\r\n  }\r\n  getMyMoodBoardList<T>(param?: any): Observable<T> {\r\n    let url = this.env.getEndPoint() + 'getMoodBoardByUser';\r\n    if (!param) {\r\n      param = {};\r\n    }\r\n    param['userid'] = this.userService.getUser().getId();\r\n    return this.http.sendPOSTRequest(url, JSON.stringify(param), {});\r\n  }\r\n  getProductDetails<T>(pid: any, wid: any): Observable<T> {\r\n    let url = this.env.getEndPoint() + 'product';\r\n    let param = { \"product_id\": \"\"+pid, \"warehouse_id\": \"\"+wid };\r\n    return this.http.sendPOSTRequest(url, JSON.stringify(param), {});\r\n  }\r\n  getDisabledMBList<T>(param: any): Observable<T> {\r\n    let url = this.env.getEndPoint() + 'disable_moodboards';\r\n    param['user_id'] = this.userService.getUser().getId();\r\n    return this.http.sendGETRequest(url, { params: param });\r\n  }\r\n  updateMoodboard(param: any): Observable<any> {\r\n    let url = this.env.getEndPoint() + 'updateMoodBoard';\r\n    return this.http.sendPOSTRequest<any>(url, param, {});\r\n  }\r\n  createMoodboard(param: any): Observable<any> {\r\n    let url = this.env.getEndPoint() + 'createMoodBoard';\r\n    return this.http.sendPOSTRequest<any>(url, param, {});\r\n  }\r\n  getMBQuote(param: any): Observable<any> {\r\n    let url =\r\n      this.env.getEndPoint() +\r\n      'load/customer/quotes?user_id=98&source_type=my&type=null';\r\n    return this.http.sendGETRequest(url, {});\r\n  }\r\n  requestRendering(param: any): Observable<any> {\r\n    let url = this.env.getEndPoint() + 'sendEmailMoodboard';\r\n    return this.http.sendPOSTRequest<any>(url, param, {});\r\n  }\r\n  addMBItem(param: any) {\r\n    return this.http.sendPOSTRequest(\r\n      this.env.getEndPoint() + 'add/moodboard/items',\r\n      param,\r\n      {}\r\n    );\r\n  }\r\n\r\n}\r\n"],"sourceRoot":"webpack:///"}