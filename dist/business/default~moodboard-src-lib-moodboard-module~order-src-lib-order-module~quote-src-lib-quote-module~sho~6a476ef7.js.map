{"version":3,"sources":["./projects/quote/src/lib/common/components/add-fp/add-fp.component.ts","./projects/quote/src/lib/common/components/add-fp/add-fp.component.html","./projects/quote/src/lib/components/quote-list/quote-list.component.ts","./projects/quote/src/lib/components/quote-list/quote-list.component.html","./projects/quote/src/lib/common/components/addproduct/add-product.service.ts","./projects/quote/src/lib/components/quote-list/quote-list.service.ts","./projects/quote/src/lib/components/quote-detail/quote-detail.component.ts","./projects/quote/src/lib/components/quote-detail/quote-detail.component.html","./projects/quote/src/lib/common/components/add-moodboard-quote/add-moodboard-quote.component.ts","./projects/quote/src/lib/common/components/add-moodboard-quote/add-moodboard-quote.component.html","./projects/quote/src/lib/components/quote-create/quote-create.component.ts","./projects/quote/src/lib/components/quote-create/quote-create.component.html","./projects/quote/src/lib/common/components/select-fp/select-fp.component.ts","./projects/quote/src/lib/common/components/select-fp/select-fp.component.html","./projects/quote/src/lib/common/components/addproduct/addproduct.component.ts","./projects/quote/src/lib/common/components/addproduct/addproduct.component.html","./projects/quote/src/lib/components/floor-plan-unit/floor-plan-unit.component.ts","./projects/quote/src/lib/components/floor-plan-unit/floor-plan-unit.component.html","./projects/quote/src/lib/common/quote-common.module.ts","./projects/quote/src/lib/components/quote/quote-detail.service.ts","./projects/quote/src/lib/common/components/quote-create-form/quote-create-form.component.ts","./projects/quote/src/lib/common/components/quote-create-form/quote-create-form.component.html","./projects/quote/src/lib/common/components/quote-header/quote-header.component.ts","./projects/quote/src/lib/common/components/quote-header/quote-header.component.html","./projects/quote/src/lib/common/components/quote-create-form/quote-create-form.service.ts","./node_modules/@angular/material/__ivy_ngcc__/fesm2015/checkbox.js","./node_modules/@angular/material/__ivy_ngcc__/fesm2015/select.js","./projects/quote/src/lib/common/components/quote-header/quote-header.service.ts","./projects/quote/src/lib/quote-routing.ts","./projects/quote/src/lib/common/components/delete-item/delete-item.component.ts","./projects/quote/src/lib/common/components/delete-item/delete-item.component.html","./projects/quote/src/lib/common/components/add-fpu/add-fpu.component.ts","./projects/quote/src/lib/common/components/add-fpu/add-fpu.component.html","./projects/quote/src/lib/common/components/item-type/item-type.component.html","./projects/quote/src/lib/common/components/item-type/item-type.component.ts","./projects/quote/src/lib/common/components/floor-plan-details/floor-plan-details.component.ts","./projects/quote/src/lib/common/components/floor-plan-details/floor-plan-details.component.html","./projects/quote/src/lib/quote.service.ts","./projects/quote/src/lib/common/components/moodboard/moodboard.component.ts","./projects/quote/src/lib/common/components/moodboard/moodboard.component.html","./projects/quote/src/lib/common/components/select-fpu/select-fpu.component.ts","./projects/quote/src/lib/common/components/select-fpu/select-fpu.component.html","./projects/quote/src/lib/common/components/floor-plan-details/floor-plan-details.service.ts","./projects/quote/src/lib/components/quote/quote.component.ts","./projects/quote/src/lib/components/quote/quote.component.html","./projects/quote/src/lib/common/components/total-cell-renderer/total-cell-renderer.component.ts","./projects/quote/src/lib/common/components/total-cell-renderer/total-cell-renderer.component.html","./projects/quote/src/lib/quote.module.ts"],"names":[],"mappings":"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a,CAAC,yEAAU,CAAC,iFAAkB,CAAC,4EAAa;AACvF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,eAAe;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,0DAAY;AACtC;AACA,uCAAuC,0DAAY;AACnD;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA,oDAAoD;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,WAAW,0BAA0B,QAAQ;AAChE;AACA,oBAAoB,uBAAuB;AAC3C,yBAAyB,kBAAkB,mFAAqB,QAAQ;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA,yBAAyB,mFAAqB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,4BAA4B;AACrD;AACA;AACA,8BAA8B,mFAAqB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;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;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,4DAAc;AACrD;AACA;AACA;AACA;AACA;AACA,8BAA8B,4DAAc;AAC5C;AACA;AACA;AACA,WAAW,4DAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,iFAAkB,CAAC,4EAAa,CAAC,4EAAa,CAAC,8EAAe;AAC1F;AACA;AACA;AACA;AACA;AACA,+BAA+B,4DAAc;AAC7C;AACA;AACA;AACA;AACA;AACA,8DAA8D,sCAAsC;AACpG,wBAAwB,+DAAwB,EAAE,yEAAyE,gEAAyB,GAAG,6DAA6D,KAAK;AACzN,cAAc,oDAAoD,+DAAwB;AAC1F,cAAc,uDAAS;AACvB;AACA;AACA,6BAA6B,6DAA6D;AAC1F,aAAa;AACb,KAAK,eAAe,EAAE;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,eAAe;AACjD;AACA;AACA;AACA,4BAA4B,6CAAO;AACnC;AACA,gCAAgC;AAChC;AACA,iCAAiC;AACjC;AACA,4CAA4C,eAAe;AAC3D;AACA,6CAA6C,6CAAO;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,mDAAK;AAC3C;AACA;AACA,4CAA4C,iEAAS,WAAW,iEAAS,OAAO,mDAAK;AACrF;AACA;AACA,sBAAsB,4DAAI,KAAK,iEAAS;AACxC,SAAS;AACT;AACA,gCAAgC,0DAAY;AAC5C;AACA,oDAAoD,8DAAM,UAAU,2DAAG,QAAQ,EAAE;AACjF;AACA,oDAAoD,8DAAM,WAAW,2DAAG,QAAQ,EAAE;AAClF;AACA,mCAAmC,0DAAY;AAC/C;AACA;AACA;AACA;AACA;AACA,+BAA+B,0DAAY;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,0BAA0B;AACjD;AACA;AACA;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA,yBAAyB,mFAAqB;AAC9C;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;AACA,yBAAyB,mFAAqB;AAC9C;AACA;AACA,kCAAkC,qCAAqC;AACvE;AACA,uCAAuC,mFAAqB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,0BAA0B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,oBAAoB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,wCAAwC;AAC7E;AACA,0CAA0C,kFAAoB;AAC9D;AACA;AACA,cAAc,iBAAiB;AAC/B;AACA;AACA;AACA;AACA;AACA,mCAAmC,uEAAc;AACjD;AACA;AACA;AACA;AACA;AACA,kBAAkB,4EAAoB,IAAI,iEAAS;AACnD;AACA;AACA;AACA;AACA,0CAA0C,iEAAS;AACnD;AACA;AACA,SAAS;AACT,kCAAkC,iEAAS,QAAQ,iuCAAuC,iEAAU,gBAAgB,+DAAQ;AACzE,wBAAwB,iEAAU,gBAAgB,kEAAW;AAC7D,sCAAsC,4DAAK,gBAAgB,4DAAK;AAChE;AACA;AACA,kDAAkD,6EAAc;AAChE;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,iEAAU,gBAAgB,+DAAQ;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,4DAAK,gBAAgB,4DAAK;AACrE,aAAa,6EAAc;AAC3B;AACA;AACA;AACA,4DAA4D,wDAAC;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,4DAAI;AAChD;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,8CAA8C,4BAA4B;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,4EAA0B;AACzD;AACA;AACA;AACA;AACA;AACA,qCAAqC,iEAAS;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,qCAAqC,iEAAS;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,mCAAmC,mDAAK;AACxC,yCAAyC,iEAAS;AAClD;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,QAAQ,mDAAK;AACb,kBAAkB,iEAAS;AAC3B;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,kCAAkC,+DAAwB,CAAC,oEAAoB,GAAG,+DAAwB,CAAC,+DAAwB,GAAG,+DAAwB,CAAC,oDAAa,GAAG,+DAAwB,CAAC,wEAAwB,GAAG,+DAAwB,CAAC,wDAAiB,GAAG,+DAAwB,CAAC,gEAAqB,MAAM,+DAAwB,CAAC,sDAAa,MAAM,+DAAwB,CAAC,kEAAyB,MAAM,+DAAwB,CAAC,2EAAc,MAAM,+DAAwB,CAAC,yDAAgB,OAAO,+DAAwB,cAAc,+DAAwB,8BAA8B,+DAAwB,CAAC,+DAAoB,GAAG,+DAAwB,wBAAwB;AAC3vB,sBAAsB,+DAAwB,EAAE,0EAA0E;AAC1H,QAAQ,yDAAkB;AAC1B,QAAQ,yDAAkB;AAC1B,QAAQ,yDAAkB,CAAC,wEAAmB;AAC9C,KAAK;AACL;AACA,QAAQ,4DAAqB,MAAM,yDAAkB;AACrD,QAAQ,4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AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,uDAAS;AAC3B;AACA,SAAS;AACT,kBAAkB,uDAAS;AAC3B;AACA,SAAS;AACT,kBAAkB,uDAAS;AAC3B,mBAAmB,wEAAmB;AACtC,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB;AACA,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS,GAAG,EAAE,EAAE;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,iEAAS;AACnD;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,4DAAI;AAC3C;AACA;AACA,kFAAkF,sBAAsB;AACxG;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,2BAA2B,4FAA6B;AACxD;AACA,6CAA6C,uFAAwB;AACrgCAAgC,4FAA6B;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,QAAQ;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,+CAA+C;AAC/F,iBAAiB,+DAAwB,EAAE,qHAAqH;AAChK,QAAQ,4DAAqB;AAC7B,QAAQ,4DAAqB,WAAW,gEAAS;AACjD,QAAQ,4DAAqB,WAAW,mEAAY;AACpD,KAAK;AACL;AACA,QAAQ,4DAAqB,MAAM,yDAAkB;AACrD,QAAQ,4DAAqB,MAAM,yDAAkB;AACrD,Q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","file":"default~moodboard-src-lib-moodboard-module~order-src-lib-order-module~quote-src-lib-quote-module~sho~6a476ef7.js","sourcesContent":["import { Component, Inject, Input, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { ToasterService, UserService } from 'projects/core/src/public-api';\nimport { AddProductService } from '../addproduct/add-product.service';\nimport { QuoteService } from '../../../quote.service';\n\n@Component({\n  selector: 'lib-add-fp',\n  templateUrl: './add-fp.component.html',\n  styleUrls: ['./add-fp.component.scss'],\n})\nexport class AddFPComponent implements OnInit {\n  @Input() quoteId = '';\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public dialogData: any,\n    private _user: UserService,\n    private _quoteService: QuoteService,\n    private _toaster: ToasterService,\n    private _dialogRef: MatDialogRef<AddFPComponent>,\n    private _addProductService: AddProductService,\n  ) {}\n  selectedFloorPlan = '';\n  floorPlanTypes: Array<any> = [\n    {\n      name: 'Studio',\n      sgid: 1,\n    },\n    {\n      name: '1 Bedroom',\n      sgid: 2,\n    },\n    {\n      name: '2 Bedroom',\n      sgid: 3,\n    },\n    {\n      name: '3 Bedroom',\n      sgid: 4,\n    },\n    {\n      name: '4 Bedroom',\n      sgid: 5,\n    },\n    {\n      name: '5 Bedroom',\n      sgid: 6,\n    },\n    {\n      name: '6 Bedroom',\n      sgid: 7,\n    },\n    {\n      name: '7 Bedroom',\n      sgid: 8,\n    },\n    {\n      name: '8 Bedroom',\n      sgid: 9,\n    },\n    {\n      name: '9 Bedroom',\n      sgid: 10,\n    },\n    {\n      name: '10 Bedroom',\n      sgid: 11,\n    },\n  ];\n  floorPlanFormGroup = new FormGroup({});\n  ngOnInit(): void {\n    this.quoteId = this.dialogData.quoteId;\n    this.floorPlanFormGroup.addControl(\n      'floorplan_name',\n      new FormControl('', [Validators.required])\n    );\n    this.floorPlanFormGroup.addControl(\n      'floorplan_type_id',\n      new FormControl('', [Validators.required])\n    );\n    this.floorPlanFormGroup.addControl(\n      'units',\n      new FormControl('', [Validators.required])\n    );\n\n  }\n  onCancel(){\n    this._dialogRef.close(0);\n  }\n  onSubmit() {\n    let obj = this.floorPlanFormGroup.value;\n    obj.quote_id = this.quoteId;\n    obj.userid = this._user.getUser().getId();\n    this._quoteService.createFloorPlan(obj).subscribe((resp) => {\n      if (resp.statusCode == 200) {\n        this._toaster.success(resp.message);\n        this._dialogRef.close(1);\n        this._dialogRef.close({event : 'success'})\n      } else {\n        this._toaster.success(resp.message);\n        this._dialogRef.close(0);\n      }\n    });\n  }\n}\n","<div\n  fxLayout=\"row\"\n  style=\"width: 100%; cursor: pointer\"\n  fxLayoutAlign=\"space-between start\"\n>\n  <div style=\"margin-bottom: 2rem\">Create a floor plan</div>\n  <i class=\"fa fa-times\" mat-dialog-close aria-hidden=\"true\"></i>\n</div>\n<div style=\"margin-bottom: 2rem\" mat-dialog-content>\n  <form\n    [formGroup]=\"floorPlanFormGroup\"\n    fxLayout=\"column\"\n    fxLayoutGap=\"2rem\"\n    action=\"\"\n  >\n    <div fxLayout=\"row\" fxLayoutGap=\"2rem\" fxLayoutAlign=\"start\">\n      <mat-label style=\"width: 50%\">Floor Plan Name*</mat-label>\n      <mat-form-field appearance=\"outline\">\n        <input formControlName=\"floorplan_name\" matInput />\n      </mat-form-field>\n    </div>\n    <div fxLayout=\"row\" fxLayoutGap=\"2rem\" fxLayoutAlign=\"start\">\n      <mat-label style=\"width: 50%\">Floor Plan Type*</mat-label>\n      <mat-form-field appearance=\"outline\">\n        <mat-select formControlName=\"floorplan_type_id\">\n          <mat-option *ngFor=\"let type of floorPlanTypes\" [value]=\"type.sgid\">\n            {{ type.name }}\n          </mat-option>\n        </mat-select>\n      </mat-form-field>\n    </div>\n    <div fxLayout=\"row\" fxLayoutGap=\"2rem\" fxLayoutAlign=\"start\">\n      <mat-label style=\"width: 50%\">No of Units*</mat-label>\n      <mat-form-field appearance=\"outline\">\n        <input formControlName=\"units\" matInput />\n      </mat-form-field>\n    </div>\n  </form>\n</div>\n<div mat-dialog-actions fxLayoutAlign=\"center\">\n  <button\n    class=\"round\"\n    (click)=\"onSubmit()\"\n    [disabled]=\"floorPlanFormGroup.invalid\"\n    mat-flat-button\n    color=\"accent\"\n  >\n    ADD\n  </button>\n  <button class=\"round\" mat-flat-button (click)=\"onCancel()\" color=\"primary\">\n    CANCEL\n  </button>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { GridOptions, GridReadyEvent, ICellRendererParams } from 'ag-grid-community';\nimport {\n  ImageRendererComponent,\n  UserService,\n} from 'projects/core/src/public-api';\nimport { Observable } from 'rxjs';\nimport { quoteRoute } from '../../quote-routing';\nimport { QuoteListService } from './quote-list.service';\n\n@Component({\n  selector: 'lib-quote-list',\n  templateUrl: './quote-list.component.html',\n  styleUrls: ['./quote-list.component.scss'],\n})\nexport class QuoteListComponent implements OnInit {\n  quoteInfo = {\n    bannerIconImg: 'assets/dashboard/images/quote.svg',\n    bannerIconImgTxt: 'Quote Icon',\n    bannerImg: 'assets/quote/images/quote_banner.jpg',\n    bannerImgTxt: 'Quote Banner Image',\n    bannerBottomTxt:\n      'Get an estimated cost for a particular moodboard, piece or project.',\n    text: 'Quote',\n  };\n\n  columnDefs = [\n    { field: 'sgid', headerName: 'Quote Number' },\n    { field: 'name', headerName: 'Customer name' },\n    { field: 'company_name', headerName: 'Company Name' },\n    { field: 'project_name', headerName: 'Project Name' },\n    {\n      field: 'created_at',\n      headerName: 'Quote Created Date',\n      valueFormatter : (params:ICellRendererParams)=>{\n        return params?.data?.created_at?.split(' ')[0];\n      }\n    },\n    {\n      field: 'is_order',\n      headerName: 'Order Submitted',\n      onCellClicked: (params: any) => {\n        console.log(params);\n      },\n    },\n  ];\n\n  defaultColDef = {\n    wrapText: true,\n    cellClass: 'grid-cell',\n    cellStyle: {\n      'line-height': 'normal',\n      'align-items': 'center',\n      'justify-content': 'center',\n      display: 'flex',\n      padding: '0 0.5rem',\n    },\n  };\n\n  rowData: Observable<any[]> = new Observable();\n  gridOptions: GridOptions = {\n    onRowClicked: (param) => this.onRowClicked(param),\n    // headerHeight: 100\n    rowHeight: 50,\n    onGridReady: (api: GridReadyEvent) => this.onGridReady(api),\n  };\n\n  selectedButton: 'allQuote' | 'myQuote' = 'allQuote';\n  frameworkComponents = {\n    ImageRendererComponent: ImageRendererComponent,\n  };\n  projectList : any= []\n  selectedProject = \"\";\n  constructor(\n    private _quoteListService: QuoteListService,\n    private _router: Router,\n    private _userService: UserService\n  ) {}\n\n  ngOnInit(): void {\n    this.getProjectList()\n  }\n  onGridReady(api: GridReadyEvent) {\n    this.getQuoteList()\n    api.api.sizeColumnsToFit();\n  }\n\n  onRowClicked(param: any) {\n    let quoteId = param?.data?.sgid;\n    if (param?.data?.order_status && quoteId) {\n      this._router.navigate(['order', quoteId]);\n    } else if (quoteId) {\n      this._router.navigate(['quote', quoteId]);\n    }\n  }\n\n  getQuoteList() {\n    this.getProjectList();\n    this.rowData = this._quoteListService.getQuoteList(\n      this._userService.getUser().getId(),\n      this.selectedButton == 'myQuote'?'my':'',\n      'quotes',\n      this.selectedProject\n    );\n  }\n  myQuote(){\n    this.selectedButton = 'myQuote';\n    this.getQuoteList()\n  }\n  allQuote(){\n    this.selectedButton ='allQuote';\n    this.getQuoteList();\n  }\n\n  getProjectList(){\n    let userId =  this._userService.getUser().getId();\n    this._quoteListService.getProjectList(this.selectedButton == 'myQuote'? 'my':'all',userId).subscribe((response:any) => {\n      this.projectList = response.quoteProject;\n    });    \n  }\n\n  createQuote() {\n    this._router.navigate(['quote/create']);\n  }\n\n  projectFilter(value: any){\n    this.selectedProject = value;\n    this.getQuoteList()\n  }\n}\n","<div class=\"quotes\" fxLayout=\"column\" fxLayoutAlign=\" stretch\">\n  <app-banner\n    [iconSrc]=\"quoteInfo.bannerIconImg\"\n    [iconAltTxt]=\"quoteInfo.bannerIconImgTxt\"\n    [leftTxt]=\"quoteInfo.text\"\n    [src]=\"quoteInfo.bannerImg\"\n    [altTxt]=\"quoteInfo.bannerImgTxt\"\n    [bottomTxt]=\"quoteInfo.bannerBottomTxt\"\n  ></app-banner>\n\n  <div\n    class=\"quotes-create\"\n    fxLayout=\"row\"\n    fxLayoutAlign=\"center center\"\n    fxLayoutGap=\"2rem\"\n  >\n    <button mat-raised-button (click)=\"createQuote()\">\n      <mat-icon inline=\"true\">add_circle_outline</mat-icon>\n    </button>\n    <span class=\"quotes-create-text\">CREATE A NEW QUOTE</span>\n    <mat-form-field class=\"select\">\n      <mat-label>Select a Project</mat-label>\n      <mat-select (selectionChange)=\"projectFilter($event.value)\" >\n        <mat-option  *ngFor=\"let project of projectList\" [value]=\"project.project_name\">{{project.project_name}}</mat-option>\n      </mat-select>\n    </mat-form-field>\n  </div>\n  <div\n    class=\"quotes-filter\"\n    fxLayout=\"row\"\n    fxLayoutAlign=\"center center\"\n    fxLayoutGap=\"2rem\"\n  >\n    <button [style.background]=\"selectedButton==='myQuote'?'#F3F3F3':''\" mat-flat-button [color]=\"selectedButton==='allQuote' ?'accent':''\" (click)=\"allQuote()\">ALL QUOTES</button>\n    <button [style.background]=\"selectedButton==='allQuote'?'#F3F3F3':''\" mat-flat-button [color]=\"selectedButton==='myQuote'?'accent':''\" (click)=\"myQuote()\">MY QUOTES</button>\n  </div>\n  <ag-grid-angular\n  [defaultColDef]=\"defaultColDef\"\n    style=\"height: 500px;\"\n    [gridOptions]=\"gridOptions\"\n    class=\"ag-theme-alpine quotes-table\"\n    [rowData]=\"rowData | async\"\n    [columnDefs]=\"columnDefs\"\n  >\n  </ag-grid-angular>\n</div>\n","import { Injectable } from '@angular/core';\nimport { EnvironmentService, HttpService, UserService } from 'projects/core/src/public-api';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AddProductService {\n\n  constructor(    \n      private _http: HttpService,\n      private _env: EnvironmentService,\n      private _user: UserService\n    ) { }\n    getFPList(id: any): Observable<any> {\n      let url = 'getFloorplanDetails';\n      return this._http.sendPOSTRequest(\n        this._env.getEndPoint() + url,\n        JSON.stringify({\"quote_id\" : id})\n      );\n    }\n    getFPTypeList(): Observable<any> {\n      let url = 'getFloorplanType';\n      return this._http.sendGETRequest(\n        this._env.getEndPoint() + url\n      );\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { EnvironmentService } from 'projects/core/src/lib/services/environment.service';\nimport { HttpService } from 'projects/core/src/public-api';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class QuoteListService {\n  constructor(private http: HttpService, private env: EnvironmentService) {}\n\n  getQuoteList<T>(\n    userId: number,\n    type?: string,\n    sourceType?: string,\n    projectName: string = ''\n  ): Observable<T> {\n    let url =\n      'load/customer/quotes?user_id=' +\n      userId +\n      '&source_type=' +\n      type +\n      '&type=' +\n      sourceType +\n      '&project_name=' +\n      projectName;\n    return this.http.sendGETRequest(this.env.getEndPoint() + url).pipe(\n      map((data: any) => {\n        return data.quote;\n      })\n    );\n  }\n\n  getProjectList(sourceType: string, userId: number) {\n    return this.http.sendGETRequest(\n      this.env.getEndPoint() +\n        'getQuoteProjectFilter?project_name=' +\n        '&source_type=' +\n        sourceType +\n        '&userid=' +\n        userId\n    );\n  }\n}\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ActivatedRoute, Params } from '@angular/router';\nimport jsPDF from 'jspdf';\nimport autoTable from 'jspdf-autotable';\nimport { ToasterService, UserService, CoreService, PdfService, PaymentComponent } from 'projects/core/src/public-api';\nimport { QuoteHeaderComponent } from 'projects/quote/src/public-api';\nimport { QuoteDetailService } from '../quote/quote-detail.service';\n\n@Component({\n  selector: 'lib-quote-detail',\n  templateUrl: './quote-detail.component.html',\n  styleUrls: ['./quote-detail.component.scss']\n})\nexport class QuoteDetailComponent implements OnInit {\n  quoteId: number = 0;\n  @ViewChild('quoteHeader') quoteHeader: QuoteHeaderComponent =\n    {} as QuoteHeaderComponent;\n  constructor( private _route: ActivatedRoute,\n    private _quoteDetailService: QuoteDetailService,\n    private _toaster: ToasterService,\n    private _dialog: MatDialog,\n    private _user: UserService,\n    private _core: CoreService,\n    private _pdf: PdfService) { }\n\n    ngOnInit(): void {\n      this._route.params.subscribe((params: Params) => {\n        this.quoteId = params.id;\n      });\n    }\n  \n    saveQuote() {\n      let quoteData: Array<any> = [];\n      let quoteDetails = this.quoteHeader.quoteDetails;\n      let pinnedRowData = this.quoteHeader.pinnedBottomRowData;\n      let agGrid = this.quoteHeader.agGrid;\n      agGrid?.api?.forEachNode((rowNode) => {\n        let node = rowNode.data;\n        let obj: any = {\n          sgid: node?.sgid,\n          button_type: node?.button_type,\n          quote_id: quoteDetails.sgid,\n          sub_total: pinnedRowData[0].is_total,\n          old_month: node.old_month,\n          monthly_rent: quoteDetails.monthly_rent,\n          delivery_fee: quoteDetails.delivery_fee,\n          pickup_fee: quoteDetails.pickup_fee,\n          tax: pinnedRowData[2].is_total,\n          net_total: quoteDetails.net_total,\n          qty: node.is_qty,\n          discount: node.discount || 0,\n          quote_discount: quoteDetails.discount || 0,\n          quote_discount_price: quoteDetails.discount_price || 0,\n          percentage_discount: node.percentage_discount || 0,\n          months: node.months,\n          total: node.is_total,\n          price: node.price,\n          buy_price: node.buy_price,\n          sale_price: node.price,\n          apply_b2b_discount: node.b2b_discount || 0,\n        };\n        quoteData.push(obj);\n      });\n      this._quoteDetailService.updateQuote(quoteData).subscribe(\n        (data) => {\n          this._toaster.success('Quote Saved Successfully');\n        },\n        (error) => {\n          this._toaster.error(error);\n        }\n      );\n    }\n  \n    continueToPayment() {\n      this._dialog\n        .open(PaymentComponent, {\n          height: '15rem',\n          data: { quoteId: this.quoteHeader?.quoteDetails?.sgid },\n        })\n        .afterClosed()\n        .subscribe(\n          (data) => {\n            data['quote_id'] = this.quoteHeader?.quoteDetails?.sgid;\n            data['sgid'] = this._user.getUser().getId();\n            this._quoteDetailService.createOrder(data).subscribe(\n              (data) => {\n                this._toaster.success('Payment Done');\n              },\n              (error) => {\n                this._toaster.success('Payment Fails');\n              }\n            );\n          },\n          (error) => {}\n        );\n    }\n  \n    generatePdf() {\n      let data = this._pdf.getAgGridRowsAndColumns(this.quoteHeader.agGrid);\n      let imagesObs = this._pdf.getAllTableBase64Images(data?.rows as [], 3);\n      imagesObs.subscribe((images: any) => {\n        let doc = new jsPDF();\n        doc.text('Quote Information', 8,15);\n        let info = [\n          ['Project Name:', this.quoteHeader.quoteDetails.project_name],\n          ['address', this.quoteHeader.quoteDetails.address],\n          ['Company Name:', this.quoteHeader.quoteDetails.company_name],\n          ['Quote :', this.quoteHeader.quoteDetails.sgid],\n          ['Contact No:', this.quoteHeader.quoteDetails.contactno],\n          ['State:', this.quoteHeader.quoteDetails.is_state_name],\n          ['Customer Name:', this.quoteHeader.quoteDetails.name],\n          ['Email:', this.quoteHeader.quoteDetails.email],\n          ['City:', this.quoteHeader.quoteDetails.city_name],\n          ['Zipcode:', this.quoteHeader.quoteDetails.zipcode],\n        ];\n        autoTable(doc, {\n          ...this._pdf.getInformationTableUserOptions(),\n          body: info,\n        });\n        doc.addPage();\n        doc.text('Quote Summary', 10, 15);\n        autoTable(doc, {\n          ...this._pdf.getSummaryTableUserOptions(),\n          columnStyles: {\n            0: { cellWidth: 9 },\n            1: { cellWidth: 20 },\n            2: { cellWidth: 10 },\n            3: { cellWidth: 20 },\n            4: { cellWidth: 30 },\n            5: { cellWidth: 15 },\n            6: { cellWidth: 10 },\n            7: { cellWidth: 20 },\n            8: { cellWidth: 20 },\n            11: { cellWidth: 20 },\n          },\n          columns: data.columns,\n          body: data?.rows?.map((r: any) => {\n            if (!parseInt(r[0])) {\n              let temp = [];\n              temp.push({ content: r[0], colSpan: r.length - 1 });\n              temp.push(r[r.length - 1]);\n              r = temp;\n            }\n            return r;\n          }),\n          willDrawCell: (data) => {\n            if (data.section === 'body' && data.column.index === 3) {\n              data.cell.raw = '';\n              data.cell.text = [];\n            }\n          },\n          didDrawCell: (data) => {\n            if (data.section === 'body' && data.column.index === 3) {\n              var base64Img = 'data:image/jpeg;base64,' + images[data.row.index];\n              doc.addImage(\n                base64Img,\n                'JPEG',\n                data.cell.x + 1,\n                data.cell.y + 1,\n                18,\n                18\n              );\n            }\n          },\n        });\n        doc.save('quote.pdf');\n      });\n    }\n}\n","<div>\n    <lib-quote-header fxFill #quoteHeader [quoteId]=\"quoteId\">\n      <ng-container actions>\n        <button mat-flat-button color=\"primary\" (click)=\"saveQuote()\">\n          SAVE QUOTE\n        </button>\n        <button\n          mat-flat-button\n          color=\"primary\"\n          *ngIf=\"quoteHeader.editQuote\"\n          (click)=\"generatePdf()\"\n        >\n          GENERATE PDF\n        </button>\n        <span fxFlex></span>\n        <button\n          mat-flat-button\n          color=\"accent\"\n          *ngIf=\"quoteHeader.editQuote\"\n          (click)=\"continueToPayment()\"\n        >\n          CONTINUE TO PAYMENT\n        </button>\n      </ng-container>\n    </lib-quote-header>\n  </div>\n  <table id=\"my-table\"></table>\n  ","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { ToasterService, UserService } from 'projects/core/src/public-api';\nimport { QuoteService } from '../../../quote.service';\nimport { QuoteHeaderService } from '../quote-header/quote-header.service';\nimport { SelectFpComponent } from '../select-fp/select-fp.component';\nimport { SelectFpuComponent } from '../select-fpu/select-fpu.component';\n\n@Component({\n  selector: 'lib-add-moodboard-quote',\n  templateUrl: './add-moodboard-quote.component.html',\n  styleUrls: ['./add-moodboard-quote.component.scss']\n})\nexport class AddMoodboardQuoteComponent implements OnInit {\n\n  moodboardList: any;\n  selectedMoodboard: any = ''\n\n  constructor(private _quoteHeaderService: QuoteHeaderService,\n    @Inject(MAT_DIALOG_DATA) public dialogData: any,\n    private _user: UserService, private _quoteService: QuoteService,\n    private _toaster: ToasterService,\n    private _dialogRef: MatDialog,\n    public dialogRef: MatDialogRef<any>) { }\n\n  ngOnInit() {\n    this.getMoodBoards();\n  }\n\n  getMoodBoards() {\n    this._quoteHeaderService.getMoodBoardByUser().subscribe(\n      (data: any) => {\n        this.moodboardList = data.result;\n      },\n      (error) => {\n        this.moodboardList = [];\n      }\n    );\n  }\n\n  add(type: any) {\n    if (type == '') {\n      let obj = {\n        quote_id: this.dialogData.quoteId,\n        moodboard_id: this.selectedMoodboard,\n        user_id: this._user.getUser().getId()\n      };\n      this._quoteService.addQuoteMoodboard(obj).subscribe((resp: any) => {\n        if (resp.statusCode == 200) {\n          this._toaster.success(resp.message);\n          this.dialogRef.close({ event: 'defaultunit' });\n        } else {\n          this._toaster.success(resp.message);\n          this._dialogRef.closeAll();\n        }\n      });\n    }\n    if (type == 'fp') {\n      this._dialogRef\n        .open(SelectFpComponent, {\n          height: '70%',\n          width: '70%',\n          data: {\n            isDialog: true,\n            qid: this.dialogData.quoteId,\n            mid: this.selectedMoodboard\n          },\n        })\n        .afterClosed()\n        .subscribe((data) => {\n          console.log(data);\n          if (data && data.event == 'success') {\n            this.dialogRef.close({ event: 'floorPlan' });\n          }\n        });\n    }\n    if (type == 'fpu') {\n      this._dialogRef\n        .open(SelectFpuComponent, {\n          height: '80%',\n          width: '50%',\n          data: {\n            isDialog: true,\n            qid: this.dialogData.quoteId,\n            mid: this.selectedMoodboard\n          },\n        })\n        .afterClosed()\n        .subscribe((data) => {\n          console.log(data);\n          if (data && data.event == 'success') {\n            this.dialogRef.close({ event: 'floorPlanUnit' });\n          }\n\n        });\n    }\n\n  }\n\n  closeModal() {\n    this._dialogRef.closeAll()\n  }\n}\n","<div class=\"moodboard\">\n    <div fxLayoutGap=\"2rem\" fxLayout=\"column\" fxLayoutAlign=\" stretch\">\n        <div fxLayout=\"row\" fxFlex=\"100\" fxLayoutGap=\"1rem\" fxLayoutAlign=\"space-between center\">\n            <div>\n                <h2>LET'S GET STARTED</h2>\n            </div>\n            <button type=\"button\" class=\"close\" (click)=\"closeModal()\" data-dismiss=\"modal\">\n                &times;\n            </button>\n        </div>\n    </div>\n    <div fxLayoutGap=\"2rem\" fxLayout=\"column\" fxLayoutAlign=\" stretch\">\n        <div fxLayout=\"column\" fxLayoutGap=\"1rem\">\n            <h2>Select a Moodboard to be added to this quote.</h2>\n            <select fxFlex=\"50\" [(ngModel)]=\"selectedMoodboard\">\n                <option value=''>No Moodboard</option>\n                <option *ngFor = \"let moodboard of moodboardList\" [value]=\"moodboard.sgid\">{{moodboard.boardname}}</option>\n            </select>\n        </div>\n    </div>\n    <div fxLayout=\"column\" fxLayoutGap=\"2rem\" style=\"margin-top:3rem !important\">\n        <h2>Where would you like to add this Moodboard in the Quote?</h2>\n        <div fxLayout=\"row\" style=\"width: 98%; background: #F4F4F4;padding: 22px; margin: 2%;\"\n            fxLayoutAlign=\"space-between start\">\n            <div fxLayout=\"row\" style=\"width: 100%;\" fxLayoutAlign=\"space-between center\">\n                <div fxLayout=\"column\" fxLayoutGap=\"1rem\">\n                    <h2> Add to Default Unit </h2>\n                    <p> Add this Moodboard directly to a quote </p>\n                </div>\n                <button mat-flat-button fxFlex=\"30\" [disabled]=\"selectedMoodboard == ''\" color=\"accent\" class=\"btn-txt round\" (click)=\"add('')\"> + ADD </button>\n            </div>\n        </div>\n        <div fxLayout=\"row\" style=\"width: 98%; background: #F4F4F4;padding: 22px; margin: 2%;\"\n            fxLayoutAlign=\"space-between start\">\n            <div fxLayout=\"row\" style=\"width: 100%;\" fxLayoutAlign=\"space-between center\">\n                <div fxLayout=\"column\" fxLayoutGap=\"1rem\">\n                    <h2> Add to a Floor Plan\n                    </h2>\n                    <!-- <p> Add this Moodboard to a\n                    </p> -->\n                </div>\n                <button mat-flat-button fxFlex=\"30\" [disabled]=\"selectedMoodboard == ''\" class=\"btn-txt round\" color=\"accent\" (click)=\"add('fp')\"> + ADD </button>\n            </div>\n        </div>\n        <div fxLayout=\"row\" style=\"width: 98%; background: #F4F4F4;padding: 22px; margin: 2%;\"\n            fxLayoutAlign=\"space-between start\">\n            <div fxLayout=\"row\" style=\"width: 100%;\" fxLayoutAlign=\"space-between center\">\n                <div fxLayout=\"column\" fxLayoutGap=\"1rem\">\n                    <h2> Add to Unit(s)\n                    </h2>\n                    <!-- <p> Add this Moodboard to a\n                    </p> -->\n                </div>\n                <button mat-raised-button fxFlex=\"30\" [disabled]=\"selectedMoodboard == ''\" type=\"button\" color=\"accent\" class=\"round\" (click)=\"add('fpu')\"> + ADD </button>\n            </div>\n\n        </div>\n    </div>\n</div>","import { Location } from '@angular/common';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ToasterService } from 'projects/core/src/lib/services/toaster.service';\nimport { UserService } from 'projects/core/src/public-api';\nimport {\n  QuoteCreateFormComponent,\n  QuoteFormType,\n} from '../../common/components/quote-create-form/quote-create-form.component';\nimport { QuoteCreateService } from './quote-create.service';\n\n@Component({\n  selector: 'lib-quote-create',\n  templateUrl: './quote-create.component.html',\n  styleUrls: ['./quote-create.component.scss'],\n})\nexport class QuoteCreateComponent implements OnInit {\n  customerName: string = '';\n  subTitle =\n    'Get an estimated cost for a particular moodboard, piece or project.';\n  submitButtonText = 'CREATE';\n  type: QuoteFormType = 'CREATE';\n\n  @ViewChild('quoteFormComp') quoteFormComp: QuoteCreateFormComponent =\n    {} as QuoteCreateFormComponent;\n  constructor(private _router: Router, private _toaster: ToasterService, private _location: Location) {\n    let stateObject = _router.getCurrentNavigation()?.extras.state;\n    this.customerName = stateObject?.customerName;\n  }\n\n  ngOnInit(): void {\n    if (!this.customerName) {\n      this._router.navigate(['quote/create']);\n    }\n    if (this._router.url.includes('copy')) {\n      this.type = 'COPY';\n      this.subTitle = 'Copying Quote named -';\n    } else if (this._router.url.includes('edit')) {\n      this.subTitle = 'Editing Quote named -';\n      this.type = 'EDIT';\n      this.submitButtonText = 'UPDATE';\n    }\n  }\n\n  onSubmit(quote: any) {\n    this._toaster.success('Quote Created');\n    if(this.type == 'COPY') this._location.back();\n    this._router.navigate(['quote', quote.sgid]);\n  }\n\n  onCancel() {\n    // this._location.back();\n  }\n}\n","<!-- <app-create-form-header\n  [iconPath]=\"'assets/order/images/order-icon.png'\"\n  text=\"QUOTE\"\n  [subTitle]=\"subTitle\"\n>\n  <span subtitle>\n    <b *ngIf=\"customerName\">{{ \" \" + customerName }}</b>\n  </span>\n</app-create-form-header> -->\n<lib-quote-create-form\n  class=\"table\"\n  [type]=\"type\"\n  [submitButtonText]=\"submitButtonText\"\n  #quoteFormComp\n  (onSubmit)=\"onSubmit($event)\"\n  (onCancel)=\"onCancel()\"\n></lib-quote-create-form>\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { ToasterService, UserService } from 'projects/core/src/public-api';\nimport { QuoteService } from './../../../quote.service';\nimport { AddFPComponent } from '../add-fp/add-fp.component';\nimport { AddProductService } from '../addproduct/add-product.service';\n\n@Component({\n  selector: 'lib-select-fp',\n  templateUrl: './select-fp.component.html',\n  styleUrls: ['./select-fp.component.scss']\n})\nexport class SelectFpComponent implements OnInit {\n  fplist : any = [];\n  fpuList: any = [];\n  selectedFpid: any = '';\n  isSelectedAll: any = true;\n  constructor( \n    private _dialog: MatDialog,\n    @Inject(MAT_DIALOG_DATA) public dialogData: any,\n    private _user: UserService,\n    private _quoteService: QuoteService,\n    private _toaster: ToasterService,\n    private _dialogRef: MatDialogRef<SelectFpComponent>,\n    private _addProductService: AddProductService) { }\n\n  ngOnInit(): void {\n    this.getFpList()\n  }\n\n  getFpList() {\n    this._addProductService.getFPList(this.dialogData.qid).subscribe(\n      (data) => {\n        this.fplist = data.result;\n      },\n      (error) => {\n        this._toaster.error(error);\n      }\n    );\n  }\n  onCancel(){\n    this._dialogRef.close(0);\n  }\n  getFpu(ev: any){\n    this.selectedFpid = ev.target.value;\n    let obj= {\n      quote_id: this.dialogData.qid,\n      floorplan_id: this.selectedFpid\n    };\n    this._quoteService.getFpus(obj).subscribe((resp:any ) => {\n      if (resp.statusCode == 200) {\n        this.fpuList = resp.result;\n        this.fpuList.forEach((elem: any, index: any) => {\n          elem.isActive = true;\n        });\n        // this._toaster.success(resp.message);\n       // this._dialogRef.close(1);\n      } else {\n       // this._toaster.success(resp.message);\n       // this._dialogRef.close(0);\n      }\n    });\n\n  }\n  selectUnitsForPlans(unit: any) {\n    if (unit.isActive) {\n      let checker = 0;\n      this.fpuList.forEach((elem: any) => {\n        if (elem.isActive) {\n          checker++;\n        }\n      });\n      if (checker > 1) {\n        unit.isActive = false;\n      } else {\n      }\n\n    } else {\n      unit.isActive = true;\n    }\n  }\n  isAllUnit(bool: any) {\n    if (bool) {\n      this.isSelectedAll = true;\n      this.fpuList.forEach((elem: any) => {\n        elem.isActive = true;\n\n      });\n    } else {\n      this.isSelectedAll = false;\n    }\n  }\n  onCreateNewFP(){\n    this._dialog\n    .open(AddFPComponent, {\n      height: '70%',\n      width: '70%',\n      data: {\n        isDialog: true,\n        quoteId: this.dialogData.qid,\n      },\n    })\n    .afterClosed()\n    .subscribe((data) => {\n      console.log(data);\n      if(data && data.event) {\n        this.getFpList()\n      }\n      \n    });\n\n  }\n  onSubmit(){\n    let unitList: any = [];\n    if(this.isSelectedAll == true){\n      this.fpuList.forEach((element: any) => {\n        unitList.push(element.sgid);\n      });\n    } else {\n      this.fpuList.forEach((element: any) => {\n        if(element.isActive == false) unitList.push(element.sgid);\n      });\n    }\n    if(this.dialogData.product_id){\n      let obj = {\n        quote_id: this.dialogData.qid,\n        floorplan_id: this.selectedFpid,\n        user_id: this._user.getUser().getId(),\n        units : unitList,\n        product_id: this.dialogData.product_id,\n        sku:this.dialogData.sku,\n        quantity: this.dialogData.quantity,\n        button_type: this.dialogData.button_type,\n        month: this.dialogData.month,\n        warehouse_id: this.dialogData.warehouse_id,\n        source: this.dialogData.source\n      };\n      this._quoteService.addFPQuote(obj).subscribe((resp: any) => {\n        if (resp.statusCode == 200) {\n          this._toaster.success(resp.result);\n          this._dialogRef.close({ event : \"success\"});\n        } else {\n          this._toaster.success(resp.result);\n          this._dialogRef.close(0);\n        }\n      });\n    } else {\n\n      let obj = {\n        quote_id: this.dialogData.qid,\n        moodboard_id: this.dialogData.mid,\n        user_id: this._user.getUser().getId(),\n        floorplan_id : this.selectedFpid,\n        units : unitList,\n        source:this.dialogData.source\n        };\n        this._quoteService.addFPMB(obj).subscribe((resp: any) => {\n          if (resp.statusCode == 200) {\n            this._toaster.success(resp.result);\n            this._dialogRef.close(1);\n          } else {\n            this._toaster.success(resp.result);\n            this._dialogRef.close(0);\n          }\n        });    \n      }  \n   }\n}\n","<div fxLayout=\"row\" style=\"width: 100%;cursor: pointer;\" fxLayoutAlign=\"space-between start\" >\n    <div style=\"margin-bottom: 2rem\"> Add/Select Floor Plan </div>\n    <i class=\"fa fa-times\" mat-dialog-close aria-hidden=\"true\"></i>\n</div>\n<div style=\"margin-bottom: 2rem\" mat-dialog-content>\n  <div   fxLayout=\"column\" style=\"width: 100%; \" fxLayoutAlign=\"space-between start\" >\n    <div   fxLayout=\"row\"\n      style=\"width: 100%; margin: 2%; \"\n      fxLayoutAlign=\"center\"\n      class=\"txt\"\n    >\n      Add this moodboard to an existing floor plan or create a new floor plan.\n    </div>\n    <div fxLayout=\"row\"\n    style=\"width: 100%; margin: 2%;\"\n    fxLayoutAlign=\"center\">\n      <div fxFlex=\"100\" fxLayout=\"column\" fxLayoutAlign=\" center\">\n        <div fxFlex=\"100\" fxLayout=\"row\" fxLayoutAlign=\"center\" style=\"padding: 0px; margin: 0 0 0 -15px;\">\n          <a mat-button style=\"padding: 0px 10px 0px 9px; margin: -4px -5px -5px 0px;\" (click)=\"onCreateNewFP()\" class=\"add\">\n            <img src=\"assets/quote/images/SVG-Icons-06.svg\">\n          </a>\n            <select style=\"width: 100%;\" (change)=\"getFpu($event)\">\n              <option [value]=''>Choose existing floor plan</option>\n              <option *ngFor=\"let fp of fplist\" [value]=\"fp.sgid\">\n                {{ fp.floorname }}\n              </option>\n            </select>\n        </div>\n      </div>\n    </div>\n    <div *ngIf=\"fpuList.length <= 0\"   fxLayout=\"row\"\n      style=\"width: 98%; background: #F4F4F4;padding: 44px; margin: 2%;\"\n      fxLayoutAlign=\"space-between start\"\n      class=\"nofptxt\"\n      >Select a floor plan to view the units\n    </div>  \n    <div *ngIf=\"fpuList.length > 0\"   fxLayout=\"column\"\n      style=\"width: 98%; background: #F4F4F4; margin: 2%;\"\n      fxLayoutAlign=\"space-between start\"\n      class=\"nofptxt d-flex  justify-content-center p-2 my-3\"\n      >\n      <div fxLayout=\"row\">\n        <label class=\"form-check-label\" style=\"padding: 10px;\"> \n          <input type=\"radio\" class=\"form-check-input\" (click)='isAllUnit(1)' [checked]='true' name=\"optradio\">All\n          Units\n        </label>\n        <label style=\"padding: 10px;\" class=\"form-check-label\">\n          <input type=\"radio\" class=\"form-check-input\" (click)='isAllUnit(0)' name=\"optradio\">Selected Unit\n        </label>\n      </div>\n      <div fxLayout=\"row wrap\"\n        style=\"width: 98%; background: #F4F4F4; margin: 2%;\"\n        fxLayoutAlign=\"space-between start\"\n        class=\"nofptxt d-flex  justify-content-center p-2 my-3\"\n        >\n      <div *ngFor='let unit of fpuList' [ngClass]=\"{'allow-click': isSelectedAll ? true : false}\"\n      (click)='selectUnitsForPlans(unit)' class=\"unit-box  add-unit-mb\">\n        <div>{{unit.unit}}</div> \n        <div>unit</div>\n      <span aria-hidden=\"true\" [ngClass]=\"{'fa-check':(unit.isActive) ? true : false}\"\n        class=\"px-2 pb-1 cross-close fa \" style=\"padding: 4px; color: green;\"></span></div>\n      </div>\n    </div>\n  </div>\n</div>\n<div mat-dialog-actions fxLayoutAlign=\"center\">\n  <button (click)=\"onSubmit()\" class=\"btn-add\" mat-button color=\"accent\">ADD</button>\n  <button mat-button (click)=\"onCancel();\" class=\"btn-cancel\"color=\"primary\">CANCEL</button>\n</div>\n  ","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { ToasterService, UserService } from 'projects/core/src/public-api';\nimport { QuoteService } from '../../../quote.service';\nimport { AddFPUComponent } from '../add-fpu/add-fpu.component';\nimport { SelectFpComponent } from '../select-fp/select-fp.component';\nimport { SelectFpuComponent } from '../select-fpu/select-fpu.component';\n\n@Component({\n  selector: 'lib-addproduct',\n  templateUrl: './addproduct.component.html',\n  styleUrls: ['./addproduct.component.scss']\n})\nexport class AddproductComponent implements OnInit {\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public dialogData: any,\n    public _dialogRef: MatDialogRef<AddproductComponent>,\n    private _dialog: MatDialog,\n    private _user: UserService,\n    private _quoteService: QuoteService,\n    private _toaster: ToasterService\n  ) { }\n\n  ngOnInit(): void {\n  }\n  add(type: any){\n    if(type == '') {\n      if(this.dialogData.product_id) {\n        let obj = {\n          quote_id: this.dialogData.quoteId,\n          product_id: this.dialogData.product_id,\n          sku:this.dialogData.sku,\n          quantity: this.dialogData.quantity,\n          button_type: this.dialogData.button_type,\n          month: this.dialogData.months,\n          warehouse_id: this.dialogData.warehouse_id,\n          user_id: this.dialogData.user_id,\n          floorplan_id:null,\n          units:null,\n          moodboard_id:null,\n        };\n        this._quoteService.addProductQuote(obj).subscribe((resp: any) => {\n          if (resp.statusCode == 200) {\n            this._toaster.success(resp.message);\n            this._dialogRef.close(1);\n          } else {\n            this._toaster.success(resp.message);\n            this._dialogRef.close(0);\n          }\n        });  \n\n       } else {\n        let obj =  {\n          quote_id :this.dialogData.quoteId,\n          moodboard_id: this.dialogData.mbid,\n          user_id: this._user.getUser().getId()\n          };\n          this._quoteService.addMBQuote(obj).subscribe((resp: any) => {\n            if (resp.statusCode == 200) {\n              this._toaster.success(resp.message);\n              this._dialogRef.close(1);\n            } else {\n              this._toaster.success(resp.message);\n              this._dialogRef.close(0);\n            }\n          });  \n      }\n     \n    }\n    if(type == 'fp') {\n      this._dialog\n      .open(SelectFpComponent, {\n        height: '70%',\n        width: '70%',\n        data: {\n          isDialog: true,\n          qid: this.dialogData.quoteId,\n          mid: this.dialogData.mbid,\n          product_id: this.dialogData.product_id,\n          sku:this.dialogData.sku,\n          quantity: this.dialogData.quantity,\n          button_type: this.dialogData.button_type,\n          month: this.dialogData.months,\n          warehouse_id: this.dialogData.warehouse_id,\n          user_id: this.dialogData.user_id,\n        }\n\n      })\n      .afterClosed()\n      .subscribe((data) => {\n        console.log(data);\n      });\n    }\n    if(type == 'fpu') {\n      this._dialog\n      .open(SelectFpuComponent, {\n        height: '80%',\n        width: '50%',\n        data: {\n          isDialog: true,\n          qid: this.dialogData.quoteId,\n          mid: this.dialogData.mbid,\n          product_id: this.dialogData.product_id,\n          sku:this.dialogData.sku,\n          quantity: this.dialogData.quantity,\n          button_type: this.dialogData.button_type,\n          month: this.dialogData.months,\n          warehouse_id: this.dialogData.warehouse_id,\n          user_id: this.dialogData.user_id,\n\n        },\n      })\n      .afterClosed()\n      .subscribe((data) => {\n        console.log(data);\n      });\n    }\n    this._dialogRef.close();\n  }\n\n}\n","<div\n  fxLayout=\"row\"\n  style=\"width: 100%; cursor: pointer\"\n  fxLayoutAlign=\"space-between start\"\n>\n  <span></span>\n  <div class=\"h1\" style=\"margin-bottom: 1rem\">\n    Where would you like to add this Product?\n  </div>\n  <i class=\"fa fa-times\" mat-dialog-close aria-hidden=\"true\"></i>\n</div>\n<div style=\"margin-bottom: 1rem\" mat-dialog-content>\n  <div\n    fxLayout=\"row\"\n    style=\"width: 98%; background: #f4f4f4; padding: 22px; margin: 2%\"\n    fxLayoutAlign=\"space-between start\"\n  >\n    <div\n      fxLayout=\"column\"\n      style=\"width: 100%\"\n      fxLayoutAlign=\"space-between start\"\n    >\n      <span class=\"titeltxt\"> Add to Default Unit </span>\n    </div>\n    <button mat-flat-button color=\"accent\" (click)=\"add('')\" class=\"btn-txt\">\n      + ADD\n    </button>\n  </div>\n  <div\n    fxLayout=\"row\"\n    style=\"width: 98%; background: #f4f4f4; padding: 22px; margin: 2%\"\n    fxLayoutAlign=\"space-between start\"\n  >\n    <div\n      fxLayout=\"column\"\n      style=\"width: 100%\"\n      fxLayoutAlign=\"space-between start\"\n    >\n      <span class=\"titeltxt\"> Add to a Floor Plan </span>\n    </div>\n    <button mat-flat-button class=\"btn-txt\" (click)=\"add('fp')\" color=\"accent\">\n      + ADD\n    </button>\n  </div>\n  <div\n    fxLayout=\"row\"\n    style=\"width: 98%; background: #f4f4f4; padding: 22px; margin: 2%\"\n    fxLayoutAlign=\"space-between start\"\n  >\n    <div\n      fxLayout=\"column\"\n      style=\"width: 100%\"\n      fxLayoutAlign=\"space-between start\"\n    >\n      <span class=\"titeltxt\"> Add to Unit(s) </span>\n    </div>\n    <button mat-flat-button class=\"btn-txt\" (click)=\"add('fpu')\" color=\"accent\">\n      + ADD\n    </button>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { GridOptions, GridReadyEvent, ICellRendererParams } from 'ag-grid-community';\nimport { CounterComponent, DialogService, ImageRendererComponent, ToasterService } from 'projects/core/src/public-api';\nimport { ItemTypeComponent } from '../../common/components/item-type/item-type.component';\nimport { TotalCellRendererComponent } from '../../common/components/total-cell-renderer/total-cell-renderer.component';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { FloorPlanDetailsService } from '../../common/components/floor-plan-details/floor-plan-details.service';\nimport { MoodboardComponent } from '../../common/components/moodboard/moodboard.component';\nimport { QuoteHeaderService } from '../../common/components/quote-header/quote-header.service';\nimport { Location } from '@angular/common';\nimport { AddFPComponent } from '../../common/components/add-fp/add-fp.component';\n\n@Component({\n  selector: 'app-floor-plan-unit',\n  templateUrl: './floor-plan-unit.component.html',\n  styleUrls: ['./floor-plan-unit.component.scss'],\n})\nexport class FloorPlanUnitComponent implements OnInit {\n  quoteId = '';\n  unit_id = '';\n  unit = '';\n  selectedFpid: any = '';\n  fplist: any = [];\n  agGrid: GridReadyEvent = {} as GridReadyEvent;\n  rowData: Observable<any[]> = new Observable();\n  fpDetails: any = {};\n  fpId = '';\n  moodboardList: Array<any> = [];\n  unitName = '';\n  hideFloorPlanAssign = false;\n\n  pinnedBottomRowData = [\n    {\n      subTotal: 'abc',\n      sgid: 'SUB TOTAL',\n      is_total: '0',\n      isExtraRow: true,\n    },\n    {\n      subTotal: 'abc',\n      sgid: 'DELIVERY FEE',\n      is_total: '0',\n      isExtraRow: true,\n    },\n    {\n      subTotal: 'abc',\n      sgid: 'TAXES',\n      is_total: '0',\n      isExtraRow: true,\n    },\n    {\n      subTotal: 'abc',\n      sgid: 'TOTAL',\n      is_total: '0',\n      isExtraRow: true,\n    },\n  ];\n\n  columnDefs = [\n    {\n      field: 'sgid',\n      width: 120,\n      headerName: 'S. NO',\n      headerTooltip: 'S.NO',\n      colSpan: (params: any) => (params.data.subTotal === 'abc' ? 10 : 1),\n      cellStyle: (params: any) => {\n        if (params.data.subTotal === 'abc') {\n          return { 'text-align': 'end' };\n        }\n        return '';\n      },\n    },\n    { field: 'warehouse_name', headerName: 'CITY' },\n    { field: 'sku', headerName: 'SKU' },\n    {\n      headerName: 'IMAGE',\n      cellRenderer: 'ImageRendererComponent',\n      field: 'product_images.small',\n      cellStyle: {\n        padding: '0.3rem',\n      },\n      // valueGetter: async (params:ICellRendererParams)=>{\n      // let x = await this._core.getBase64Image(params?.data?.product_images?.small).toPromise();\n      // return 'data:image/jpeg;base64' + x?.imageurl;\n      // }\n    },\n    {\n      headerName: 'PRODUCT NAME',\n      field: 'name',\n      width: '250px',\n    },\n    {\n      headerName: 'TYPE',\n      field: 'button_type',\n      cellRenderer: 'ItemTypeCellRenderer',\n      valueGetter: (params: ICellRendererParams) => {\n        return params.data.button_type === 0 ? 'Rent' : 'Buy';\n      },\n    },\n    {\n      headerName: 'QUANTITY',\n      field: 'is_qty',\n      cellRenderer: 'CounterCellRenderer',\n    },\n    {\n      headerName: 'BUY PRICE ($)',\n      field: 'buy_price',\n      valueGetter: (params: ICellRendererParams) => {\n        return params.data.button_type === 1 ? params.data.buy_price : 'NA';\n      },\n    },\n    {\n      headerName: 'RENTAL PRICE/MONTH',\n      field: 'price',\n      cellRenderer: (params: ICellRendererParams) => {\n        return params.data.button_type === 0 ? params.value : 'NA';\n      },\n    },\n    // { headerName: 'DISCOUNT ($)', field: 'discount' },\n\n    {\n      headerName: 'MONTHS',\n      field: 'months',\n    },\n    {\n      headerName: 'TOTAL ($)',\n      field: 'is_total',\n      cellRenderer: 'TotalCellRendererComponent',\n    },\n  ];\n\n  frameworkComponents = {\n    ImageRendererComponent: ImageRendererComponent,\n    TotalCellRendererComponent: TotalCellRendererComponent,\n    ItemTypeCellRenderer: ItemTypeComponent,\n    CounterCellRenderer: CounterComponent,\n  };\n\n  defaultColDef = {\n    wrapText: true,\n    cellClass: 'grid-cell',\n    cellStyle: {\n      'line-height': 'normal',\n      'align-items': 'center',\n      'justify-content': 'center',\n      display: 'flex',\n      padding: '0 0.5rem',\n    },\n  };\n\n  gridOptions: GridOptions = {\n    onGridReady: (api: GridReadyEvent) => {\n      this.agGrid = api;\n      this.onGridReady(api);\n    },\n    rowHeight: 100,\n    headerHeight: 100,\n    getRowHeight: (params: any) => {\n      return params?.data?.isExtraRow ? 50 : 100;\n    },\n  };\n  \n  constructor(private _quoteHeaderService: QuoteHeaderService,\n              private _route: ActivatedRoute,\n              private _router: Router,\n              private _dialog: MatDialog,\n              private _dialog_s: DialogService,\n              private _location: Location,\n              private _toaster: ToasterService,\n              private _fpSevice: FloorPlanDetailsService) { }\n\n  ngOnInit(): void {\n    this._route.params.subscribe((params: Params) => {\n      this.quoteId = params.id;\n      this.fpId = params.fpId === 'None' ? null : params.fpId;\n      this.unit_id = params.unit_id;\n      this.getFloorPlanDetails();\n      this.getMoodBoards();\n      this.getFPSummary();\n      this.getFpList();\n      // this.getFloorPlanUnits();\n    });\n  }\n\n  getFpList() {\n    this._fpSevice.getFPList(this.quoteId).subscribe(\n      (data) => {\n        this.fplist = data.result;\n      },\n      (error) => {\n        this._toaster.error(error);\n      }\n    );\n  }\n\n  getSelectedFpu(ev: any) {\n    this.selectedFpid = ev.target.value;\n  }\n\n  removeMoodboardFromFP(moodboard: any) {\n    this._dialog_s\n      .openConformationDialog({\n        title: 'REMOVE MOODBOARD FROM FLOOR PLAN',\n        suTitle: 'Are you sure you want to delete?',\n        width: '50%',\n      })\n      .afterClosed()\n      .subscribe((data: any) => {\n        if (data) {\n          this._fpSevice\n            .removeMoodboardFromFPUnits(\n              this.quoteId,\n              this.fpId,\n              moodboard.moodboard_id,\n              this.unit_id\n            )\n            .subscribe((resp) => {\n              if (resp.statusCode === 200) {\n                this._toaster.success(resp.result);\n                this.refresh();\n              } else {\n                this._toaster.success(resp.result);\n              }\n            });\n        }\n      });\n  }\n\n  onCreateNewFP(): any {\n    this._dialog\n    .open(AddFPComponent, {\n      height: '70%',\n      width: '70%',\n      data: {\n        isDialog: true,\n        quoteId: this.quoteId,\n      },\n    })\n    .afterClosed()\n    .subscribe((data) => {\n      console.log(data);\n      if (data && data.event) {\n        this.getFpList();\n      }\n    });\n  }\n\n  getFPSummary() {\n    this._fpSevice\n      .getFPSummary(this.quoteId, this.fpId, this.unit_id)\n      .subscribe((resp) => {\n        this.unitName = resp?.unit?.name;\n        this.unit = resp?.unit?.unit;\n        this.selectedFpid = resp?.unit?.floorplan_id;\n        this.selectedFpid = this.selectedFpid ? this.selectedFpid : 'None';\n        if (this.selectedFpid !== 'None') {\n          this.hideFloorPlanAssign = true;\n        }\n      });\n  }\n\n  onGridReady(evt: GridReadyEvent) {\n    this.agGrid = evt;\n    evt.api.sizeColumnsToFit();\n    this.rowData = this.getUnitQuoteSummary();\n  }\n\n  getUnitQuoteSummary<T>(): Observable<T> {\n    return this._quoteHeaderService\n      .getUnitQuoteSummary<T>(this.unit_id, this.fpId, this.quoteId)\n      .pipe(\n        map((x: any) => {\n          if (x.floorplan) {\n            this.updateBottomData(x.floorplan);\n          } else {\n            this.updateBottomData({\n              delivery_fee: 0,\n              tax_percentage: 0,\n              tax_amount: 0,\n            });\n          }\n          this.agGrid.api.redrawRows();\n          return x.result;\n        })\n      );\n  }\n\n  updateBottomData(data: any) {\n    this.pinnedBottomRowData[1].is_total = data?.delivery_fee;\n    this.pinnedBottomRowData[2].sgid = 'TAXES (' + data?.tax_percentage + '%)';\n    this.pinnedBottomRowData[2].is_total = data?.tax_amount;\n    this.pinnedBottomRowData[3].is_total = data?.tax_amount;\n  }\n\n  back() {\n    this._location.back();\n  }\n\n  getFloorPlanDetails() {\n    this._fpSevice\n      .getFloorPlanDetails(this.quoteId, this.fpId)\n      .subscribe((resp) => {\n        if (resp.statusCode === 200) {\n          this.fpDetails = resp?.result[0];\n          // this.selectedFpid = resp?.result[0].sgid;\n        } else {\n          this.fpDetails = {};\n        }\n      });\n  }\n\n  addFloorPlan() {\n    if (this.selectedFpid && this.selectedFpid !== 'None') {\n      this._fpSevice.addFloorPlanUnit(this.unit, this.selectedFpid, this.quoteId, this.unit_id).subscribe(\n        (resp: any) => {\n          this._toaster.success(resp.message);\n          this._router.navigate([\n            'quote',\n            this.quoteId,\n            'floor-plan-unit',\n            this.selectedFpid,\n            'unit',\n            this.unit_id,\n          ]);\n        });\n    }\n  }\n\n  getMoodBoards() {\n    this._fpSevice\n      .getUnitMoodBoards(this.quoteId, this.fpId, this.unit_id)\n      .subscribe((data) => {\n        if (data.statusCode === 200) {\n          this.moodboardList = data.moodboard_list;\n        } else {\n          this.moodboardList = [];\n        }\n      });\n  }\n\n  openAddMoodboardDialog() {\n    this._dialog\n      .open(MoodboardComponent, {\n        width: '50%',\n        data: { quoteId: this.quoteId, fpId: this.fpId, unit_id: this.unit_id },\n      })\n      .afterClosed()\n      .subscribe((data) => {\n        if (data) {\n          this.refresh();\n        }\n      });\n  }\n\n  changeUnitName() {\n    this._fpSevice\n      .changeUnitName(this.quoteId, this.unit_id, this.unitName)\n      .subscribe((data) => {\n        if (data.statusCode === 200) {\n          this._toaster.success(data.result);\n          this.refresh();\n        } else {\n          this._toaster.success(data.result);\n        }\n      });\n  }\n\n  refresh() {\n    this.getMoodBoards();\n    this.getFPSummary();\n    this.onGridReady(this.agGrid);\n    // this.getFloorPlanUnits();\n    // this.getMoodboardWithUnits();\n  }\n}\n","<div class=\"floor-plan\" fxLayout=\"column\" fxLayoutGap=\"1.5rem\">\n  <div class=\"floor-plan-col\" fxLayout=\"column\" fxLayoutGap=\"1rem\">\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"1rem\">\n      <mat-icon class=\"back pointer\"\n        ><span (click)=\"back()\" class=\"material-icons\">\n          arrow_back\n        </span></mat-icon\n      >\n      <span>Back to Quote/ {{ fpDetails?.floorname }}</span>\n    </div>\n    <mat-divider></mat-divider>\n\n    <div\n      class=\"floor-plan__container--input\"\n      fxLayout=\"row\"\n      fxLayoutAlign=\"start center\"\n      fxLayoutGap=\"2rem\"\n    >\n      <mat-label class=\"h3 form-label-width\">Unit Name:</mat-label>\n      <mat-form-field appearance=\"outline\" class=\"mt-1\" style=\"width: 250px\">\n        <input [(ngModel)]=\"unitName\" matInput />\n      </mat-form-field>\n      <button\n        class=\"round\"\n        mat-flat-button\n        color=\"primary\"\n        (click)=\"changeUnitName()\"\n      >\n        Change Unit Name\n      </button>\n    </div>\n\n    <div\n      class=\"floor-plan__container--input\"\n      fxLayout=\"row\"\n      fxLayoutAlign=\"start center\"\n      fxLayoutGap=\"2rem\"\n      *ngIf=\"!hideFloorPlanAssign\"\n    >\n      <mat-label class=\"h3 form-label-width\"\n        >Add/Select a Floor Plan:</mat-label\n      >\n      <div class=\"add-to-md-button\">\n        <img src=\"assets/shop/addButton.svg\" class=\"pointer\" (click)=\"onCreateNewFP()\"/>\n      </div>\n      <select class=\"grey\" style=\"width: 190px\" [(ngModel)]=\"selectedFpid\" (change)=\"getSelectedFpu($event)\">\n        <option value=\"None\">None Selected</option>\n        <option *ngFor=\"let fp of fplist\" [value]=\"fp.sgid\">\n          {{ fp.floorname }}\n        </option>\n      </select>\n      <button\n        class=\"round\"\n        mat-flat-button\n        color=\"primary\"\n        (click)=\"addFloorPlan()\"\n        style=\"width: 170px\"\n      >\n        Add\n      </button>\n    </div>\n  </div>\n\n  <div class=\"floor-plan-col odd\" fxLayout=\"column\" fxLayoutGap=\"1rem\">\n    <div class=\"h2\">ADD/MANAGE MOODBOARDS</div>\n    <div\n      class=\"floor-plan__container\"\n      fxLayout=\"row wrap\"\n      fxLayoutAlign=\"start\"\n      fxLayoutGap=\"1rem\"\n    >\n      <div\n        fxFlex=\"10\"\n        class=\"floor-plan__container--item pointer\"\n        fxLayoutAlign=\"center center\"\n        fxLayout=\"column\"\n        (click)=\"openAddMoodboardDialog()\"\n      >\n        <mat-icon class=\"icon\" inline=\"true\">add_circle_outline</mat-icon>\n      </div>\n      <div\n        fxFlex=\"10\"\n        class=\"floor-plan__container--item\"\n        [ngClass]=\"{}\"\n        *ngFor=\"let moodboard of moodboardList\"\n        fxLayout=\"column\"\n      >\n      <i\n          (click)=\"removeMoodboardFromFP(moodboard)\"\n          class=\"fa fa-times icon\"\n          aria-hidden=\"true\"\n        ></i>\n        <img\n          height=\"110px\"\n          width=\"auto\"\n          [src]=\"moodboard?.unitmoodboards?.is_moodboard_images?.small\"\n          alt=\"Moodboard\"\n        />\n        <p>{{ moodboard?.unitmoodboards?.boardname }}</p>\n      </div>\n    </div>\n  </div>\n\n  <div fxLayout=\"column\" fxLayoutAlign=\" stretch\">\n    <div\n      class=\"floor-plan-summary\"\n      fxLayoutGap=\"1rem\"\n      fxLayout=\"column\"\n      fxLayoutAlign=\"start stretch\"\n    >\n      <div class=\"h2\">UNIT SUMMARY</div>\n      <ag-grid-angular\n        [gridOptions]=\"gridOptions\"\n        style=\"height: 600px; width: 100%\"\n        class=\"ag-theme-alpine quotes-table\"\n        [rowData]=\"rowData | async\"\n        [frameworkComponents]=\"frameworkComponents\"\n        [pinnedBottomRowData]=\"pinnedBottomRowData\"\n        [defaultColDef]=\"defaultColDef\"\n        [columnDefs]=\"columnDefs\"\n      >\n      </ag-grid-angular>\n    </div>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { QuoteHeaderComponent } from './components/quote-header/quote-header.component';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { CoreModule } from 'projects/core/src/public-api';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { AgGridModule } from 'ag-grid-angular';\nimport { TotalCellRendererComponent } from './components/total-cell-renderer/total-cell-renderer.component';\nimport { ItemTypeComponent } from './components/item-type/item-type.component';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { QuoteCreateFormComponent } from './components/quote-create-form/quote-create-form.component';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatSelectModule } from '@angular/material/select';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatCardModule} from '@angular/material/card';\n\nimport { MatDividerModule } from '@angular/material/divider';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport { AddFPComponent } from './components/add-fp/add-fp.component';\nimport { AddFPUComponent } from './components/add-fpu/add-fpu.component';\nimport { AddproductComponent } from './components/addproduct/addproduct.component';\nimport { SelectFpComponent } from './components/select-fp/select-fp.component';\nimport { SelectFpuComponent } from './components/select-fpu/select-fpu.component';\nimport { AddMoodboardQuoteComponent } from './components/add-moodboard-quote/add-moodboard-quote.component';\nimport { FloorPlanDetailsComponent } from './components/floor-plan-details/floor-plan-details.component';\nimport { MoodboardComponent } from './components/moodboard/moodboard.component';\nimport { DeleteItemComponent } from './components/delete-item/delete-item.component';\n\n@NgModule({\n  declarations: [\n    QuoteHeaderComponent,\n    TotalCellRendererComponent,\n    ItemTypeComponent,\n    QuoteCreateFormComponent,\n    AddFPComponent,\n    AddFPUComponent,\n    AddproductComponent,\n    SelectFpComponent,\n    SelectFpuComponent,\n    AddMoodboardQuoteComponent,\n    FloorPlanDetailsComponent,\n    MoodboardComponent,\n    DeleteItemComponent,\n  ],\n  imports: [\n    CommonModule,\n    MatIconModule,\n    MatTabsModule,\n    MatCardModule,\n    MatButtonModule,\n    CoreModule,\n    FlexLayoutModule,\n    AgGridModule,\n    MatInputModule,\n    MatFormFieldModule,\n    MatDialogModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatSelectModule,\n    MatTabsModule,\n    MatDividerModule,\n    MatCheckboxModule\n  ],\n  exports: [\n    QuoteHeaderComponent,\n    QuoteCreateFormComponent,\n    ItemTypeComponent,\n    TotalCellRendererComponent,\n    DeleteItemComponent,\n    MoodboardComponent\n  ],\n})\nexport class QuoteCommonModule {}\n","import { Injectable } from '@angular/core';\nimport { EnvironmentService } from 'projects/core/src/lib/services/environment.service';\nimport { HttpService } from 'projects/core/src/public-api';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class QuoteDetailService {\n  constructor(private _http: HttpService, private _env: EnvironmentService) {}\n\n  updateQuote(json: Array<any>): Observable<any> {\n    return this._http.sendPOSTRequest(\n      this._env.getEndPoint() + 'save/quote/items',\n      JSON.stringify(json)\n    );\n  }\n\n  createOrder(params: any) {\n    return this._http.sendPOSTRequest(\n      this._env.getEndPoint() + 'create/order',\n      JSON.stringify(params)\n    );\n  }\n}\n","import {\n  Component,\n  EventEmitter,\n  Inject,\n  Input,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ToasterService } from 'projects/core/src/lib/services/toaster.service';\nimport { CoreService, UserService } from 'projects/core/src/public-api';\nimport { Location } from '@angular/common';\nimport { QuoteCreateFormService } from './quote-create-form.service';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { QuoteService } from '../../../quote.service';\n\nexport type QuoteFormType = 'CREATE' | 'EDIT' | 'COPY';\n@Component({\n  selector: 'lib-quote-create-form',\n  templateUrl: './quote-create-form.component.html',\n  styleUrls: ['./quote-create-form.component.scss'],\n})\nexport class QuoteCreateFormComponent implements OnInit {\n  @Input() quoteNumber: string = '';\n  @Input() phone: string = '';\n  @Input() customerName = '';\n  @Input() address = '';\n  @Input() email = '';\n  @Input() stateId: number = NaN;\n  @Input() companyName = '';\n  @Input() companyId = ''; \n  @Input() city = '';\n  @Input() projectName = '';\n  @Input() projectId = '';\n  @Input() zipCode = '';\n  @Input() submitButtonText = 'CREATE';\n  @Output() onCancel = new EventEmitter();\n  @Output() onSubmit = new EventEmitter();\n  @Input() type: QuoteFormType = 'CREATE';\n  stateList: Array<any> = ['A', 'B'];\n  showPDropdown: any = false;\n  showDropdown: any = false;\n  quoteFromGroup: FormGroup = new FormGroup({});\n  dCompanyList: any = [];\n  companyList: any = [];\n  projectList: any = [];\n  selectedCompany: any = '';\n  selectedProject: any = '';\n  constructor(\n    private _coreService: CoreService,\n    private _router: Router,\n    private _toaster: ToasterService,\n    private _location: Location,\n    private _fromService: QuoteCreateFormService,\n    @Inject(MAT_DIALOG_DATA) public dialogData: any,\n    public _dialogRef: MatDialogRef<QuoteCreateFormComponent>,\n    public _user: UserService,\n    private _quoteService: QuoteService,\n\n    ) {\n    let stateObject = _router.getCurrentNavigation()?.extras.state;\n    this.quoteNumber = stateObject?.quoteNumber;\n    this.phone = stateObject?.phone;\n    this.customerName = stateObject?.customerName;\n    this.address = stateObject?.address;\n    this.email = stateObject?.email;\n    this.stateId = stateObject?.state;\n    this.companyName = stateObject?.companyName;\n    this.city = stateObject?.city;\n    this.projectName = stateObject?.projectName;\n    this.zipCode = stateObject?.zipCode;\n  }\n\n  ngOnInit(): void {\n    if (this.quoteNumber) {\n      this.quoteFromGroup.addControl(\n        'quote_id',\n        new FormControl(this.quoteNumber, Validators.required)\n      );\n    }\n\n    this.quoteFromGroup.addControl(\n      'contact_no',\n      new FormControl(this.phone, [\n        Validators.required,\n        Validators.pattern(\n          '^(1s?)?((([0-9]{3}))|[0-9]{3})[s-]?[\\0-9]{3}[s-]?[0-9]{4}$'\n        ),\n      ])\n    );\n    this.quoteFromGroup.addControl(\n      'name',\n      new FormControl(this.customerName, Validators.required)\n    );\n    this.quoteFromGroup.addControl(\n      'address',\n      new FormControl(this.address, Validators.required)\n    );\n    this.quoteFromGroup.addControl(\n      'email',\n      new FormControl(this.email, [\n        Validators.required,\n        Validators.pattern('^[a-z0-9._%+-]+@[a-z0-9.-]+.[a-z]{2,4}$'),\n      ])\n    );\n    this.quoteFromGroup.addControl(\n      'state_id',\n      new FormControl(this.stateId, [Validators.required])\n    );\n    this.quoteFromGroup.addControl(\n      'company_id',\n      new FormControl(this.companyId)\n    );\n    this.quoteFromGroup.addControl(\n      'companyName',\n      new FormControl(\n        this.companyName ?? this._user.getUser().getCompanyName())\n    );\n    this.quoteFromGroup.addControl(\n      'city',\n      new FormControl(this.city, Validators.required)\n    );\n    this.quoteFromGroup.addControl(\n      'project_id',\n      new FormControl(this.projectId)\n    );\n    this.quoteFromGroup.addControl(\n      'project_name',\n      new FormControl(this.projectName)\n    );\n    this.quoteFromGroup.addControl(\n      'zipcode',\n      new FormControl(this.zipCode, [\n        Validators.required,\n        Validators.pattern('^[0-9]{5}(?:-[0-9]{5})?$'),\n      ])\n    );\n    this.getStateList();\n    this.getCompanyList();\n  }\n\n  getStateList() {\n    this._coreService.getStateList().subscribe((data) => {\n      this.stateList = data;\n      if(undefined == this.stateId ) this.quoteFromGroup.controls.state_id.patchValue(this.stateList[0].sgid);\n    });\n  }\n\n\n\n  getCompanyList() {\n    this._quoteService.getCompanyList().subscribe((data: any) => {\n      if(typeof data.result == 'string'){\n        this.companyList = [];\n        this.selectedCompany = \"\";\n        return;\n      }\n     // this.companyList = data.result.map((x: any) => x.company);\n      this.companyList  = data.result;\n      let companyId = data.result.find((x: any)=> x.company == this.selectedCompany)?.sgid;\n      if(companyId){\n        this.getProjectList(companyId, null);\n      }\n    });\n  }\n  selectProjectList(id: any, event: any ){\n    let projectId = event.target.value;\n    this.projectName = this.projectList.find((x: any)=> x.sgid == projectId).project;\n    this.quoteFromGroup.controls.project_name.patchValue(this.projectName);\n  }\n  getProjectList(companyId: any, event: any) {\n    if(event !== null) companyId = event.target.value;\n    this._quoteService.getProjectList(companyId).subscribe((data: any)=> {\n      if(typeof data.result == 'string'){\n        this.projectList = [];\n        this.selectedProject = \"\";\n      } else {\n        this.projectList  = data.result; //.map((x: any)=> x.project);\n        this.selectedProject = this.projectList[0];\n        this.quoteFromGroup.controls.project_name.patchValue(this.projectList[0].project);\n      }\n    })  \n  }\n  cancel() {\n    this.onCancel.emit();\n    if (this.dialogData.isDialog) {\n      this._dialogRef.close();\n    } else {\n      this._location.back();\n    }\n  }\n\n  submit() {\n    this._coreService\n      .validateZipCode(\n        this.quoteFromGroup.get('city')?.value,\n        this.quoteFromGroup.get('state_id')?.value,\n        this.quoteFromGroup.get('zipcode')?.value\n      )\n      .subscribe(\n        (data) => {\n          if (data?.status) {\n        console.log(this.quoteFromGroup);\n            this._fromService\n              .createQuote(this.quoteFromGroup, this.type)\n              .subscribe(\n                (data) => {\n                  this.onSubmit.emit(data?.quote);\n                  if (this.dialogData.isDialog) {\n                    this._toaster.success('Quote Created');\n                    this._dialogRef.close();\n                  }\n                },\n                (error) => {\n                  this._toaster.error(error);\n                }\n              );\n          } else {\n            this._toaster.warning('Invalid Zip code');\n          }\n        },\n        (error) => {\n          this._toaster.warning('Invalid Zip code');\n        }\n      );\n  }\n}\n","<div\n  fxFlex\n  class=\"quote-create__form\"\n  fxLayout=\"column\"\n  fxLayoutAlign=\"center center\"\n>\n<div  \n  fxLayout=\"row\"\n  fxFlex=\"100\"\n  style=\"width: 100%;\"\n  >\n<div          \n  fxFlex=\"95\"\n  fxLayout=\"row\"\n  fxLayoutAlign=\"center center\">\n<span class=\"quote-create__form--title\"> CREATE A NEW QUOTE</span>\n</div>\n<div          \n  fxFlex=\"5\"\n  fxLayout=\"row\"\n  fxLayoutAlign=\"row-reverse\">\n<span class=\"quote-create__form--title\" (click)=\"cancel();\" *ngIf=\"dialogData.isDialog == true\"> \n  <img src=\"assets/quote/images/close-22.svg\" height=\"22px\" width=\"22px\">\n</span>\n</div>\n</div>\n  <form\n    [formGroup]=\"quoteFromGroup\"\n    action=\"\"\n    class=\"quote-create__form--elements\"\n    fxLayout=\"row wrap\"\n    fxLayoutAlign=\"space-between stretch\"\n  >\n    <div\n      *ngIf=\"quoteNumber\"\n      fxFlex=\"45\"\n      fxLayout=\"column\"\n      fxLayoutAlign=\"stretch\"\n    >\n      <span class=\"label\">Quote Number <span class=\"asterisk\">*</span></span>\n      <input\n        [readonly]=\"quoteNumber\"\n        [ngClass]=\"{\n          'error-border': quoteFromGroup.get('quote_id')?.invalid,\n          'read-only': quoteNumber\n        }\"\n        type=\"text\"\n        formControlName=\"quote_id\"\n        placeholder=\"Enter Quote Number\"\n      />\n    </div>\n    <div fxFlex=\"45\" fxLayout=\"column\" fxLayoutAlign=\" stretch\">\n      <span class=\"label\">Customer Name<span class=\"asterisk\">*</span></span>\n      <input\n        [ngClass]=\"{\n          'error-border': quoteFromGroup.get('name')?.invalid\n        }\"\n        type=\"text\"\n        formControlName=\"name\"\n        placeholder=\"Enter Customer Name\"\n      />\n    </div>\n\n     <div fxFlex=\"45\" fxLayout=\"column\" fxLayoutAlign=\" stretch\">\n      <span class=\"label\">Company Name<span class=\"asterisk\">*</span>\n    </span>\n    <div fxLayout=\"row\" fxLayoutAlign=\"stretch\" style=\"padding: 0px; margin: 0 0 0 -15px;\">\n    <a mat-button *ngIf=\"_user.getUser().isInternalUser()\" style=\"padding: 0px 10px 0px 9px; margin: -4px -5px -5px 0px;\" (click)=\"showDropdown=!showDropdown; showPDropdown=!showPDropdown\" class=\"add\">\n      <img src=\"assets/quote/images/SVG-Icons-06.svg\">\n    </a>\n    <a mat-button *ngIf=\"!_user.getUser().isInternalUser()\" style=\"padding: 0px 10px 0px 9px; margin: -4px -5px -5px 0px;\" class=\"add\">\n      <img src=\"assets/quote/images/SVG-Icons-06.svg\">\n    </a>\n    <input style=\"width: 100%;\" *ngIf=\"showDropdown\"\n        [readonly]=\"!_user.getUser().isInternalUser()\"\n        [ngClass]=\"{\n          'error-border': quoteFromGroup.get('companyName')?.invalid,\n          'read-only': !_user.getUser().isInternalUser()\n        }\"\n        type=\"text\"\n        formControlName=\"companyName\"\n        placeholder=\"Add Company Name\"\n      />\n      <select style=\"width: 100%;\" *ngIf=\"_user.getUser().isInternalUser() && !showDropdown\"\n      [ngClass]=\"{\n        'error-border': quoteFromGroup.get('company_id')?.invalid\n      }\"\n      formControlName=\"company_id\"\n      (change)=\"getProjectList('', $event)\"\n    >\n      <option  *ngFor=\"let cmp of companyList\" [value]=\"cmp.sgid\" >\n        {{ cmp.company }}\n      </option>\n    </select>\n  </div>\n    </div>\n    <div fxFlex=\"45\" fxLayout=\"column\" fxLayoutAlign=\" stretch\">\n      <span class=\"label\">Project Name<span class=\"asterisk\">*</span> </span>\n      <div fxFlex=\"100\" fxLayout=\"row\" fxLayoutAlign=\"stretch\" style=\"padding: 0px; margin: 0 0 0 -15px;\">\n        <a mat-button *ngIf=\"_user.getUser().isInternalUser()\" style=\"padding: 0px 10px 0px 9px; margin: -4px -5px -5px 0px;\" (click)=\"showPDropdown=!showPDropdown\" class=\"add\">\n          <img src=\"assets/quote/images/SVG-Icons-06.svg\">\n        </a>\n        <a *ngIf=\"!_user.getUser().isInternalUser()\" style=\"padding: 0px 10px 0px 9px; margin: -4px -5px -5px 0px;\" class=\"add\">\n          <img src=\"assets/quote/images/SVG-Icons-06.svg\">        </a>\n    \n      <input style=\"width: 100%;\" *ngIf=\"showPDropdown\"\n        [ngClass]=\"{\n          'error-border': quoteFromGroup.get('project_name')?.invalid\n        }\"\n        type=\"text\"\n        formControlName=\"project_name\"\n        placeholder=\"Add Project Name\"\n      />\n      <select style=\"width: 100%;\" *ngIf=\"_user.getUser().isInternalUser() && !showPDropdown \"\n      [ngClass]=\"{\n        'error-border': quoteFromGroup.get('project_id')?.invalid\n      }\"\n      formControlName=\"project_id\"\n      (change)=\"selectProjectList('', $event)\"\n    >\n      <option *ngFor=\"let prj of projectList\" [value]=\"prj.sgid\">\n        {{ prj.project }}\n      </option>\n    </select>\n</div>\n    </div>\n   \n    \n    <div fxFlex=\"45\" fxLayout=\"column\" fxLayoutAlign=\" stretch\">\n      <span class=\"label\">Email<span class=\"asterisk\">*</span></span>\n      <input\n        [ngClass]=\"{\n          'error-border': quoteFromGroup.get('email')?.invalid\n        }\"\n        type=\"text\"\n        formControlName=\"email\"\n        placeholder=\"Add on Email\"\n      />\n    </div>\n    <div fxFlex=\"45\" fxLayout=\"column\" fxLayoutAlign=\" stretch\">\n      <span class=\"label\">Phone<span class=\"asterisk\">*</span></span>\n      <input\n        [ngClass]=\"{\n          'error-border': quoteFromGroup.get('contact_no')?.invalid\n        }\"\n        type=\"text\"\n        placeholder=\"Add a Phone Number\"\n        formControlName=\"contact_no\"\n      />\n    </div>\n    <div fxFlex=\"45\" fxLayout=\"column\" fxLayoutAlign=\" stretch\">\n      <span class=\"label\">Address<span class=\"asterisk\">*</span></span>\n      <input\n        [ngClass]=\"{\n          'error-border': quoteFromGroup.get('address')?.invalid\n        }\"\n        type=\"text\"\n        formControlName=\"address\"\n        placeholder=\"Enter on Address\"\n      />\n    </div>\n    <div fxFlex=\"45\" fxLayout=\"column\" fxLayoutAlign=\" stretch\">\n      <span class=\"label\">State<span class=\"asterisk\">*</span></span>\n      <select\n        [ngClass]=\"{\n          'error-border': quoteFromGroup.get('state_id')?.invalid\n        }\"\n        formControlName=\"state_id\"\n      >\n        <option *ngFor=\"let state of stateList\" [value]=\"state.sgid\">\n          {{ state.name }}\n        </option>\n      </select>\n    </div>\n    \n    <div fxFlex=\"45\" fxLayout=\"column\" fxLayoutAlign=\" stretch\">\n      <span class=\"label\">City<span class=\"asterisk\">*</span></span>\n      <input\n        [readonly]=\"type === 'COPY'\"\n        [ngClass]=\"{\n          'error-border': quoteFromGroup.get('city')?.invalid,\n          'read-only': type === 'COPY'\n        }\"\n        type=\"text\"\n        formControlName=\"city\"\n        placeholder=\"Enter a City\"\n      />\n    </div>\n    \n    <div fxFlex=\"45\" fxLayout=\"column\" fxLayoutAlign=\" stretch\">\n      <span class=\"label\">Zip Code<span class=\"asterisk\">*</span></span>\n      <input\n        [readonly]=\"type === 'COPY'\"\n        [ngClass]=\"{\n          'error-border': quoteFromGroup.get('zipcode')?.invalid,\n          'read-only': type === 'COPY'\n        }\"\n        type=\"text\"\n        formControlName=\"zipcode\"\n        placeholder=\"Add a ZipCode\"\n      />\n    </div>\n  </form>\n  <div\n    class=\"quote-create__actions\"\n    fxLayout=\"row\"\n    fxLayoutAlign=\"center center\"\n    fxLayoutGap=\"2rem\"\n  >\n    <button\n      mat-raised-button\n      [disabled]=\"quoteFromGroup.invalid\"\n      class=\"btn btn-primary\"\n      (click)=\"submit()\"\n    >\n      {{ submitButtonText }}\n    </button>\n    <button\n    class=\"btn btn-cancel\"\n    mat-raised-button (click)=\"cancel()\">CANCEL</button>\n  </div>\n</div>\n","import {\n  Component,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n  TemplateRef,\n  ViewChild,\n} from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport {\n  GridOptions,\n  GridReadyEvent,\n  ICellRendererParams,\n} from 'ag-grid-community';\nimport { ToasterService } from 'projects/core/src/lib/services/toaster.service';\nimport {\n  CoreService,\n  CounterComponent,\n  ImageRendererComponent,\n  UserService,\n} from 'projects/core/src/public-api';\nimport { QuoteService } from './../../../quote.service';\nimport { Observable } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\nimport { AddFPComponent } from '../add-fp/add-fp.component';\nimport { AddFPUComponent } from '../add-fpu/add-fpu.component';\nimport { ItemTypeComponent } from '../item-type/item-type.component';\nimport { TotalCellRendererComponent } from '../total-cell-renderer/total-cell-renderer.component';\nimport { QuoteHeaderService } from './quote-header.service';\nimport { AddMoodboardQuoteComponent } from '../add-moodboard-quote/add-moodboard-quote.component';\nimport { FloorPlanDetailsComponent } from '../floor-plan-details/floor-plan-details.component';\nimport { SelectFpComponent } from '../select-fp/select-fp.component';\nimport { SelectFpuComponent } from '../select-fpu/select-fpu.component';\n\n@Component({\n  selector: 'lib-quote-header',\n  templateUrl: './quote-header.component.html',\n  styleUrls: ['./quote-header.component.scss'],\n})\nexport class QuoteHeaderComponent implements OnInit {\n  @Input() quoteId: number = 0;\n  @Input() text: string = 'QUOTE';\n  @Input() iconPath: string = 'assets/quote/images/quote-icon.png';\n\n  @Output() onCopy = new EventEmitter();\n  @Output() onEdit = new EventEmitter();\n  @ViewChild('dialog') dialog: TemplateRef<any> = {} as TemplateRef<any>;\n  editQuote = false;\n\n  agGrid: GridReadyEvent = {} as GridReadyEvent;\n  quoteDetails: any = {};\n  moodboards: Array<any> = [];\n  selectedMoodboard: any = '';\n  moodboardList: Array<any> = [];\n  // Default unit\n  quoteMDList: Array<any> = [];\n  quoteIPList: Array<any> = [];\n  selectedQuoteMD: any = '';\n  moodboardItems: Array<any> = [];\n\n  // Floor Plan\n  floorPlanList: Array<any> = [];\n  selectedFloorPlan: any = '';\n  removeFloorPlanFlag = false;\n  // Floor plan unit\n  unitList: any = [];\n  removeUnitFlag = false;\n  routeIndex: number = 0;\n  pinnedBottomRowData = [\n    {\n      subTotal: 'abc',\n      sgid: 'SUB TOTAL',\n      is_total: '0',\n      isExtraRow: true,\n    },\n    {\n      subTotal: 'abc',\n      sgid: 'DELIVERY FEE',\n      is_total: '0',\n      isExtraRow: true,\n    },\n    {\n      subTotal: 'abc',\n      sgid: 'TAXES',\n      is_total: '0',\n      isExtraRow: true,\n    },\n    {\n      subTotal: 'abc',\n      sgid: 'TOTAL',\n      is_total: '0',\n      isExtraRow: true,\n    },\n  ];\n\n  columnDefs = [\n    {\n      field: 'sgid',\n      width: 120,\n      headerName: 'S. NO',\n      headerTooltip: 'S.NO',\n      colSpan: (params: any) => (params.data.subTotal === 'abc' ? 10 : 1),\n      cellStyle: (params: any) => {\n        if (params.data.subTotal === 'abc') {\n          return { 'text-align': 'end' };\n        }\n        return '';\n      },\n    },\n    { field: 'warehouse_name', headerName: 'CITY' },\n    { field: 'sku', headerName: 'SKU' },\n    {\n      headerName: 'IMAGE',\n      cellRenderer: 'ImageRendererComponent',\n      field: 'product_images.small',\n      cellStyle: {\n        padding: '0.3rem',\n      },\n      // valueGetter: async (params:ICellRendererParams)=>{\n      // let x = await this._core.getBase64Image(params?.data?.product_images?.small).toPromise();\n      // return 'data:image/jpeg;base64' + x?.imageurl;\n      // }\n    },\n    {\n      headerName: 'PRODUCT NAME',\n      field: 'name',\n      width: '250px',\n    },\n    {\n      headerName: 'TYPE',\n      field: 'button_type',\n      cellRenderer: 'ItemTypeCellRenderer',\n      valueGetter: (params: ICellRendererParams) => {\n        return params.data.button_type === 0 ? 'Rent' : 'Buy';\n      },\n    },\n    {\n      headerName: 'QUANTITY',\n      field: 'is_qty',\n      cellRenderer: 'CounterCellRenderer',\n    },\n    {\n      headerName: 'BUY PRICE ($)',\n      field: 'buy_price',\n      valueGetter: (params: ICellRendererParams) => {\n        return params.data.button_type === 1 ? params.data.buy_price : 'NA';\n      },\n    },\n    {\n      headerName: 'RENTAL PRICE/MONTH',\n      field: 'price',\n      cellRenderer: (params: ICellRendererParams) => {\n        return params.data.button_type === 0 ? params.value : 'NA';\n      },\n    },\n    // { headerName: 'DISCOUNT ($)', field: 'discount' },\n\n    {\n      headerName: 'MONTHS',\n      field: 'months',\n    },\n    {\n      headerName: 'TOTAL ($)',\n      field: 'is_total',\n      cellRenderer: 'TotalCellRendererComponent',\n    },\n  ];\n\n  gridOptions: GridOptions = {\n    onGridReady: (api: GridReadyEvent) => {\n      this.agGrid = api;\n      this.onGridReady(api);\n    },\n    rowHeight: 100,\n    headerHeight: 100,\n    getRowHeight: (params: any) => {\n      return params?.data?.isExtraRow ? 50 : 100;\n    },\n  };\n  defaultColDef = {\n    wrapText: true,\n    cellClass: 'grid-cell',\n    cellStyle: {\n      'line-height': 'normal',\n      'align-items': 'center',\n      'justify-content': 'center',\n      display: 'flex',\n      padding: '0 0.5rem',\n    },\n  };\n  frameworkComponents = {\n    ImageRendererComponent: ImageRendererComponent,\n    TotalCellRendererComponent: TotalCellRendererComponent,\n    ItemTypeCellRenderer: ItemTypeComponent,\n    CounterCellRenderer: CounterComponent,\n  };\n  rowData: Observable<any[]> = new Observable();\n\n  private dialogRef: MatDialogRef<any> | undefined = undefined;\n  constructor(\n    private _quoteHeaderService: QuoteHeaderService,\n    private _router: Router,\n    private _user: UserService,\n    private _core: CoreService,\n    private _matDialog: MatDialog,\n    private _toaster: ToasterService,\n    private _dialog: MatDialog,\n    private _quoteService: QuoteService\n  ) {}\n\n  ngOnInit(): void {\n    this.getQuoteInformation();\n    this.getMoodboardInQuote();\n    this.getFloorPlan();\n    this.routeIndex = this._router.url.indexOf('quote');\n    if (this.routeIndex == 1) {\n      this.openDialog();\n    }\n  }\n  onGridReady(evt: GridReadyEvent) {\n    this.agGrid = evt;\n    evt.api.sizeColumnsToFit();\n    this.rowData = this.getQuoteSummary();\n  }\n\n  refresh() {\n    this.getMoodboardInQuote();\n    this.getFloorPlan();\n    this.getUnits();\n    this.onGridReady(this.agGrid);\n  }\n  getQuoteSummary<T>(): Observable<T> {\n    return this._quoteHeaderService.getQuoteSummary<T>(this.quoteId).pipe(\n      map((x: any) => {\n        if (x.quote_items.length > 0) {\n          this.updateBottomData(x.quote);\n        } else {\n          this.updateBottomData({\n            delivery_fee: 0,\n            tax_percentage: 0,\n            tax_amount: 0,\n          });\n        }\n        this.agGrid.api.redrawRows();\n        return x.quote_items.map((item: any) => {\n          item.order_status = x.quote.order_status;\n          return item;\n        });\n      })\n    );\n  }\n\n  getMoodboardInQuote() {\n    this._quoteHeaderService\n      .getMoodboardInQuote<Array<any>>(this.quoteId)\n      .subscribe((data: any) => {\n        if (typeof data === 'string') {\n          return;\n        }\n        this.moodboards = data;\n        this.quoteMDList = data.Moodboard_list;\n        this.quoteIPList = data.Indivisual_products.map((x: any) => {\n          x.isIndividual = true;\n          return x;\n        });\n      });\n  }\n\n  getQuoteInformation() {\n    let userId = this._user.getUser().getId();\n    let companyId = this._user.getUser().getCompanyId();\n    this._quoteHeaderService\n      .getQuoteInformation(this.quoteId)\n      .subscribe((data) => {\n        this.quoteDetails = data;\n        if (this.quoteDetails.userid === userId) {\n          this.editQuote = true;\n        }\n        if (\n          companyId === this.quoteDetails.company_id &&\n          this.quoteDetails.application_type === 1\n        ) {\n          this.editQuote = true;\n        }\n      });\n  }\n\n  private getQuoteObject() {\n    return {\n      quoteNumber: this.quoteDetails.sgid,\n      phone: this.quoteDetails.contactno,\n      customerName: this.quoteDetails.name,\n      address: this.quoteDetails.address,\n      email: this.quoteDetails.email,\n      state: this.quoteDetails.state,\n      companyName: this.quoteDetails.company_name,\n      city: this.quoteDetails.city_name,\n      projectName: this.quoteDetails.project_name,\n      zipCode: this.quoteDetails.is_zip_code,\n    };\n  }\n\n  OnCopy(evt: any) {\n    this._router.navigate(['quote/copy'], { state: this.getQuoteObject() });\n    this.onCopy.emit(evt);\n  }\n  OnEdit(evt: any) {\n    this._router.navigate(['quote/edit'], { state: this.getQuoteObject() });\n    this.onEdit.emit(evt);\n  }\n\n  updateBottomData(data: any) {\n    this.pinnedBottomRowData[1].is_total = data?.delivery_fee;\n    this.pinnedBottomRowData[2].sgid = 'TAXES (' + data?.tax_percentage + '%)';\n    this.pinnedBottomRowData[2].is_total = data?.tax_amount;\n    this.pinnedBottomRowData[3].is_total = data?.tax_amount;\n  }\n\n  openDialog() {\n    this._dialog\n      .open(AddMoodboardQuoteComponent, {\n        height: '100%',\n        width: '50%',\n        data: {\n          isDialog: true,\n          quoteId: this.quoteId,\n        },\n      })\n      .afterClosed()\n      .subscribe((data) => {\n        if (data && data.event == 'defaultunit') {\n        } else if (data && data.event == 'floorPlan') {\n        } else if (data && data.event == 'floorPlanUnit') {\n        }\n        this.refresh();\n      });\n  }\n\n  addMoodboard(selectedMoodboard: number) {\n    this._quoteHeaderService\n      .addMoodboard(this.quoteId, selectedMoodboard)\n      .subscribe(\n        (data: any) => {\n          this.dialogRef?.close();\n          this._toaster.success(data.msg);\n          this.ngOnInit();\n          this.onGridReady(this.agGrid);\n        },\n        (error) => {\n          this._toaster.error('Fail to add moodboard');\n        }\n      );\n  }\n\n  selectionChange() {\n    console.log(this.selectedMoodboard);\n  }\n\n  onTabChanged(evt: any) {}\n  // Default Unit\n  onClickMDorProduct(mdOrProduct: any) {\n    this.moodboardItems = [];\n    this.selectedQuoteMD = mdOrProduct;\n    if (!this.selectedQuoteMD.isIndividual) {\n      this._quoteHeaderService\n        .getMoodboardItems(this.selectedQuoteMD?.unitmoodboards?.id)\n        .subscribe((resp) => {\n          this.moodboardItems = resp.moodboard_items;\n        });\n    }\n  }\n  addMDtoFloorPlan() {\n    let obj;\n    if (this.selectedQuoteMD?.moodboard_id == null) {\n      obj = {\n        qid: this.selectedQuoteMD?.quote_id,\n        user_id: this._user.getUser().getId(),\n        product_id: this.selectedQuoteMD?.product_id,\n        sku: this.selectedQuoteMD?.variation_new?.sgid,\n        quantity: this.selectedQuoteMD?.qty,\n        button_type: this.selectedQuoteMD?.button_type,\n        month: this.selectedQuoteMD?.months,\n        warehouse_id: this.selectedQuoteMD?.warehouse_id,\n        source: 'default_unit',\n      };\n    } else {\n      obj = {\n        isDialog: true,\n        qid: this.selectedQuoteMD?.quote_id,\n        mid: this.selectedQuoteMD?.moodboard_id,\n        user_id: this._user.getUser().getId(),\n        source: 'default_unit',\n      };\n    }\n\n    this._dialog\n      .open(SelectFpComponent, {\n        height: '70%',\n        width: '70%',\n        data: obj,\n      })\n      .afterClosed()\n      .subscribe((data) => {\n        if (data) {\n          this.selectedQuoteMD = null;\n          this.getMoodboardInQuote();\n          this.getFloorPlan();\n        }\n      });\n    //this._quoteHeaderService.addMDtoFloorPlan().subscribe((resp) => {});\n  }\n\n  addMDtoUnit() {\n    let obj;\n    if (this.selectedQuoteMD?.moodboard_id == null) {\n      obj = {\n        qid: this.selectedQuoteMD?.quote_id,\n        user_id: this._user.getUser().getId(),\n        product_id: this.selectedQuoteMD?.product_id,\n        sku: this.selectedQuoteMD?.variation_new?.sgid,\n        quantity: this.selectedQuoteMD?.qty,\n        button_type: this.selectedQuoteMD?.button_type,\n        month: this.selectedQuoteMD?.months,\n        warehouse_id: this.selectedQuoteMD?.warehouse_id,\n        source: 'default_unit',\n      };\n    } else {\n      obj = {\n        isDialog: true,\n        qid: this.selectedQuoteMD?.quote_id,\n        mid: this.selectedQuoteMD?.moodboard_id,\n        user_id: this._user.getUser().getId(),\n        source: 'default_unit',\n      };\n    }\n\n    this._dialog\n      .open(SelectFpuComponent, {\n        height: '70%',\n        width: '70%',\n        data: obj,\n      })\n      .afterClosed()\n      .subscribe((data) => {\n        if (data) {\n          this.selectedQuoteMD = null;\n          this.getMoodboardInQuote();\n          this.getFloorPlan();\n        }\n      });\n\n    //    this._quoteHeaderService.addMDtoUnit().subscribe((resp) => {});\n  }\n  removeProductfromQuote() {\n    this._quoteHeaderService\n      .removeProductfromQuote(this.quoteId, this.selectedQuoteMD?.sgid)\n      .subscribe((resp) => {\n        if (resp.statusCode == 200) {\n          this._toaster.success(resp.result);\n          this.getMoodboardInQuote();\n        } else {\n          this._toaster.success(resp.result);\n        }\n      });\n  }\n  removeMDfromQuote() {\n    this._quoteHeaderService\n      .removeMDfromQuote(this.quoteId, this.selectedQuoteMD?.unitmoodboards?.id)\n      .subscribe((resp) => {\n        if (resp.statusCode == 200) {\n          this._toaster.success(resp.result);\n          this.getMoodboardInQuote();\n        } else {\n          this._toaster.success(resp.result);\n        }\n      });\n  }\n\n  goToMoodboard() {\n    this._router.navigateByUrl(\n      '/moodboard/' + this.selectedQuoteMD?.unitmoodboards?.id\n    );\n  }\n\n  openFloorPlanUnit(unit: any) {\n    const floorPlanID = unit.floorplan_id ? unit.floorplan_id : 'None';\n    this._router.navigate([\n      'quote',\n      this.quoteId,\n      'floor-plan-unit',\n      floorPlanID,\n      'unit',\n      unit.sgid,\n    ]);\n  }\n\n  // Add Floor plan\n  openFloorPlanPage(fp: any) {\n    this._router.navigate(['quote', this.quoteId, fp.sgid]);\n  }\n  getFloorPlan() {\n    this._quoteService.getFloorPlan(this.quoteId).subscribe((resp) => {\n      this.floorPlanList = resp.result;\n      this.getUnits();\n    });\n  }\n\n  removeFloorPlanFromQuote(fp: any) {\n    this._quoteService\n      .removeFloorPlanFromQuote(this.quoteId, fp.sgid)\n      .subscribe((resp) => {\n        if (resp.statusCode == 200) {\n          this._toaster.success(resp.message);\n          this.getFloorPlan();\n        } else {\n          this._toaster.error(resp.message);\n        }\n      });\n  }\n  openAddFloorPlanDialog() {\n    this._matDialog\n      .open(AddFPComponent, {\n        width: '65%',\n        height: '72%',\n        data: { quoteId: this.quoteId },\n      })\n      .afterClosed()\n      .subscribe((data) => {\n        if (data) {\n          this.getFloorPlan();\n        }\n      });\n  }\n\n  openAddUnitDialog() {\n    this._matDialog\n      .open(AddFPUComponent, {\n        width: '50%',\n        height: '61%',\n        data: { quoteId: this.quoteId },\n      })\n      .afterClosed()\n      .subscribe((data) => {\n        if (data) {\n          this.getUnits();\n        }\n      });\n  }\n\n  // Floor plan unit\n  getUnits() {\n    //    this.floorPlanList.forEach((element, index)=>{\n    this._quoteService\n      .getUnits({ quote_id: this.quoteId })\n      .subscribe((resp) => {\n        this.unitList = resp;\n        //  this.unitList['UnitsWithoutFloorPlan'] = resp.UnitsWithoutFloorPlan;\n        //  this.unitList['FloorPlanWithUnits'] = resp.FloorPlanWithUnits;\n        // this.floorPlanList[index]['units'] = resp.result;\n      });\n    //  });\n    console.log(this.floorPlanList);\n  }\n\n  removeUnitFromFP(unit: any) {\n    this._quoteService\n      .removeUnitFromFp(this.quoteId, unit.name, unit.sgid)\n      .subscribe((resp) => {\n        if (resp.statusCode) {\n          this._toaster.success(resp.message);\n          this.getUnits();\n        } else {\n          this._toaster.success(resp.message);\n        }\n      });\n  }\n}\n","<ng-template #dialog>\n  <div class=\"dialog\" fxLayout=\"column\" fxLayoutAlign=\"center stretch\">\n    <div fxLayout=\"row\" style=\"width: 100%\" fxLayoutAlign=\"space-between start\">\n      <div class=\"h2\" style=\"margin-bottom: 2rem\">Add a Moodboard</div>\n      <button mat-flat-button mat-dialog-close>\n        <i class=\"fa fa-times\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n    <mat-dialog-content>\n      <div fxLayout=\"column\" fxLayoutGap=\"1rem\">\n        <mat-label>Select a Moodboard to be added to this quote.</mat-label>\n        <mat-form-field appearance=\"outline\">\n          <mat-select\n            [(ngModel)]=\"selectedMoodboard\"\n            (selectionChange)=\"selectionChange()\"\n          >\n            <ng-container *ngFor=\"let moodboard of moodboardList\">\n              <mat-option [value]=\"moodboard.sgid\">{{\n                moodboard.boardname\n              }}</mat-option>\n            </ng-container>\n\n            <mat-option *ngIf=\"moodboardList.length === 0\" value=\"\"\n              >No Moodboard</mat-option\n            >\n          </mat-select>\n        </mat-form-field>\n      </div>\n    </mat-dialog-content>\n    <mat-dialog-actions fxLayout=\"row\" fxLayoutAlign=\"center center\">\n      <button\n        class=\"round\"\n        mat-flat-button\n        color=\"accent\"\n        [disabled]=\"!selectedMoodboard\"\n        (click)=\"addMoodboard(selectedMoodboard)\"\n      >\n        Add Moodboard\n      </button>\n    </mat-dialog-actions>\n  </div>\n</ng-template>\n\n<div class=\"quote\" fxLayout=\"column\" fxLayoutAlign=\" stretch\">\n  <div class=\"quote-details\" fxLayout=\"row\" fxLayoutAlign=\" stretch\">\n    <div\n      class=\"quote-details__icon\"\n      fxFlex=\"30\"\n      fxLayout=\"column\"\n      fxLayoutAlign=\"center center\"\n    >\n      <span>{{ text }}</span>\n      <img [src]=\"iconPath\" alt=\"\" srcset=\"\" />\n    </div>\n    <div\n      class=\"quote-details__info\"\n      fxFlex=\"60\"\n      fxLayout=\"row wrap\"\n      fxLayoutAlign=\"start\"\n    >\n      <div fxFlex=\"66\" *ngIf=\"quoteDetails?.order_reference\">\n        <span class=\"label\">Order Number: </span>\n        <span class=\"value\">{{ quoteDetails.order_reference }}</span>\n      </div>\n      <div fxFlex=\"33\">\n        <span class=\"label\">Project Name: </span>\n        <span class=\"value\">{{ quoteDetails.project_name }}</span>\n      </div>\n      <div fxFlex=\"33\">\n        <span class=\"label\">Company Name: </span>\n        <span class=\"value\">{{ quoteDetails.company_name }}</span>\n      </div>\n      <div fxFlex=\"33\">\n        <span class=\"label\">Address: </span>\n        <span class=\"value\">{{ quoteDetails.address }}</span>\n      </div>\n      <div fxFlex=\"33\">\n        <span class=\"label\">Quote #: </span>\n        <span class=\"value\">{{ quoteDetails.sgid }}</span>\n      </div>\n      <div fxFlex=\"33\">\n        <span class=\"label\">Contact No: </span>\n        <span class=\"value\">{{ quoteDetails.contactno }}</span>\n      </div>\n      <div fxFlex=\"33\">\n        <span class=\"label\">State: </span>\n        <span class=\"value\">{{ quoteDetails.is_state_name }}</span>\n      </div>\n      <div fxFlex=\"33\">\n        <span class=\"label\">Customer Name: </span>\n        <span class=\"value\">{{ quoteDetails.name }}</span>\n      </div>\n      <div fxFlex=\"33\">\n        <span class=\"label\">Email: </span>\n        <span class=\"value\">{{ quoteDetails.email }}</span>\n      </div>\n      <div fxFlex=\"33\">\n        <span class=\"label\">City: </span>\n        <span class=\"value\">{{ quoteDetails.city_name }}</span>\n      </div>\n      <div fxFlex=\"33\">\n        <span class=\"label\">Zipcode: </span>\n        <span class=\"value\">{{ quoteDetails.is_zip_code }}</span>\n      </div>\n    </div>\n    <div\n      class=\"quote-details__copy\"\n      fxFlex=\"10\"\n      fxLayout=\"row\"\n      fxLayoutAlign=\"start end\"\n      fxLayoutGap=\"1rem\"\n    >\n      <button\n        mat-mini-fab\n        color=\"accent\"\n        aria-label=\"Example icon button with a filter list icon\"\n        (click)=\"OnCopy($event)\"\n      >\n        <mat-icon>file_copy</mat-icon>\n      </button>\n      <button\n        mat-mini-fab\n        *ngIf=\"text === 'QUOTE' && editQuote\"\n        color=\"accent\"\n        (click)=\"OnEdit($event)\"\n      >\n        <mat-icon>edit icon</mat-icon>\n      </button>\n    </div>\n  </div>\n  <mat-tab-group\n    color=\"accent\"\n    class=\"tabs\"\n    (selectedTabChange)=\"onTabChanged($event)\"\n    mat-align-tabs=\"start\"\n  >\n    <mat-tab label=\"Default Unit\">\n      <div fxLayout=\"column\" class=\"tabs-item\">\n        <div class=\"quote-moodboard\" fxLayout=\"column\" fxLayoutAlign=\" stretch\">\n          <div\n            class=\"quote-moodboard__list\"\n            fxLayout=\"row wrap\"\n            fxLayoutAlign=\"start\"\n            fxLayoutGap=\"1rem\"\n          >\n            <div\n              fxFlex=\"10\"\n              class=\"quote-moodboard__list--item moodboard-list\"\n              [ngClass]=\"{ selected: moodboard.sgid == selectedQuoteMD?.sgid }\"\n              *ngFor=\"let moodboard of quoteMDList\"\n              fxLayout=\"column\"\n            >\n              <img\n                height=\"110px\"\n                width=\"auto\"\n                (click)=\"onClickMDorProduct(moodboard)\"\n                [src]=\"moodboard?.unitmoodboards?.is_moodboard_images?.small\"\n                alt=\"Moodboard\"\n              />\n              <p> {{ moodboard?.unitmoodboards?.boardname }} <span > -Moodboard </span> </p>\n            </div>\n            <div\n              fxFlex=\"10\"\n              class=\"quote-moodboard__list--item moodboard-list\"\n              [ngClass]=\"{ selected: product.sgid == selectedQuoteMD?.sgid }\"\n              *ngFor=\"let product of quoteIPList\"\n              fxLayout=\"column\"\n            >\n              <img\n                height=\"110px\"\n                width=\"auto\"\n                (click)=\"onClickMDorProduct(product)\"\n                [src]=\"\n                  product?.variation_new?.default_images[0]?.image_url?.small\n                \"\n                alt=\"Moodboard\"\n              />\n              <p>{{ product.name }}</p>\n            </div>\n            <div\n              fxFlex=\"10\"\n              class=\"quote-moodboard__list--item\"\n              fxLayoutAlign=\"center center\"\n              fxLayout=\"column\"\n              (click)=\"openDialog()\"\n              *ngIf=\"text === 'QUOTE' && editQuote\"\n            >\n              <mat-icon class=\"icon\" inline=\"true\">add_circle_outline</mat-icon>\n            </div>\n          </div>\n        </div>\n        <div fxFlex=\"row\" *ngIf=\"selectedQuoteMD\" class=\"quote-moodboard--sec\">\n          <div\n            fxLayout=\"column\"\n            fxFlex=\"20\"\n            fxLayoutGap=\"1rem\"\n            fxLayoutAlign=\"center center\"\n          >\n            <div class=\"h2\">\n              {{\n                selectedQuoteMD?.isIndividual\n                  ? selectedQuoteMD?.name\n                  : selectedQuoteMD?.unitmoodboards?.boardname\n              }}\n            </div>\n            <button\n              class=\"round\"\n              mat-flat-button\n              (click)=\"addMDtoFloorPlan()\"\n              color=\"accent\"\n              *ngIf=\"routeIndex == 1\"\n            >\n              ADD TO FLOORPLAN\n            </button>\n            <button\n              class=\"round\"\n              mat-flat-button\n              (click)=\"addMDtoUnit()\"\n              color=\"accent\"\n              *ngIf=\"routeIndex == 1\"\n            >\n              ADD TO UNIT\n            </button>\n            <button\n              class=\"round\"\n              *ngIf=\"!selectedQuoteMD?.isIndividual && routeIndex == 1\"\n              mat-flat-button\n              (click)=\"removeMDfromQuote()\"\n              color=\"primary\"\n            >\n              REMOVE MOODBOARD\n            </button>\n            <button\n              class=\"round\"\n              *ngIf=\"selectedQuoteMD?.isIndividual && routeIndex == 1\"\n              mat-flat-button\n              color=\"primary\"\n              (click)=\"removeProductfromQuote()\"\n            >\n              REMOVE PRODUCT\n            </button>\n            <button\n              class=\"round\"\n              *ngIf=\"!selectedQuoteMD?.isIndividual && routeIndex == 1\"\n              mat-flat-button\n              color=\"primary\"\n              (click)=\"goToMoodboard()\"\n            >\n              GO TO MOODBOARD\n            </button>\n          </div>\n          <mat-divider style=\"margin-right: 4rem\" vertical=\"true\"></mat-divider>\n          <div\n            fxFlex\n            class=\"quote- sec\"\n            fxLayout=\"row\"\n            fxLayoutGap=\"3rem\"\n            fxLayoutAlign=\"start\"\n          >\n            <div\n              fxFlex=\"22\"\n              class=\"quote-moodboard__list--item moodboard-list\"\n              *ngFor=\"let item of moodboardItems\"\n              fxLayout=\"column\"\n              fxLayoutGap=\".5rem\"\n              fxLayoutAlign=\"start\"\n            >\n              <lib-item-type\n                style=\"width: 65px\"\n                [status]=\"item?.button_type\"\n              ></lib-item-type>\n              <div fxFlex fxLayoutAlign=\"center center\" fxLayout=\"column\">\n                <img\n                  fxFlex\n                  height=\"100px\"\n                  width=\"90px\"\n                  [src]=\"item?.variation?.images[0]?.image_url?.small\"\n                  alt=\"Moodboard\"\n                />\n                <p class=\"h3\">{{ item?.name }}</p>\n                <p>\n                  {{ \"Qty :\" + item?.qty }}\n                </p>\n              </div>\n            </div>\n            <div\n              fxFlex=\"22\"\n              class=\"quote-moodboard__list--item moodboard-list\"\n              *ngIf=\"selectedQuoteMD?.isIndividual\"\n              fxLayout=\"column\"\n              fxLayoutGap=\".5rem\"\n              fxLayoutAlign=\"start\"\n            >\n              <lib-item-type\n                style=\"width: 65px\"\n                [status]=\"selectedQuoteMD?.button_type\"\n              ></lib-item-type>\n              <div fxFlex fxLayoutAlign=\"center center\" fxLayout=\"column\">\n                <img\n                  fxFlex\n                  height=\"100px\"\n                  width=\"90px\"\n                  [src]=\"\n                    selectedQuoteMD?.variation_new?.default_images[0]?.image_url\n                      ?.small\n                  \"\n                  alt=\"Moodboard\"\n                />\n                <p class=\"h3\">{{ selectedQuoteMD?.name }}</p>\n                <p>\n                  {{ \"Qty :\" + selectedQuoteMD?.qty }}\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </mat-tab>\n    <mat-tab label=\"Floor Plans\">\n      <div class=\"g-box-shadow tabs-item fp\">\n        <span *ngIf=\"floorPlanList.length <= 0\" class=\"fp__default-text\"\n          >No Floor Plans found. Please add Floor Plan.</span\n        >\n        <div fxLayout=\"row wrap\" fxLayoutGap=\"2rem\" class=\"fp__container\">\n          <div\n            *ngFor=\"let fp of floorPlanList\"\n            fxLayout=\"column\"\n            fxLayoutGap=\"1rem\"\n            class=\"g-box-shadow fp__container--item\"\n          >\n            <span\n              fxLayout=\"row\"\n              fxLayoutGap=\"1rem\"\n              fxLayoutAlign=\"center center\"\n            >\n              <button\n                class=\"round\"\n                (click)=\"removeFloorPlanFromQuote(fp)\"\n                *ngIf=\"removeFloorPlanFlag\"\n                mat-flat-button\n              >\n                <i class=\"fa fa-times-circle-o\" aria-hidden=\"true\"></i> Remove\n              </button>\n              <button\n                *ngIf=\"!removeFloorPlanFlag\"\n                class=\"icon-button\"\n                mat-icon-button\n                disabled\n                aria-label=\"Example icon button with a filter list icon\"\n              >\n                <mat-icon>file_copy</mat-icon>\n              </button>\n              <button\n                *ngIf=\"!removeFloorPlanFlag\"\n                class=\"icon-button\"\n                mat-icon-button\n                disabled\n                aria-label=\"Example icon button with a filter list icon\"\n              >\n                <mat-icon>edit icon</mat-icon>\n              </button>\n            </span>\n            <span fxLayout=\"column\" style=\"align-items: center\">\n              <span class=\"h2\">{{ fp.floorname }}</span>\n              <span>{{ fp.floorplan_mb_cnt }} Moodboard</span>\n              <span> {{ fp.total_unit }} Units</span>\n              <span> {{ fp.floorplan_type_name }}</span>\n            </span>\n            <button\n              class=\"round\"\n              (click)=\"openFloorPlanPage(fp)\"\n              mat-flat-button\n              color=\"accent\"\n            >\n              SETUP\n            </button>\n          </div>\n        </div>\n        <div fxLayout=\"row\" fxLayoutGap=\"2rem\">\n          <button\n            class=\"round\"\n            *ngIf=\"!removeFloorPlanFlag\"\n            mat-flat-button\n            color=\"primary\"\n            (click)=\"openAddFloorPlanDialog()\"\n          >\n            ADD FLOOR PLAN\n          </button>\n          <button\n            class=\"round\"\n            (click)=\"removeFloorPlanFlag = !removeFloorPlanFlag\"\n            mat-flat-button\n            color=\"primary\"\n          >\n            {{ removeFloorPlanFlag ? \"CANCEL\" : \"REMOVE FLOOR PLAN\" }}\n          </button>\n        </div>\n      </div>\n    </mat-tab>\n    <mat-tab label=\"Floor plan Units\">\n      <div class=\"g-box-shadow tabs-item fpu\">\n        <span *ngIf=\"floorPlanList.length <= 0\" class=\"fpu__default-text\">\n          No Floor Plans found. Please add Floor Plan.\n        </span>\n        <div\n          class=\"fpu__container g-box-shadow\"\n          *ngFor=\"let fp of unitList?.FloorPlanWithUnits\"\n        >\n          <span class=\"h2\">{{ fp?.floorname }}</span>\n          <div fxLayout=\"row\" fxLayoutGap=\"1rem\">\n            <div\n              fxLayout=\"column\"\n              *ngFor=\"let unit of fp.unit_ids\"\n              class=\"fpu__container--unit g-box-shadow pointer\"\n            >\n              <button (click)=\"removeUnitFromFP(unit)\" mat-flat-button>\n                <i\n                  *ngIf=\"removeUnitFlag\"\n                  class=\"fa fa-times\"\n                  aria-hidden=\"true\"\n                ></i>\n              </button>\n              <div (click)=\"openFloorPlanUnit(unit)\">\n                <div class=\"h2\">{{ unit.name }}</div>\n                <div class=\"h3\">Unit</div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"fpu__container g-box-shadow pointer\">\n          <!-- <span class=\"h2\">{{ fp?.floorname }}</span> -->\n          <div fxLayout=\"row\" fxLayoutGap=\"1rem\">\n            <div\n              fxLayout=\"column\"\n              *ngFor=\"let unit of unitList?.UnitsWithoutFloorPlan\"\n              class=\"fpu__container--unit g-box-shadow\"\n            >\n              <button disabled mat-flat-button>\n                <i\n                  *ngIf=\"removeUnitFlag\"\n                  class=\"fa fa-times\"\n                  aria-hidden=\"true\"\n                ></i>\n              </button>\n              <div (click)=\"openFloorPlanUnit(unit)\">\n                <div class=\"h2\">{{ unit.name }}</div>\n                <div class=\"h3\">Unit</div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div fxLayout=\"row\" fxLayoutGap=\"2rem\">\n          <button\n            class=\"round\"\n            mat-flat-button\n            *ngIf=\"!removeUnitFlag\"\n            (click)=\"openAddUnitDialog()\"\n            color=\"primary\"\n          >\n            ADD UNIT(S)\n          </button>\n          <button\n            class=\"round\"\n            mat-flat-button\n            (click)=\"removeUnitFlag = !removeUnitFlag\"\n            color=\"primary\"\n          >\n            {{ removeUnitFlag ? \"CANCEL\" : \"REMOVE UNIT(S)\" }}\n          </button>\n          <span fxFlex></span>\n          <mat-checkbox disabled color=\"accent\"> UNASSIGNED</mat-checkbox>\n        </div>\n      </div>\n    </mat-tab>\n  </mat-tab-group>\n\n  <div class=\"quote-summary\" fxLayout=\"column\" fxLayoutAlign=\"start stretch\">\n    <div\n      class=\"quote-summary__info\"\n      fxLayout=\"row\"\n      fxLayoutAlign=\"start start\"\n      fxLayoutGap=\"2rem\"\n    >\n      <div>\n        <span class=\"quote-summary__info--label\">Customer City :</span>\n        <span class=\"quote-summary__info--value\">\n          {{ quoteDetails.city_name }}</span\n        >\n      </div>\n      <div>\n        <span class=\"quote-summary__info--label\">Zipcode:</span>\n        <span class=\"quote-summary__info--value\">{{\n          quoteDetails.is_zip_code\n        }}</span>\n      </div>\n    </div>\n    <ag-grid-angular\n      [gridOptions]=\"gridOptions\"\n      style=\"height: 600px; width: 100%\"\n      class=\"ag-theme-alpine quotes-table\"\n      [rowData]=\"rowData | async\"\n      [frameworkComponents]=\"frameworkComponents\"\n      [pinnedBottomRowData]=\"pinnedBottomRowData\"\n      [defaultColDef]=\"defaultColDef\"\n      [columnDefs]=\"columnDefs\"\n    >\n    </ag-grid-angular>\n    <div\n      class=\"quote-summary__actions\"\n      fxLayout=\"row\"\n      fxLayoutAlign=\"center\"\n      fxLayoutGap=\"2rem\"\n    >\n      <ng-content [select]=\"actions\"> </ng-content>\n    </div>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { EnvironmentService } from 'projects/core/src/lib/services/environment.service';\nimport { HttpService, UserService } from 'projects/core/src/public-api';\nimport { Observable } from 'rxjs';\nimport { QuoteFormType } from './quote-create-form.component';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class QuoteCreateFormService {\n  constructor(\n    private _http: HttpService,\n    private _env: EnvironmentService,\n    private _user: UserService\n  ) {}\n\n  private getParams(form: FormGroup) {\n    let obj = form.value;\n    obj.user_id = this._user.getUser().getId();\n    obj.userid = this._user.getUser().getId();\n    return obj;\n  }\n\n  createQuote(obj: FormGroup, type: QuoteFormType): Observable<any> {\n    obj = this.getParams(obj);\n\n    let url = 'create/customer/info';\n    if (type === 'EDIT') {\n      url = 'update/customer/info';\n    }\n    if (type === 'COPY') {\n      url = 'clone/quote';\n    }\n    return this._http.sendPOSTRequest(\n      this._env.getEndPoint() + url,\n      JSON.stringify(obj)\n    );\n  }\n}\n","import { FocusMonitor } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { InjectionToken, forwardRef, EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, ChangeDetectorRef, NgZone, Attribute, Optional, Inject, Input, Output, ViewChild, Directive, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS, CheckboxRequiredValidator } from '@angular/forms';\nimport { mixinTabIndex, mixinColor, mixinDisableRipple, mixinDisabled, MatRipple, MatRippleModule, MatCommonModule } from '@angular/material/core';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { ObserversModule } from '@angular/cdk/observers';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token to be used to override the default options for `mat-checkbox`. */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/material/core';\nimport * as ɵngcc3 from '@angular/cdk/observers';\n\nconst _c0 = [\"input\"];\nconst _c1 = function () { return { enterDuration: 150 }; };\nconst _c2 = [\"*\"];\nconst MAT_CHECKBOX_DEFAULT_OPTIONS = new InjectionToken('mat-checkbox-default-options', {\n    providedIn: 'root',\n    factory: MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY\n});\n/** @docs-private */\nfunction MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY() {\n    return {\n        color: 'accent',\n        clickAction: 'check-indeterminate',\n    };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Increasing integer for generating unique ids for checkbox components.\nlet nextUniqueId = 0;\n// Default checkbox configuration.\nconst defaults = MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY();\n/**\n * Provider Expression that allows mat-checkbox to register as a ControlValueAccessor.\n * This allows it to support [(ngModel)].\n * @docs-private\n */\nconst MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MatCheckbox),\n    multi: true\n};\n/** Change event object emitted by MatCheckbox. */\nclass MatCheckboxChange {\n}\n// Boilerplate for applying mixins to MatCheckbox.\n/** @docs-private */\nclass MatCheckboxBase {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nconst _MatCheckboxMixinBase = mixinTabIndex(mixinColor(mixinDisableRipple(mixinDisabled(MatCheckboxBase))));\n/**\n * A material design checkbox component. Supports all of the functionality of an HTML5 checkbox,\n * and exposes a similar API. A MatCheckbox can be either checked, unchecked, indeterminate, or\n * disabled. Note that all additional accessibility attributes are taken care of by the component,\n * so there is no need to provide them yourself. However, if you want to omit a label and still\n * have the checkbox be accessible, you may supply an [aria-label] input.\n * See: https://material.io/design/components/selection-controls.html\n */\nclass MatCheckbox extends _MatCheckboxMixinBase {\n    constructor(elementRef, _changeDetectorRef, _focusMonitor, _ngZone, tabIndex, _animationMode, _options) {\n        super(elementRef);\n        this._changeDetectorRef = _changeDetectorRef;\n        this._focusMonitor = _focusMonitor;\n        this._ngZone = _ngZone;\n        this._animationMode = _animationMode;\n        this._options = _options;\n        /**\n         * Attached to the aria-label attribute of the host element. In most cases, aria-labelledby will\n         * take precedence so this may be omitted.\n         */\n        this.ariaLabel = '';\n        /**\n         * Users can specify the `aria-labelledby` attribute which will be forwarded to the input element\n         */\n        this.ariaLabelledby = null;\n        this._uniqueId = `mat-checkbox-${++nextUniqueId}`;\n        /** A unique id for the checkbox input. If none is supplied, it will be auto-generated. */\n        this.id = this._uniqueId;\n        /** Whether the label should appear after or before the checkbox. Defaults to 'after' */\n        this.labelPosition = 'after';\n        /** Name value will be applied to the input element if present */\n        this.name = null;\n        /** Event emitted when the checkbox's `checked` value changes. */\n        this.change = new EventEmitter();\n        /** Event emitted when the checkbox's `indeterminate` value changes. */\n        this.indeterminateChange = new EventEmitter();\n        /**\n         * Called when the checkbox is blurred. Needed to properly implement ControlValueAccessor.\n         * @docs-private\n         */\n        this._onTouched = () => { };\n        this._currentAnimationClass = '';\n        this._currentCheckState = 0 /* Init */;\n        this._controlValueAccessorChangeFn = () => { };\n        this._checked = false;\n        this._disabled = false;\n        this._indeterminate = false;\n        this._options = this._options || defaults;\n        this.color = this.defaultColor = this._options.color || defaults.color;\n        this.tabIndex = parseInt(tabIndex) || 0;\n    }\n    /** Returns the unique id for the visual hidden input. */\n    get inputId() { return `${this.id || this._uniqueId}-input`; }\n    /** Whether the checkbox is required. */\n    get required() { return this._required; }\n    set required(value) { this._required = coerceBooleanProperty(value); }\n    ngAfterViewInit() {\n        this._focusMonitor.monitor(this._elementRef, true).subscribe(focusOrigin => {\n            if (!focusOrigin) {\n                // When a focused element becomes disabled, the browser *immediately* fires a blur event.\n                // Angular does not expect events to be raised during change detection, so any state change\n                // (such as a form control's 'ng-touched') will cause a changed-after-checked error.\n                // See https://github.com/angular/angular/issues/17793. To work around this, we defer\n                // telling the form control it has been touched until the next tick.\n                Promise.resolve().then(() => {\n                    this._onTouched();\n                    this._changeDetectorRef.markForCheck();\n                });\n            }\n        });\n        this._syncIndeterminate(this._indeterminate);\n    }\n    // TODO: Delete next major revision.\n    ngAfterViewChecked() { }\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n    }\n    /**\n     * Whether the checkbox is checked.\n     */\n    get checked() { return this._checked; }\n    set checked(value) {\n        if (value != this.checked) {\n            this._checked = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Whether the checkbox is disabled. This fully overrides the implementation provided by\n     * mixinDisabled, but the mixin is still required because mixinTabIndex requires it.\n     */\n    get disabled() { return this._disabled; }\n    set disabled(value) {\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this.disabled) {\n            this._disabled = newValue;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Whether the checkbox is indeterminate. This is also known as \"mixed\" mode and can be used to\n     * represent a checkbox with three states, e.g. a checkbox that represents a nested list of\n     * checkable items. Note that whenever checkbox is manually clicked, indeterminate is immediately\n     * set to false.\n     */\n    get indeterminate() { return this._indeterminate; }\n    set indeterminate(value) {\n        const changed = value != this._indeterminate;\n        this._indeterminate = coerceBooleanProperty(value);\n        if (changed) {\n            if (this._indeterminate) {\n                this._transitionCheckState(3 /* Indeterminate */);\n            }\n            else {\n                this._transitionCheckState(this.checked ? 1 /* Checked */ : 2 /* Unchecked */);\n            }\n            this.indeterminateChange.emit(this._indeterminate);\n        }\n        this._syncIndeterminate(this._indeterminate);\n    }\n    _isRippleDisabled() {\n        return this.disableRipple || this.disabled;\n    }\n    /** Method being called whenever the label text changes. */\n    _onLabelTextChange() {\n        // Since the event of the `cdkObserveContent` directive runs outside of the zone, the checkbox\n        // component will be only marked for check, but no actual change detection runs automatically.\n        // Instead of going back into the zone in order to trigger a change detection which causes\n        // *all* components to be checked (if explicitly marked or not using OnPush), we only trigger\n        // an explicit change detection for the checkbox view and its children.\n        this._changeDetectorRef.detectChanges();\n    }\n    // Implemented as part of ControlValueAccessor.\n    writeValue(value) {\n        this.checked = !!value;\n    }\n    // Implemented as part of ControlValueAccessor.\n    registerOnChange(fn) {\n        this._controlValueAccessorChangeFn = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n    }\n    _getAriaChecked() {\n        if (this.checked) {\n            return 'true';\n        }\n        return this.indeterminate ? 'mixed' : 'false';\n    }\n    _transitionCheckState(newState) {\n        let oldState = this._currentCheckState;\n        let element = this._elementRef.nativeElement;\n        if (oldState === newState) {\n            return;\n        }\n        if (this._currentAnimationClass.length > 0) {\n            element.classList.remove(this._currentAnimationClass);\n        }\n        this._currentAnimationClass = this._getAnimationClassForCheckStateTransition(oldState, newState);\n        this._currentCheckState = newState;\n        if (this._currentAnimationClass.length > 0) {\n            element.classList.add(this._currentAnimationClass);\n            // Remove the animation class to avoid animation when the checkbox is moved between containers\n            const animationClass = this._currentAnimationClass;\n            this._ngZone.runOutsideAngular(() => {\n                setTimeout(() => {\n                    element.classList.remove(animationClass);\n                }, 1000);\n            });\n        }\n    }\n    _emitChangeEvent() {\n        const event = new MatCheckboxChange();\n        event.source = this;\n        event.checked = this.checked;\n        this._controlValueAccessorChangeFn(this.checked);\n        this.change.emit(event);\n        // Assigning the value again here is redundant, but we have to do it in case it was\n        // changed inside the `change` listener which will cause the input to be out of sync.\n        if (this._inputElement) {\n            this._inputElement.nativeElement.checked = this.checked;\n        }\n    }\n    /** Toggles the `checked` state of the checkbox. */\n    toggle() {\n        this.checked = !this.checked;\n    }\n    /**\n     * Event handler for checkbox input element.\n     * Toggles checked state if element is not disabled.\n     * Do not toggle on (change) event since IE doesn't fire change event when\n     *   indeterminate checkbox is clicked.\n     * @param event\n     */\n    _onInputClick(event) {\n        var _a;\n        const clickAction = (_a = this._options) === null || _a === void 0 ? void 0 : _a.clickAction;\n        // We have to stop propagation for click events on the visual hidden input element.\n        // By default, when a user clicks on a label element, a generated click event will be\n        // dispatched on the associated input element. Since we are using a label element as our\n        // root container, the click event on the `checkbox` will be executed twice.\n        // The real click event will bubble up, and the generated click event also tries to bubble up.\n        // This will lead to multiple click events.\n        // Preventing bubbling for the second event will solve that issue.\n        event.stopPropagation();\n        // If resetIndeterminate is false, and the current state is indeterminate, do nothing on click\n        if (!this.disabled && clickAction !== 'noop') {\n            // When user manually click on the checkbox, `indeterminate` is set to false.\n            if (this.indeterminate && clickAction !== 'check') {\n                Promise.resolve().then(() => {\n                    this._indeterminate = false;\n                    this.indeterminateChange.emit(this._indeterminate);\n                });\n            }\n            this.toggle();\n            this._transitionCheckState(this._checked ? 1 /* Checked */ : 2 /* Unchecked */);\n            // Emit our custom change event if the native input emitted one.\n            // It is important to only emit it, if the native input triggered one, because\n            // we don't want to trigger a change event, when the `checked` variable changes for example.\n            this._emitChangeEvent();\n        }\n        else if (!this.disabled && clickAction === 'noop') {\n            // Reset native input when clicked with noop. The native checkbox becomes checked after\n            // click, reset it to be align with `checked` value of `mat-checkbox`.\n            this._inputElement.nativeElement.checked = this.checked;\n            this._inputElement.nativeElement.indeterminate = this.indeterminate;\n        }\n    }\n    /** Focuses the checkbox. */\n    focus(origin, options) {\n        if (origin) {\n            this._focusMonitor.focusVia(this._inputElement, origin, options);\n        }\n        else {\n            this._inputElement.nativeElement.focus(options);\n        }\n    }\n    _onInteractionEvent(event) {\n        // We always have to stop propagation on the change event.\n        // Otherwise the change event, from the input element, will bubble up and\n        // emit its event object to the `change` output.\n        event.stopPropagation();\n    }\n    _getAnimationClassForCheckStateTransition(oldState, newState) {\n        // Don't transition if animations are disabled.\n        if (this._animationMode === 'NoopAnimations') {\n            return '';\n        }\n        let animSuffix = '';\n        switch (oldState) {\n            case 0 /* Init */:\n                // Handle edge case where user interacts with checkbox that does not have [(ngModel)] or\n                // [checked] bound to it.\n                if (newState === 1 /* Checked */) {\n                    animSuffix = 'unchecked-checked';\n                }\n                else if (newState == 3 /* Indeterminate */) {\n                    animSuffix = 'unchecked-indeterminate';\n                }\n                else {\n                    return '';\n                }\n                break;\n            case 2 /* Unchecked */:\n                animSuffix = newState === 1 /* Checked */ ?\n                    'unchecked-checked' : 'unchecked-indeterminate';\n                break;\n            case 1 /* Checked */:\n                animSuffix = newState === 2 /* Unchecked */ ?\n                    'checked-unchecked' : 'checked-indeterminate';\n                break;\n            case 3 /* Indeterminate */:\n                animSuffix = newState === 1 /* Checked */ ?\n                    'indeterminate-checked' : 'indeterminate-unchecked';\n                break;\n        }\n        return `mat-checkbox-anim-${animSuffix}`;\n    }\n    /**\n     * Syncs the indeterminate value with the checkbox DOM node.\n     *\n     * We sync `indeterminate` directly on the DOM node, because in Ivy the check for whether a\n     * property is supported on an element boils down to `if (propName in element)`. Domino's\n     * HTMLInputElement doesn't have an `indeterminate` property so Ivy will warn during\n     * server-side rendering.\n     */\n    _syncIndeterminate(value) {\n        const nativeCheckbox = this._inputElement;\n        if (nativeCheckbox) {\n            nativeCheckbox.nativeElement.indeterminate = value;\n        }\n    }\n}\nMatCheckbox.ɵfac = function MatCheckbox_Factory(t) { return new (t || MatCheckbox)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), ɵngcc0.ɵɵdirectiveInject(MAT_CHECKBOX_DEFAULT_OPTIONS, 8)); };\nMatCheckbox.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatCheckbox, selectors: [[\"mat-checkbox\"]], viewQuery: function MatCheckbox_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, 1);\n        ɵngcc0.ɵɵviewQuery(MatRipple, 1);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inputElement = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.ripple = _t.first);\n    } }, hostAttrs: [1, \"mat-checkbox\"], hostVars: 12, hostBindings: function MatCheckbox_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"id\", ctx.id);\n        ɵngcc0.ɵɵattribute(\"tabindex\", null);\n        ɵngcc0.ɵɵclassProp(\"mat-checkbox-indeterminate\", ctx.indeterminate)(\"mat-checkbox-checked\", ctx.checked)(\"mat-checkbox-disabled\", ctx.disabled)(\"mat-checkbox-label-before\", ctx.labelPosition == \"before\")(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    } }, inputs: { disableRipple: \"disableRipple\", color: \"color\", tabIndex: \"tabIndex\", ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], id: \"id\", labelPosition: \"labelPosition\", name: \"name\", required: \"required\", checked: \"checked\", disabled: \"disabled\", indeterminate: \"indeterminate\", ariaDescribedby: [\"aria-describedby\", \"ariaDescribedby\"], value: \"value\" }, outputs: { change: \"change\", indeterminateChange: \"indeterminateChange\" }, exportAs: [\"matCheckbox\"], features: [ɵngcc0.ɵɵProvidersFeature([MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c2, decls: 17, vars: 20, consts: [[1, \"mat-checkbox-layout\"], [\"label\", \"\"], [1, \"mat-checkbox-inner-container\"], [\"type\", \"checkbox\", 1, \"mat-checkbox-input\", \"cdk-visually-hidden\", 3, \"id\", \"required\", \"checked\", \"disabled\", \"tabIndex\", \"change\", \"click\"], [\"input\", \"\"], [\"matRipple\", \"\", 1, \"mat-checkbox-ripple\", \"mat-focus-indicator\", 3, \"matRippleTrigger\", \"matRippleDisabled\", \"matRippleRadius\", \"matRippleCentered\", \"matRippleAnimation\"], [1, \"mat-ripple-element\", \"mat-checkbox-persistent-ripple\"], [1, \"mat-checkbox-frame\"], [1, \"mat-checkbox-background\"], [\"version\", \"1.1\", \"focusable\", \"false\", \"viewBox\", \"0 0 24 24\", 0, \"xml\", \"space\", \"preserve\", 1, \"mat-checkbox-checkmark\"], [\"fill\", \"none\", \"stroke\", \"white\", \"d\", \"M4.1,12.7 9,17.6 20.3,6.3\", 1, \"mat-checkbox-checkmark-path\"], [1, \"mat-checkbox-mixedmark\"], [1, \"mat-checkbox-label\", 3, \"cdkObserveContent\"], [\"checkboxLabel\", \"\"], [2, \"display\", \"none\"]], template: function MatCheckbox_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"label\", 0, 1);\n        ɵngcc0.ɵɵelementStart(2, \"span\", 2);\n        ɵngcc0.ɵɵelementStart(3, \"input\", 3, 4);\n        ɵngcc0.ɵɵlistener(\"change\", function MatCheckbox_Template_input_change_3_listener($event) { return ctx._onInteractionEvent($event); })(\"click\", function MatCheckbox_Template_input_click_3_listener($event) { return ctx._onInputClick($event); });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(5, \"span\", 5);\n        ɵngcc0.ɵɵelement(6, \"span\", 6);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(7, \"span\", 7);\n        ɵngcc0.ɵɵelementStart(8, \"span\", 8);\n        ɵngcc0.ɵɵnamespaceSVG();\n        ɵngcc0.ɵɵelementStart(9, \"svg\", 9);\n        ɵngcc0.ɵɵelement(10, \"path\", 10);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵnamespaceHTML();\n        ɵngcc0.ɵɵelement(11, \"span\", 11);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(12, \"span\", 12, 13);\n        ɵngcc0.ɵɵlistener(\"cdkObserveContent\", function MatCheckbox_Template_span_cdkObserveContent_12_listener() { return ctx._onLabelTextChange(); });\n        ɵngcc0.ɵɵelementStart(14, \"span\", 14);\n        ɵngcc0.ɵɵtext(15, \"\\u00A0\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(16);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        const _r0 = ɵngcc0.ɵɵreference(1);\n        const _r2 = ɵngcc0.ɵɵreference(13);\n        ɵngcc0.ɵɵattribute(\"for\", ctx.inputId);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵclassProp(\"mat-checkbox-inner-container-no-side-margin\", !_r2.textContent || !_r2.textContent.trim());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"id\", ctx.inputId)(\"required\", ctx.required)(\"checked\", ctx.checked)(\"disabled\", ctx.disabled)(\"tabIndex\", ctx.tabIndex);\n        ɵngcc0.ɵɵattribute(\"value\", ctx.value)(\"name\", ctx.name)(\"aria-label\", ctx.ariaLabel || null)(\"aria-labelledby\", ctx.ariaLabelledby)(\"aria-checked\", ctx._getAriaChecked())(\"aria-describedby\", ctx.ariaDescribedby);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"matRippleTrigger\", _r0)(\"matRippleDisabled\", ctx._isRippleDisabled())(\"matRippleRadius\", 20)(\"matRippleCentered\", true)(\"matRippleAnimation\", ɵngcc0.ɵɵpureFunction0(19, _c1));\n    } }, directives: [ɵngcc2.MatRipple, ɵngcc3.CdkObserveContent], styles: [\"@keyframes mat-checkbox-fade-in-background{0%{opacity:0}50%{opacity:1}}@keyframes mat-checkbox-fade-out-background{0%,50%{opacity:1}100%{opacity:0}}@keyframes mat-checkbox-unchecked-checked-checkmark-path{0%,50%{stroke-dashoffset:22.910259}50%{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1)}100%{stroke-dashoffset:0}}@keyframes mat-checkbox-unchecked-indeterminate-mixedmark{0%,68.2%{transform:scaleX(0)}68.2%{animation-timing-function:cubic-bezier(0, 0, 0, 1)}100%{transform:scaleX(1)}}@keyframes mat-checkbox-checked-unchecked-checkmark-path{from{animation-timing-function:cubic-bezier(0.4, 0, 1, 1);stroke-dashoffset:0}to{stroke-dashoffset:-22.910259}}@keyframes mat-checkbox-checked-indeterminate-checkmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1);opacity:1;transform:rotate(0deg)}to{opacity:0;transform:rotate(45deg)}}@keyframes mat-checkbox-indeterminate-checked-checkmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);opacity:0;transform:rotate(45deg)}to{opacity:1;transform:rotate(360deg)}}@keyframes mat-checkbox-checked-indeterminate-mixedmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1);opacity:0;transform:rotate(-45deg)}to{opacity:1;transform:rotate(0deg)}}@keyframes mat-checkbox-indeterminate-checked-mixedmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);opacity:1;transform:rotate(0deg)}to{opacity:0;transform:rotate(315deg)}}@keyframes mat-checkbox-indeterminate-unchecked-mixedmark{0%{animation-timing-function:linear;opacity:1;transform:scaleX(1)}32.8%,100%{opacity:0;transform:scaleX(0)}}.mat-checkbox-background,.mat-checkbox-frame{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:2px;box-sizing:border-box;pointer-events:none}.mat-checkbox{display:inline-block;transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);cursor:pointer;-webkit-tap-highlight-color:transparent}._mat-animation-noopable.mat-checkbox{transition:none;animation:none}.mat-checkbox .mat-ripple-element:not(.mat-checkbox-persistent-ripple){opacity:.16}.mat-checkbox-layout{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:inherit;align-items:baseline;vertical-align:middle;display:inline-flex;white-space:nowrap}.mat-checkbox-label{-webkit-user-select:auto;-moz-user-select:auto;-ms-user-select:auto;user-select:auto}.mat-checkbox-inner-container{display:inline-block;height:16px;line-height:0;margin:auto;margin-right:8px;order:0;position:relative;vertical-align:middle;white-space:nowrap;width:16px;flex-shrink:0}[dir=rtl] .mat-checkbox-inner-container{margin-left:8px;margin-right:auto}.mat-checkbox-inner-container-no-side-margin{margin-left:0;margin-right:0}.mat-checkbox-frame{background-color:transparent;transition:border-color 90ms cubic-bezier(0, 0, 0.2, 0.1);border-width:2px;border-style:solid}._mat-animation-noopable .mat-checkbox-frame{transition:none}.cdk-high-contrast-active .mat-checkbox.cdk-keyboard-focused .mat-checkbox-frame{border-style:dotted}.mat-checkbox-background{align-items:center;display:inline-flex;justify-content:center;transition:background-color 90ms cubic-bezier(0, 0, 0.2, 0.1),opacity 90ms cubic-bezier(0, 0, 0.2, 0.1);-webkit-print-color-adjust:exact;color-adjust:exact}._mat-animation-noopable .mat-checkbox-background{transition:none}.cdk-high-contrast-active .mat-checkbox .mat-checkbox-background{background:none}.mat-checkbox-persistent-ripple{display:block;width:100%;height:100%;transform:none}.mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{opacity:.04}.mat-checkbox.cdk-keyboard-focused .mat-checkbox-persistent-ripple{opacity:.12}.mat-checkbox-persistent-ripple,.mat-checkbox.mat-checkbox-disabled .mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{opacity:0}@media(hover: none){.mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{display:none}}.mat-checkbox-checkmark{top:0;left:0;right:0;bottom:0;position:absolute;width:100%}.mat-checkbox-checkmark-path{stroke-dashoffset:22.910259;stroke-dasharray:22.910259;stroke-width:2.1333333333px}.cdk-high-contrast-black-on-white .mat-checkbox-checkmark-path{stroke:#000 !important}.mat-checkbox-mixedmark{width:calc(100% - 6px);height:2px;opacity:0;transform:scaleX(0) rotate(0deg);border-radius:2px}.cdk-high-contrast-active .mat-checkbox-mixedmark{height:0;border-top:solid 2px;margin-top:2px}.mat-checkbox-label-before .mat-checkbox-inner-container{order:1;margin-left:8px;margin-right:auto}[dir=rtl] .mat-checkbox-label-before .mat-checkbox-inner-container{margin-left:auto;margin-right:8px}.mat-checkbox-checked .mat-checkbox-checkmark{opacity:1}.mat-checkbox-checked .mat-checkbox-checkmark-path{stroke-dashoffset:0}.mat-checkbox-checked .mat-checkbox-mixedmark{transform:scaleX(1) rotate(-45deg)}.mat-checkbox-indeterminate .mat-checkbox-checkmark{opacity:0;transform:rotate(45deg)}.mat-checkbox-indeterminate .mat-checkbox-checkmark-path{stroke-dashoffset:0}.mat-checkbox-indeterminate .mat-checkbox-mixedmark{opacity:1;transform:scaleX(1) rotate(0deg)}.mat-checkbox-unchecked .mat-checkbox-background{background-color:transparent}.mat-checkbox-disabled{cursor:default}.cdk-high-contrast-active .mat-checkbox-disabled{opacity:.5}.mat-checkbox-anim-unchecked-checked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-in-background}.mat-checkbox-anim-unchecked-checked .mat-checkbox-checkmark-path{animation:180ms linear 0ms mat-checkbox-unchecked-checked-checkmark-path}.mat-checkbox-anim-unchecked-indeterminate .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-in-background}.mat-checkbox-anim-unchecked-indeterminate .mat-checkbox-mixedmark{animation:90ms linear 0ms mat-checkbox-unchecked-indeterminate-mixedmark}.mat-checkbox-anim-checked-unchecked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-out-background}.mat-checkbox-anim-checked-unchecked .mat-checkbox-checkmark-path{animation:90ms linear 0ms mat-checkbox-checked-unchecked-checkmark-path}.mat-checkbox-anim-checked-indeterminate .mat-checkbox-checkmark{animation:90ms linear 0ms mat-checkbox-checked-indeterminate-checkmark}.mat-checkbox-anim-checked-indeterminate .mat-checkbox-mixedmark{animation:90ms linear 0ms mat-checkbox-checked-indeterminate-mixedmark}.mat-checkbox-anim-indeterminate-checked .mat-checkbox-checkmark{animation:500ms linear 0ms mat-checkbox-indeterminate-checked-checkmark}.mat-checkbox-anim-indeterminate-checked .mat-checkbox-mixedmark{animation:500ms linear 0ms mat-checkbox-indeterminate-checked-mixedmark}.mat-checkbox-anim-indeterminate-unchecked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-out-background}.mat-checkbox-anim-indeterminate-unchecked .mat-checkbox-mixedmark{animation:300ms linear 0ms mat-checkbox-indeterminate-unchecked-mixedmark}.mat-checkbox-input{bottom:0;left:50%}.mat-checkbox .mat-checkbox-ripple{position:absolute;left:calc(50% - 20px);top:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatCheckbox.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: FocusMonitor },\n    { type: NgZone },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_CHECKBOX_DEFAULT_OPTIONS,] }] }\n];\nMatCheckbox.propDecorators = {\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }],\n    ariaDescribedby: [{ type: Input, args: ['aria-describedby',] }],\n    id: [{ type: Input }],\n    required: [{ type: Input }],\n    labelPosition: [{ type: Input }],\n    name: [{ type: Input }],\n    change: [{ type: Output }],\n    indeterminateChange: [{ type: Output }],\n    value: [{ type: Input }],\n    _inputElement: [{ type: ViewChild, args: ['input',] }],\n    ripple: [{ type: ViewChild, args: [MatRipple,] }],\n    checked: [{ type: Input }],\n    disabled: [{ type: Input }],\n    indeterminate: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCheckbox, [{\n        type: Component,\n        args: [{\n                selector: 'mat-checkbox',\n                template: \"<label [attr.for]=\\\"inputId\\\" class=\\\"mat-checkbox-layout\\\" #label>\\n  <span class=\\\"mat-checkbox-inner-container\\\"\\n       [class.mat-checkbox-inner-container-no-side-margin]=\\\"!checkboxLabel.textContent || !checkboxLabel.textContent.trim()\\\">\\n    <input #input\\n           class=\\\"mat-checkbox-input cdk-visually-hidden\\\" type=\\\"checkbox\\\"\\n           [id]=\\\"inputId\\\"\\n           [required]=\\\"required\\\"\\n           [checked]=\\\"checked\\\"\\n           [attr.value]=\\\"value\\\"\\n           [disabled]=\\\"disabled\\\"\\n           [attr.name]=\\\"name\\\"\\n           [tabIndex]=\\\"tabIndex\\\"\\n           [attr.aria-label]=\\\"ariaLabel || null\\\"\\n           [attr.aria-labelledby]=\\\"ariaLabelledby\\\"\\n           [attr.aria-checked]=\\\"_getAriaChecked()\\\"\\n           [attr.aria-describedby]=\\\"ariaDescribedby\\\"\\n           (change)=\\\"_onInteractionEvent($event)\\\"\\n           (click)=\\\"_onInputClick($event)\\\">\\n    <span matRipple class=\\\"mat-checkbox-ripple mat-focus-indicator\\\"\\n         [matRippleTrigger]=\\\"label\\\"\\n         [matRippleDisabled]=\\\"_isRippleDisabled()\\\"\\n         [matRippleRadius]=\\\"20\\\"\\n         [matRippleCentered]=\\\"true\\\"\\n         [matRippleAnimation]=\\\"{enterDuration: 150}\\\">\\n      <span class=\\\"mat-ripple-element mat-checkbox-persistent-ripple\\\"></span>\\n    </span>\\n    <span class=\\\"mat-checkbox-frame\\\"></span>\\n    <span class=\\\"mat-checkbox-background\\\">\\n      <svg version=\\\"1.1\\\"\\n           focusable=\\\"false\\\"\\n           class=\\\"mat-checkbox-checkmark\\\"\\n           viewBox=\\\"0 0 24 24\\\"\\n           xml:space=\\\"preserve\\\">\\n        <path class=\\\"mat-checkbox-checkmark-path\\\"\\n              fill=\\\"none\\\"\\n              stroke=\\\"white\\\"\\n              d=\\\"M4.1,12.7 9,17.6 20.3,6.3\\\"/>\\n      </svg>\\n      <!-- Element for rendering the indeterminate state checkbox. -->\\n      <span class=\\\"mat-checkbox-mixedmark\\\"></span>\\n    </span>\\n  </span>\\n  <span class=\\\"mat-checkbox-label\\\" #checkboxLabel (cdkObserveContent)=\\\"_onLabelTextChange()\\\">\\n    <!-- Add an invisible span so JAWS can read the label -->\\n    <span style=\\\"display:none\\\">&nbsp;</span>\\n    <ng-content></ng-content>\\n  </span>\\n</label>\\n\",\n                exportAs: 'matCheckbox',\n                host: {\n                    'class': 'mat-checkbox',\n                    '[id]': 'id',\n                    '[attr.tabindex]': 'null',\n                    '[class.mat-checkbox-indeterminate]': 'indeterminate',\n                    '[class.mat-checkbox-checked]': 'checked',\n                    '[class.mat-checkbox-disabled]': 'disabled',\n                    '[class.mat-checkbox-label-before]': 'labelPosition == \"before\"',\n                    '[class._mat-animation-noopable]': `_animationMode === 'NoopAnimations'`\n                },\n                providers: [MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR],\n                inputs: ['disableRipple', 'color', 'tabIndex'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\"@keyframes mat-checkbox-fade-in-background{0%{opacity:0}50%{opacity:1}}@keyframes mat-checkbox-fade-out-background{0%,50%{opacity:1}100%{opacity:0}}@keyframes mat-checkbox-unchecked-checked-checkmark-path{0%,50%{stroke-dashoffset:22.910259}50%{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1)}100%{stroke-dashoffset:0}}@keyframes mat-checkbox-unchecked-indeterminate-mixedmark{0%,68.2%{transform:scaleX(0)}68.2%{animation-timing-function:cubic-bezier(0, 0, 0, 1)}100%{transform:scaleX(1)}}@keyframes mat-checkbox-checked-unchecked-checkmark-path{from{animation-timing-function:cubic-bezier(0.4, 0, 1, 1);stroke-dashoffset:0}to{stroke-dashoffset:-22.910259}}@keyframes mat-checkbox-checked-indeterminate-checkmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1);opacity:1;transform:rotate(0deg)}to{opacity:0;transform:rotate(45deg)}}@keyframes mat-checkbox-indeterminate-checked-checkmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);opacity:0;transform:rotate(45deg)}to{opacity:1;transform:rotate(360deg)}}@keyframes mat-checkbox-checked-indeterminate-mixedmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1);opacity:0;transform:rotate(-45deg)}to{opacity:1;transform:rotate(0deg)}}@keyframes mat-checkbox-indeterminate-checked-mixedmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);opacity:1;transform:rotate(0deg)}to{opacity:0;transform:rotate(315deg)}}@keyframes mat-checkbox-indeterminate-unchecked-mixedmark{0%{animation-timing-function:linear;opacity:1;transform:scaleX(1)}32.8%,100%{opacity:0;transform:scaleX(0)}}.mat-checkbox-background,.mat-checkbox-frame{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:2px;box-sizing:border-box;pointer-events:none}.mat-checkbox{display:inline-block;transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);cursor:pointer;-webkit-tap-highlight-color:transparent}._mat-animation-noopable.mat-checkbox{transition:none;animation:none}.mat-checkbox .mat-ripple-element:not(.mat-checkbox-persistent-ripple){opacity:.16}.mat-checkbox-layout{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:inherit;align-items:baseline;vertical-align:middle;display:inline-flex;white-space:nowrap}.mat-checkbox-label{-webkit-user-select:auto;-moz-user-select:auto;-ms-user-select:auto;user-select:auto}.mat-checkbox-inner-container{display:inline-block;height:16px;line-height:0;margin:auto;margin-right:8px;order:0;position:relative;vertical-align:middle;white-space:nowrap;width:16px;flex-shrink:0}[dir=rtl] .mat-checkbox-inner-container{margin-left:8px;margin-right:auto}.mat-checkbox-inner-container-no-side-margin{margin-left:0;margin-right:0}.mat-checkbox-frame{background-color:transparent;transition:border-color 90ms cubic-bezier(0, 0, 0.2, 0.1);border-width:2px;border-style:solid}._mat-animation-noopable .mat-checkbox-frame{transition:none}.cdk-high-contrast-active .mat-checkbox.cdk-keyboard-focused .mat-checkbox-frame{border-style:dotted}.mat-checkbox-background{align-items:center;display:inline-flex;justify-content:center;transition:background-color 90ms cubic-bezier(0, 0, 0.2, 0.1),opacity 90ms cubic-bezier(0, 0, 0.2, 0.1);-webkit-print-color-adjust:exact;color-adjust:exact}._mat-animation-noopable .mat-checkbox-background{transition:none}.cdk-high-contrast-active .mat-checkbox .mat-checkbox-background{background:none}.mat-checkbox-persistent-ripple{display:block;width:100%;height:100%;transform:none}.mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{opacity:.04}.mat-checkbox.cdk-keyboard-focused .mat-checkbox-persistent-ripple{opacity:.12}.mat-checkbox-persistent-ripple,.mat-checkbox.mat-checkbox-disabled .mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{opacity:0}@media(hover: none){.mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{display:none}}.mat-checkbox-checkmark{top:0;left:0;right:0;bottom:0;position:absolute;width:100%}.mat-checkbox-checkmark-path{stroke-dashoffset:22.910259;stroke-dasharray:22.910259;stroke-width:2.1333333333px}.cdk-high-contrast-black-on-white .mat-checkbox-checkmark-path{stroke:#000 !important}.mat-checkbox-mixedmark{width:calc(100% - 6px);height:2px;opacity:0;transform:scaleX(0) rotate(0deg);border-radius:2px}.cdk-high-contrast-active .mat-checkbox-mixedmark{height:0;border-top:solid 2px;margin-top:2px}.mat-checkbox-label-before .mat-checkbox-inner-container{order:1;margin-left:8px;margin-right:auto}[dir=rtl] .mat-checkbox-label-before .mat-checkbox-inner-container{margin-left:auto;margin-right:8px}.mat-checkbox-checked .mat-checkbox-checkmark{opacity:1}.mat-checkbox-checked .mat-checkbox-checkmark-path{stroke-dashoffset:0}.mat-checkbox-checked .mat-checkbox-mixedmark{transform:scaleX(1) rotate(-45deg)}.mat-checkbox-indeterminate .mat-checkbox-checkmark{opacity:0;transform:rotate(45deg)}.mat-checkbox-indeterminate .mat-checkbox-checkmark-path{stroke-dashoffset:0}.mat-checkbox-indeterminate .mat-checkbox-mixedmark{opacity:1;transform:scaleX(1) rotate(0deg)}.mat-checkbox-unchecked .mat-checkbox-background{background-color:transparent}.mat-checkbox-disabled{cursor:default}.cdk-high-contrast-active .mat-checkbox-disabled{opacity:.5}.mat-checkbox-anim-unchecked-checked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-in-background}.mat-checkbox-anim-unchecked-checked .mat-checkbox-checkmark-path{animation:180ms linear 0ms mat-checkbox-unchecked-checked-checkmark-path}.mat-checkbox-anim-unchecked-indeterminate .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-in-background}.mat-checkbox-anim-unchecked-indeterminate .mat-checkbox-mixedmark{animation:90ms linear 0ms mat-checkbox-unchecked-indeterminate-mixedmark}.mat-checkbox-anim-checked-unchecked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-out-background}.mat-checkbox-anim-checked-unchecked .mat-checkbox-checkmark-path{animation:90ms linear 0ms mat-checkbox-checked-unchecked-checkmark-path}.mat-checkbox-anim-checked-indeterminate .mat-checkbox-checkmark{animation:90ms linear 0ms mat-checkbox-checked-indeterminate-checkmark}.mat-checkbox-anim-checked-indeterminate .mat-checkbox-mixedmark{animation:90ms linear 0ms mat-checkbox-checked-indeterminate-mixedmark}.mat-checkbox-anim-indeterminate-checked .mat-checkbox-checkmark{animation:500ms linear 0ms mat-checkbox-indeterminate-checked-checkmark}.mat-checkbox-anim-indeterminate-checked .mat-checkbox-mixedmark{animation:500ms linear 0ms mat-checkbox-indeterminate-checked-mixedmark}.mat-checkbox-anim-indeterminate-unchecked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-out-background}.mat-checkbox-anim-indeterminate-unchecked .mat-checkbox-mixedmark{animation:300ms linear 0ms mat-checkbox-indeterminate-unchecked-mixedmark}.mat-checkbox-input{bottom:0;left:50%}.mat-checkbox .mat-checkbox-ripple{position:absolute;left:calc(50% - 20px);top:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc1.FocusMonitor }, { type: ɵngcc0.NgZone }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_CHECKBOX_DEFAULT_OPTIONS]\n            }] }]; }, { ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], ariaLabelledby: [{\n            type: Input,\n            args: ['aria-labelledby']\n        }], id: [{\n            type: Input\n        }], labelPosition: [{\n            type: Input\n        }], name: [{\n            type: Input\n        }], change: [{\n            type: Output\n        }], indeterminateChange: [{\n            type: Output\n        }], required: [{\n            type: Input\n        }], checked: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], indeterminate: [{\n            type: Input\n        }], ariaDescribedby: [{\n            type: Input,\n            args: ['aria-describedby']\n        }], value: [{\n            type: Input\n        }], _inputElement: [{\n            type: ViewChild,\n            args: ['input']\n        }], ripple: [{\n            type: ViewChild,\n            args: [MatRipple]\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst MAT_CHECKBOX_REQUIRED_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => MatCheckboxRequiredValidator),\n    multi: true\n};\n/**\n * Validator for Material checkbox's required attribute in template-driven checkbox.\n * Current CheckboxRequiredValidator only work with `input type=checkbox` and does not\n * work with `mat-checkbox`.\n */\nclass MatCheckboxRequiredValidator extends CheckboxRequiredValidator {\n}\nMatCheckboxRequiredValidator.ɵfac = function MatCheckboxRequiredValidator_Factory(t) { return ɵMatCheckboxRequiredValidator_BaseFactory(t || MatCheckboxRequiredValidator); };\nMatCheckboxRequiredValidator.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCheckboxRequiredValidator, selectors: [[\"mat-checkbox\", \"required\", \"\", \"formControlName\", \"\"], [\"mat-checkbox\", \"required\", \"\", \"formControl\", \"\"], [\"mat-checkbox\", \"required\", \"\", \"ngModel\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([MAT_CHECKBOX_REQUIRED_VALIDATOR]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatCheckboxRequiredValidator_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(MatCheckboxRequiredValidator);\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCheckboxRequiredValidator, [{\n        type: Directive,\n        args: [{\n                selector: `mat-checkbox[required][formControlName],\n             mat-checkbox[required][formControl], mat-checkbox[required][ngModel]`,\n                providers: [MAT_CHECKBOX_REQUIRED_VALIDATOR]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** This module is used by both original and MDC-based checkbox implementations. */\nclass _MatCheckboxRequiredValidatorModule {\n}\n_MatCheckboxRequiredValidatorModule.ɵfac = function _MatCheckboxRequiredValidatorModule_Factory(t) { return new (t || _MatCheckboxRequiredValidatorModule)(); };\n_MatCheckboxRequiredValidatorModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: _MatCheckboxRequiredValidatorModule });\n_MatCheckboxRequiredValidatorModule.ɵinj = ɵngcc0.ɵɵdefineInjector({});\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(_MatCheckboxRequiredValidatorModule, { declarations: [MatCheckboxRequiredValidator], exports: [MatCheckboxRequiredValidator] }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(_MatCheckboxRequiredValidatorModule, [{\n        type: NgModule,\n        args: [{\n                exports: [MatCheckboxRequiredValidator],\n                declarations: [MatCheckboxRequiredValidator]\n            }]\n    }], null, null); })();\nclass MatCheckboxModule {\n}\nMatCheckboxModule.ɵfac = function MatCheckboxModule_Factory(t) { return new (t || MatCheckboxModule)(); };\nMatCheckboxModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatCheckboxModule });\nMatCheckboxModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ imports: [[\n            MatRippleModule, MatCommonModule, ObserversModule,\n            _MatCheckboxRequiredValidatorModule\n        ], MatCommonModule, _MatCheckboxRequiredValidatorModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatCheckboxModule, { declarations: function () { return [MatCheckbox]; }, imports: function () { return [MatRippleModule, MatCommonModule, ObserversModule, _MatCheckboxRequiredValidatorModule]; }, exports: function () { return [MatCheckbox, MatCommonModule, _MatCheckboxRequiredValidatorModule]; } }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCheckboxModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    MatRippleModule, MatCommonModule, ObserversModule,\n                    _MatCheckboxRequiredValidatorModule\n                ],\n                exports: [MatCheckbox, MatCommonModule, _MatCheckboxRequiredValidatorModule],\n                declarations: [MatCheckbox]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR, MAT_CHECKBOX_DEFAULT_OPTIONS, MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY, MAT_CHECKBOX_REQUIRED_VALIDATOR, MatCheckbox, MatCheckboxChange, MatCheckboxModule, MatCheckboxRequiredValidator, _MatCheckboxRequiredValidatorModule };\n\n//# sourceMappingURL=checkbox.js.map","import { Overlay, CdkConnectedOverlay, OverlayModule } from '@angular/cdk/overlay';\nimport { CommonModule } from '@angular/common';\nimport { InjectionToken, Directive, EventEmitter, ChangeDetectorRef, NgZone, ElementRef, Optional, Inject, Self, Attribute, ViewChild, Input, Output, Component, ViewEncapsulation, ChangeDetectionStrategy, ContentChildren, ContentChild, NgModule } from '@angular/core';\nimport { mixinDisableRipple, mixinTabIndex, mixinDisabled, mixinErrorState, ErrorStateMatcher, _countGroupLabelsBeforeOption, _getOptionScrollPosition, MAT_OPTION_PARENT_COMPONENT, MatOption, MAT_OPTGROUP, MatOptionModule, MatCommonModule } from '@angular/material/core';\nimport { MatFormField, MAT_FORM_FIELD, MatFormFieldControl, MatFormFieldModule } from '@angular/material/form-field';\nimport { ViewportRuler, CdkScrollableModule } from '@angular/cdk/scrolling';\nimport { ActiveDescendantKeyManager, LiveAnnouncer } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { DOWN_ARROW, UP_ARROW, LEFT_ARROW, RIGHT_ARROW, ENTER, SPACE, hasModifierKey, A } from '@angular/cdk/keycodes';\nimport { NgForm, FormGroupDirective, NgControl } from '@angular/forms';\nimport { Subject, defer, merge } from 'rxjs';\nimport { startWith, switchMap, take, filter, map, distinctUntilChanged, takeUntil } from 'rxjs/operators';\nimport { trigger, transition, query, animateChild, state, style, animate } from '@angular/animations';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The following are all the animations for the mat-select component, with each\n * const containing the metadata for one animation.\n *\n * The values below match the implementation of the AngularJS Material mat-select animation.\n * @docs-private\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/scrolling';\nimport * as ɵngcc2 from '@angular/material/core';\nimport * as ɵngcc3 from '@angular/cdk/bidi';\nimport * as ɵngcc4 from '@angular/forms';\nimport * as ɵngcc5 from '@angular/cdk/a11y';\nimport * as ɵngcc6 from '@angular/material/form-field';\nimport * as ɵngcc7 from '@angular/cdk/overlay';\nimport * as ɵngcc8 from '@angular/common';\n\nconst _c0 = [\"trigger\"];\nconst _c1 = [\"panel\"];\nfunction MatSelect_span_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 8);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r2.placeholder);\n} }\nfunction MatSelect_span_5_span_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 12);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r5 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r5.triggerValue);\n} }\nfunction MatSelect_span_5_ng_content_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵprojection(0, 0, [\"*ngSwitchCase\", \"true\"]);\n} }\nfunction MatSelect_span_5_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 9);\n    ɵngcc0.ɵɵtemplate(1, MatSelect_span_5_span_1_Template, 2, 1, \"span\", 10);\n    ɵngcc0.ɵɵtemplate(2, MatSelect_span_5_ng_content_2_Template, 1, 0, \"ng-content\", 11);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngSwitch\", !!ctx_r3.customTrigger);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n} }\nfunction MatSelect_ng_template_8_Template(rf, ctx) { if (rf & 1) {\n    const _r9 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 13);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 14, 15);\n    ɵngcc0.ɵɵlistener(\"@transformPanel.done\", function MatSelect_ng_template_8_Template_div_animation_transformPanel_done_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r9); const ctx_r8 = ɵngcc0.ɵɵnextContext(); return ctx_r8._panelDoneAnimatingStream.next($event.toState); })(\"keydown\", function MatSelect_ng_template_8_Template_div_keydown_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r9); const ctx_r10 = ɵngcc0.ɵɵnextContext(); return ctx_r10._handleKeydown($event); });\n    ɵngcc0.ɵɵprojection(3, 1);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r4 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@transformPanelWrap\", undefined);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassMapInterpolate1(\"mat-select-panel \", ctx_r4._getPanelTheme(), \"\");\n    ɵngcc0.ɵɵstyleProp(\"transform-origin\", ctx_r4._transformOrigin)(\"font-size\", ctx_r4._triggerFontSize, \"px\");\n    ɵngcc0.ɵɵproperty(\"ngClass\", ctx_r4.panelClass)(\"@transformPanel\", ctx_r4.multiple ? \"showing-multiple\" : \"showing\");\n    ɵngcc0.ɵɵattribute(\"id\", ctx_r4.id + \"-panel\")(\"aria-multiselectable\", ctx_r4.multiple)(\"aria-label\", ctx_r4.ariaLabel || null)(\"aria-labelledby\", ctx_r4._getPanelAriaLabelledby());\n} }\nconst _c2 = [[[\"mat-select-trigger\"]], \"*\"];\nconst _c3 = [\"mat-select-trigger\", \"*\"];\nconst matSelectAnimations = {\n    /**\n     * This animation ensures the select's overlay panel animation (transformPanel) is called when\n     * closing the select.\n     * This is needed due to https://github.com/angular/angular/issues/23302\n     */\n    transformPanelWrap: trigger('transformPanelWrap', [\n        transition('* => void', query('@transformPanel', [animateChild()], { optional: true }))\n    ]),\n    /**\n     * This animation transforms the select's overlay panel on and off the page.\n     *\n     * When the panel is attached to the DOM, it expands its width by the amount of padding, scales it\n     * up to 100% on the Y axis, fades in its border, and translates slightly up and to the\n     * side to ensure the option text correctly overlaps the trigger text.\n     *\n     * When the panel is removed from the DOM, it simply fades out linearly.\n     */\n    transformPanel: trigger('transformPanel', [\n        state('void', style({\n            transform: 'scaleY(0.8)',\n            minWidth: '100%',\n            opacity: 0\n        })),\n        state('showing', style({\n            opacity: 1,\n            minWidth: 'calc(100% + 32px)',\n            transform: 'scaleY(1)'\n        })),\n        state('showing-multiple', style({\n            opacity: 1,\n            minWidth: 'calc(100% + 64px)',\n            transform: 'scaleY(1)'\n        })),\n        transition('void => *', animate('120ms cubic-bezier(0, 0, 0.2, 1)')),\n        transition('* => void', animate('100ms 25ms linear', style({ opacity: 0 })))\n    ])\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Returns an exception to be thrown when attempting to change a select's `multiple` option\n * after initialization.\n * @docs-private\n */\nfunction getMatSelectDynamicMultipleError() {\n    return Error('Cannot change `multiple` mode of select after initialization.');\n}\n/**\n * Returns an exception to be thrown when attempting to assign a non-array value to a select\n * in `multiple` mode. Note that `undefined` and `null` are still valid values to allow for\n * resetting the value.\n * @docs-private\n */\nfunction getMatSelectNonArrayValueError() {\n    return Error('Value must be an array in multiple-selection mode.');\n}\n/**\n * Returns an exception to be thrown when assigning a non-function value to the comparator\n * used to determine if a value corresponds to an option. Note that whether the function\n * actually takes two values and returns a boolean is not checked.\n */\nfunction getMatSelectNonFunctionValueError() {\n    return Error('`compareWith` must be a function.');\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nlet nextUniqueId = 0;\n/**\n * The following style constants are necessary to save here in order\n * to properly calculate the alignment of the selected option over\n * the trigger element.\n */\n/**\n * The max height of the select's overlay panel.\n * @deprecated To be turned into a private variable.\n * @breaking-change 12.0.0\n */\nconst SELECT_PANEL_MAX_HEIGHT = 256;\n/**\n * The panel's padding on the x-axis.\n * @deprecated To be turned into a private variable.\n * @breaking-change 12.0.0\n */\nconst SELECT_PANEL_PADDING_X = 16;\n/**\n * The panel's x axis padding if it is indented (e.g. there is an option group).\n * @deprecated To be turned into a private variable.\n * @breaking-change 12.0.0\n */\nconst SELECT_PANEL_INDENT_PADDING_X = SELECT_PANEL_PADDING_X * 2;\n/**\n * The height of the select items in `em` units.\n * @deprecated To be turned into a private variable.\n * @breaking-change 12.0.0\n */\nconst SELECT_ITEM_HEIGHT_EM = 3;\n// TODO(josephperrott): Revert to a constant after 2018 spec updates are fully merged.\n/**\n * Distance between the panel edge and the option text in\n * multi-selection mode.\n *\n * Calculated as:\n * (SELECT_PANEL_PADDING_X * 1.5) + 16 = 40\n * The padding is multiplied by 1.5 because the checkbox's margin is half the padding.\n * The checkbox width is 16px.\n *\n * @deprecated To be turned into a private variable.\n * @breaking-change 12.0.0\n */\nconst SELECT_MULTIPLE_PANEL_PADDING_X = SELECT_PANEL_PADDING_X * 1.5 + 16;\n/**\n * The select panel will only \"fit\" inside the viewport if it is positioned at\n * this value or more away from the viewport boundary.\n *\n * @deprecated To be turned into a private variable.\n * @breaking-change 12.0.0\n */\nconst SELECT_PANEL_VIEWPORT_PADDING = 8;\n/** Injection token that determines the scroll handling while a select is open. */\nconst MAT_SELECT_SCROLL_STRATEGY = new InjectionToken('mat-select-scroll-strategy');\n/** @docs-private */\nfunction MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay) {\n    return () => overlay.scrollStrategies.reposition();\n}\n/** Injection token that can be used to provide the default options the select module. */\nconst MAT_SELECT_CONFIG = new InjectionToken('MAT_SELECT_CONFIG');\n/** @docs-private */\nconst MAT_SELECT_SCROLL_STRATEGY_PROVIDER = {\n    provide: MAT_SELECT_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY,\n};\n/** Change event object that is emitted when the select value has changed. */\nclass MatSelectChange {\n    constructor(\n    /** Reference to the select that emitted the change event. */\n    source, \n    /** Current value of the select that emitted the event. */\n    value) {\n        this.source = source;\n        this.value = value;\n    }\n}\n// Boilerplate for applying mixins to MatSelect.\n/** @docs-private */\nclass MatSelectBase {\n    constructor(_elementRef, _defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl) {\n        this._elementRef = _elementRef;\n        this._defaultErrorStateMatcher = _defaultErrorStateMatcher;\n        this._parentForm = _parentForm;\n        this._parentFormGroup = _parentFormGroup;\n        this.ngControl = ngControl;\n    }\n}\nconst _MatSelectMixinBase = mixinDisableRipple(mixinTabIndex(mixinDisabled(mixinErrorState(MatSelectBase))));\n/**\n * Injection token that can be used to reference instances of `MatSelectTrigger`. It serves as\n * alternative token to the actual `MatSelectTrigger` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_SELECT_TRIGGER = new InjectionToken('MatSelectTrigger');\n/**\n * Allows the user to customize the trigger that is displayed when the select has a value.\n */\nclass MatSelectTrigger {\n}\nMatSelectTrigger.ɵfac = function MatSelectTrigger_Factory(t) { return new (t || MatSelectTrigger)(); };\nMatSelectTrigger.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatSelectTrigger, selectors: [[\"mat-select-trigger\"]], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MAT_SELECT_TRIGGER, useExisting: MatSelectTrigger }])] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSelectTrigger, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-select-trigger',\n                providers: [{ provide: MAT_SELECT_TRIGGER, useExisting: MatSelectTrigger }]\n            }]\n    }], null, null); })();\n/** Base class with all of the `MatSelect` functionality. */\nclass _MatSelectBase extends _MatSelectMixinBase {\n    constructor(_viewportRuler, _changeDetectorRef, _ngZone, _defaultErrorStateMatcher, elementRef, _dir, _parentForm, _parentFormGroup, _parentFormField, ngControl, tabIndex, scrollStrategyFactory, _liveAnnouncer, _defaultOptions) {\n        var _a, _b, _c;\n        super(elementRef, _defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n        this._viewportRuler = _viewportRuler;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._ngZone = _ngZone;\n        this._dir = _dir;\n        this._parentFormField = _parentFormField;\n        this.ngControl = ngControl;\n        this._liveAnnouncer = _liveAnnouncer;\n        this._defaultOptions = _defaultOptions;\n        /** Whether or not the overlay panel is open. */\n        this._panelOpen = false;\n        /** Comparison function to specify which option is displayed. Defaults to object equality. */\n        this._compareWith = (o1, o2) => o1 === o2;\n        /** Unique id for this input. */\n        this._uid = `mat-select-${nextUniqueId++}`;\n        /** Current `ariar-labelledby` value for the select trigger. */\n        this._triggerAriaLabelledBy = null;\n        /** Emits whenever the component is destroyed. */\n        this._destroy = new Subject();\n        /** `View -> model callback called when value changes` */\n        this._onChange = () => { };\n        /** `View -> model callback called when select has been touched` */\n        this._onTouched = () => { };\n        /** ID for the DOM node containing the select's value. */\n        this._valueId = `mat-select-value-${nextUniqueId++}`;\n        /** Emits when the panel element is finished transforming in. */\n        this._panelDoneAnimatingStream = new Subject();\n        this._overlayPanelClass = ((_a = this._defaultOptions) === null || _a === void 0 ? void 0 : _a.overlayPanelClass) || '';\n        this._focused = false;\n        /** A name for this control that can be used by `mat-form-field`. */\n        this.controlType = 'mat-select';\n        this._required = false;\n        this._multiple = false;\n        this._disableOptionCentering = (_c = (_b = this._defaultOptions) === null || _b === void 0 ? void 0 : _b.disableOptionCentering) !== null && _c !== void 0 ? _c : false;\n        /** Aria label of the select. */\n        this.ariaLabel = '';\n        /** Combined stream of all of the child options' change events. */\n        this.optionSelectionChanges = defer(() => {\n            const options = this.options;\n            if (options) {\n                return options.changes.pipe(startWith(options), switchMap(() => merge(...options.map(option => option.onSelectionChange))));\n            }\n            return this._ngZone.onStable\n                .pipe(take(1), switchMap(() => this.optionSelectionChanges));\n        });\n        /** Event emitted when the select panel has been toggled. */\n        this.openedChange = new EventEmitter();\n        /** Event emitted when the select has been opened. */\n        this._openedStream = this.openedChange.pipe(filter(o => o), map(() => { }));\n        /** Event emitted when the select has been closed. */\n        this._closedStream = this.openedChange.pipe(filter(o => !o), map(() => { }));\n        /** Event emitted when the selected value has been changed by the user. */\n        this.selectionChange = new EventEmitter();\n        /**\n         * Event that emits whenever the raw value of the select changes. This is here primarily\n         * to facilitate the two-way binding for the `value` input.\n         * @docs-private\n         */\n        this.valueChange = new EventEmitter();\n        if (this.ngControl) {\n            // Note: we provide the value accessor through here, instead of\n            // the `providers` to avoid running into a circular import.\n            this.ngControl.valueAccessor = this;\n        }\n        // Note that we only want to set this when the defaults pass it in, otherwise it should\n        // stay as `undefined` so that it falls back to the default in the key manager.\n        if ((_defaultOptions === null || _defaultOptions === void 0 ? void 0 : _defaultOptions.typeaheadDebounceInterval) != null) {\n            this._typeaheadDebounceInterval = _defaultOptions.typeaheadDebounceInterval;\n        }\n        this._scrollStrategyFactory = scrollStrategyFactory;\n        this._scrollStrategy = this._scrollStrategyFactory();\n        this.tabIndex = parseInt(tabIndex) || 0;\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n    }\n    /** Whether the select is focused. */\n    get focused() {\n        return this._focused || this._panelOpen;\n    }\n    /** Placeholder to be shown if no value has been selected. */\n    get placeholder() { return this._placeholder; }\n    set placeholder(value) {\n        this._placeholder = value;\n        this.stateChanges.next();\n    }\n    /** Whether the component is required. */\n    get required() { return this._required; }\n    set required(value) {\n        this._required = coerceBooleanProperty(value);\n        this.stateChanges.next();\n    }\n    /** Whether the user should be allowed to select multiple options. */\n    get multiple() { return this._multiple; }\n    set multiple(value) {\n        if (this._selectionModel && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMatSelectDynamicMultipleError();\n        }\n        this._multiple = coerceBooleanProperty(value);\n    }\n    /** Whether to center the active option over the trigger. */\n    get disableOptionCentering() { return this._disableOptionCentering; }\n    set disableOptionCentering(value) {\n        this._disableOptionCentering = coerceBooleanProperty(value);\n    }\n    /**\n     * Function to compare the option values with the selected values. The first argument\n     * is a value from an option. The second is a value from the selection. A boolean\n     * should be returned.\n     */\n    get compareWith() { return this._compareWith; }\n    set compareWith(fn) {\n        if (typeof fn !== 'function' && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMatSelectNonFunctionValueError();\n        }\n        this._compareWith = fn;\n        if (this._selectionModel) {\n            // A different comparator means the selection could change.\n            this._initializeSelection();\n        }\n    }\n    /** Value of the select control. */\n    get value() { return this._value; }\n    set value(newValue) {\n        // Always re-assign an array, because it might have been mutated.\n        if (newValue !== this._value || (this._multiple && Array.isArray(newValue))) {\n            if (this.options) {\n                this._setSelectionByValue(newValue);\n            }\n            this._value = newValue;\n        }\n    }\n    /** Time to wait in milliseconds after the last keystroke before moving focus to an item. */\n    get typeaheadDebounceInterval() { return this._typeaheadDebounceInterval; }\n    set typeaheadDebounceInterval(value) {\n        this._typeaheadDebounceInterval = coerceNumberProperty(value);\n    }\n    /** Unique id of the element. */\n    get id() { return this._id; }\n    set id(value) {\n        this._id = value || this._uid;\n        this.stateChanges.next();\n    }\n    ngOnInit() {\n        this._selectionModel = new SelectionModel(this.multiple);\n        this.stateChanges.next();\n        // We need `distinctUntilChanged` here, because some browsers will\n        // fire the animation end event twice for the same animation. See:\n        // https://github.com/angular/angular/issues/24084\n        this._panelDoneAnimatingStream\n            .pipe(distinctUntilChanged(), takeUntil(this._destroy))\n            .subscribe(() => this._panelDoneAnimating(this.panelOpen));\n    }\n    ngAfterContentInit() {\n        this._initKeyManager();\n        this._selectionModel.changed.pipe(takeUntil(this._destroy)).subscribe(event => {\n            event.added.forEach(option => option.select());\n            event.removed.forEach(option => option.deselect());\n        });\n        this.options.changes.pipe(startWith(null), takeUntil(this._destroy)).subscribe(() => {\n            this._resetOptions();\n            this._initializeSelection();\n        });\n    }\n    ngDoCheck() {\n        const newAriaLabelledby = this._getTriggerAriaLabelledby();\n        // We have to manage setting the `aria-labelledby` ourselves, because part of its value\n        // is computed as a result of a content query which can cause this binding to trigger a\n        // \"changed after checked\" error.\n        if (newAriaLabelledby !== this._triggerAriaLabelledBy) {\n            const element = this._elementRef.nativeElement;\n            this._triggerAriaLabelledBy = newAriaLabelledby;\n            if (newAriaLabelledby) {\n                element.setAttribute('aria-labelledby', newAriaLabelledby);\n            }\n            else {\n                element.removeAttribute('aria-labelledby');\n            }\n        }\n        if (this.ngControl) {\n            this.updateErrorState();\n        }\n    }\n    ngOnChanges(changes) {\n        // Updating the disabled state is handled by `mixinDisabled`, but we need to additionally let\n        // the parent form field know to run change detection when the disabled state changes.\n        if (changes['disabled']) {\n            this.stateChanges.next();\n        }\n        if (changes['typeaheadDebounceInterval'] && this._keyManager) {\n            this._keyManager.withTypeAhead(this._typeaheadDebounceInterval);\n        }\n    }\n    ngOnDestroy() {\n        this._destroy.next();\n        this._destroy.complete();\n        this.stateChanges.complete();\n    }\n    /** Toggles the overlay panel open or closed. */\n    toggle() {\n        this.panelOpen ? this.close() : this.open();\n    }\n    /** Opens the overlay panel. */\n    open() {\n        if (this._canOpen()) {\n            this._panelOpen = true;\n            this._keyManager.withHorizontalOrientation(null);\n            this._highlightCorrectOption();\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /** Closes the overlay panel and focuses the host element. */\n    close() {\n        if (this._panelOpen) {\n            this._panelOpen = false;\n            this._keyManager.withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr');\n            this._changeDetectorRef.markForCheck();\n            this._onTouched();\n        }\n    }\n    /**\n     * Sets the select's value. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param value New value to be written to the model.\n     */\n    writeValue(value) {\n        this.value = value;\n    }\n    /**\n     * Saves a callback function to be invoked when the select's value\n     * changes from user input. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param fn Callback to be triggered when the value changes.\n     */\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    /**\n     * Saves a callback function to be invoked when the select is blurred\n     * by the user. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param fn Callback to be triggered when the component has been touched.\n     */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    /**\n     * Disables the select. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param isDisabled Sets whether the component is disabled.\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n        this._changeDetectorRef.markForCheck();\n        this.stateChanges.next();\n    }\n    /** Whether or not the overlay panel is open. */\n    get panelOpen() {\n        return this._panelOpen;\n    }\n    /** The currently selected option. */\n    get selected() {\n        return this.multiple ? this._selectionModel.selected : this._selectionModel.selected[0];\n    }\n    /** The value displayed in the trigger. */\n    get triggerValue() {\n        if (this.empty) {\n            return '';\n        }\n        if (this._multiple) {\n            const selectedOptions = this._selectionModel.selected.map(option => option.viewValue);\n            if (this._isRtl()) {\n                selectedOptions.reverse();\n            }\n            // TODO(crisbeto): delimiter should be configurable for proper localization.\n            return selectedOptions.join(', ');\n        }\n        return this._selectionModel.selected[0].viewValue;\n    }\n    /** Whether the element is in RTL mode. */\n    _isRtl() {\n        return this._dir ? this._dir.value === 'rtl' : false;\n    }\n    /** Handles all keydown events on the select. */\n    _handleKeydown(event) {\n        if (!this.disabled) {\n            this.panelOpen ? this._handleOpenKeydown(event) : this._handleClosedKeydown(event);\n        }\n    }\n    /** Handles keyboard events while the select is closed. */\n    _handleClosedKeydown(event) {\n        const keyCode = event.keyCode;\n        const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW ||\n            keyCode === LEFT_ARROW || keyCode === RIGHT_ARROW;\n        const isOpenKey = keyCode === ENTER || keyCode === SPACE;\n        const manager = this._keyManager;\n        // Open the select on ALT + arrow key to match the native <select>\n        if (!manager.isTyping() && (isOpenKey && !hasModifierKey(event)) ||\n            ((this.multiple || event.altKey) && isArrowKey)) {\n            event.preventDefault(); // prevents the page from scrolling down when pressing space\n            this.open();\n        }\n        else if (!this.multiple) {\n            const previouslySelectedOption = this.selected;\n            manager.onKeydown(event);\n            const selectedOption = this.selected;\n            // Since the value has changed, we need to announce it ourselves.\n            if (selectedOption && previouslySelectedOption !== selectedOption) {\n                // We set a duration on the live announcement, because we want the live element to be\n                // cleared after a while so that users can't navigate to it using the arrow keys.\n                this._liveAnnouncer.announce(selectedOption.viewValue, 10000);\n            }\n        }\n    }\n    /** Handles keyboard events when the selected is open. */\n    _handleOpenKeydown(event) {\n        const manager = this._keyManager;\n        const keyCode = event.keyCode;\n        const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW;\n        const isTyping = manager.isTyping();\n        if (isArrowKey && event.altKey) {\n            // Close the select on ALT + arrow key to match the native <select>\n            event.preventDefault();\n            this.close();\n            // Don't do anything in this case if the user is typing,\n            // because the typing sequence can include the space key.\n        }\n        else if (!isTyping && (keyCode === ENTER || keyCode === SPACE) && manager.activeItem &&\n            !hasModifierKey(event)) {\n            event.preventDefault();\n            manager.activeItem._selectViaInteraction();\n        }\n        else if (!isTyping && this._multiple && keyCode === A && event.ctrlKey) {\n            event.preventDefault();\n            const hasDeselectedOptions = this.options.some(opt => !opt.disabled && !opt.selected);\n            this.options.forEach(option => {\n                if (!option.disabled) {\n                    hasDeselectedOptions ? option.select() : option.deselect();\n                }\n            });\n        }\n        else {\n            const previouslyFocusedIndex = manager.activeItemIndex;\n            manager.onKeydown(event);\n            if (this._multiple && isArrowKey && event.shiftKey && manager.activeItem &&\n                manager.activeItemIndex !== previouslyFocusedIndex) {\n                manager.activeItem._selectViaInteraction();\n            }\n        }\n    }\n    _onFocus() {\n        if (!this.disabled) {\n            this._focused = true;\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Calls the touched callback only if the panel is closed. Otherwise, the trigger will\n     * \"blur\" to the panel when it opens, causing a false positive.\n     */\n    _onBlur() {\n        this._focused = false;\n        if (!this.disabled && !this.panelOpen) {\n            this._onTouched();\n            this._changeDetectorRef.markForCheck();\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Callback that is invoked when the overlay panel has been attached.\n     */\n    _onAttached() {\n        this.overlayDir.positionChange.pipe(take(1)).subscribe(() => {\n            this._changeDetectorRef.detectChanges();\n            this._positioningSettled();\n        });\n    }\n    /** Returns the theme to be used on the panel. */\n    _getPanelTheme() {\n        return this._parentFormField ? `mat-${this._parentFormField.color}` : '';\n    }\n    /** Whether the select has a value. */\n    get empty() {\n        return !this._selectionModel || this._selectionModel.isEmpty();\n    }\n    _initializeSelection() {\n        // Defer setting the value in order to avoid the \"Expression\n        // has changed after it was checked\" errors from Angular.\n        Promise.resolve().then(() => {\n            this._setSelectionByValue(this.ngControl ? this.ngControl.value : this._value);\n            this.stateChanges.next();\n        });\n    }\n    /**\n     * Sets the selected option based on a value. If no option can be\n     * found with the designated value, the select trigger is cleared.\n     */\n    _setSelectionByValue(value) {\n        this._selectionModel.selected.forEach(option => option.setInactiveStyles());\n        this._selectionModel.clear();\n        if (this.multiple && value) {\n            if (!Array.isArray(value) && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw getMatSelectNonArrayValueError();\n            }\n            value.forEach((currentValue) => this._selectValue(currentValue));\n            this._sortValues();\n        }\n        else {\n            const correspondingOption = this._selectValue(value);\n            // Shift focus to the active item. Note that we shouldn't do this in multiple\n            // mode, because we don't know what option the user interacted with last.\n            if (correspondingOption) {\n                this._keyManager.updateActiveItem(correspondingOption);\n            }\n            else if (!this.panelOpen) {\n                // Otherwise reset the highlighted option. Note that we only want to do this while\n                // closed, because doing it while open can shift the user's focus unnecessarily.\n                this._keyManager.updateActiveItem(-1);\n            }\n        }\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Finds and selects and option based on its value.\n     * @returns Option that has the corresponding value.\n     */\n    _selectValue(value) {\n        const correspondingOption = this.options.find((option) => {\n            // Skip options that are already in the model. This allows us to handle cases\n            // where the same primitive value is selected multiple times.\n            if (this._selectionModel.isSelected(option)) {\n                return false;\n            }\n            try {\n                // Treat null as a special reset value.\n                return option.value != null && this._compareWith(option.value, value);\n            }\n            catch (error) {\n                if (typeof ngDevMode === 'undefined' || ngDevMode) {\n                    // Notify developers of errors in their comparator.\n                    console.warn(error);\n                }\n                return false;\n            }\n        });\n        if (correspondingOption) {\n            this._selectionModel.select(correspondingOption);\n        }\n        return correspondingOption;\n    }\n    /** Sets up a key manager to listen to keyboard events on the overlay panel. */\n    _initKeyManager() {\n        this._keyManager = new ActiveDescendantKeyManager(this.options)\n            .withTypeAhead(this._typeaheadDebounceInterval)\n            .withVerticalOrientation()\n            .withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr')\n            .withHomeAndEnd()\n            .withAllowedModifierKeys(['shiftKey']);\n        this._keyManager.tabOut.pipe(takeUntil(this._destroy)).subscribe(() => {\n            if (this.panelOpen) {\n                // Select the active item when tabbing away. This is consistent with how the native\n                // select behaves. Note that we only want to do this in single selection mode.\n                if (!this.multiple && this._keyManager.activeItem) {\n                    this._keyManager.activeItem._selectViaInteraction();\n                }\n                // Restore focus to the trigger before closing. Ensures that the focus\n                // position won't be lost if the user got focus into the overlay.\n                this.focus();\n                this.close();\n            }\n        });\n        this._keyManager.change.pipe(takeUntil(this._destroy)).subscribe(() => {\n            if (this._panelOpen && this.panel) {\n                this._scrollOptionIntoView(this._keyManager.activeItemIndex || 0);\n            }\n            else if (!this._panelOpen && !this.multiple && this._keyManager.activeItem) {\n                this._keyManager.activeItem._selectViaInteraction();\n            }\n        });\n    }\n    /** Drops current option subscriptions and IDs and resets from scratch. */\n    _resetOptions() {\n        const changedOrDestroyed = merge(this.options.changes, this._destroy);\n        this.optionSelectionChanges.pipe(takeUntil(changedOrDestroyed)).subscribe(event => {\n            this._onSelect(event.source, event.isUserInput);\n            if (event.isUserInput && !this.multiple && this._panelOpen) {\n                this.close();\n                this.focus();\n            }\n        });\n        // Listen to changes in the internal state of the options and react accordingly.\n        // Handles cases like the labels of the selected options changing.\n        merge(...this.options.map(option => option._stateChanges))\n            .pipe(takeUntil(changedOrDestroyed))\n            .subscribe(() => {\n            this._changeDetectorRef.markForCheck();\n            this.stateChanges.next();\n        });\n    }\n    /** Invoked when an option is clicked. */\n    _onSelect(option, isUserInput) {\n        const wasSelected = this._selectionModel.isSelected(option);\n        if (option.value == null && !this._multiple) {\n            option.deselect();\n            this._selectionModel.clear();\n            if (this.value != null) {\n                this._propagateChanges(option.value);\n            }\n        }\n        else {\n            if (wasSelected !== option.selected) {\n                option.selected ? this._selectionModel.select(option) :\n                    this._selectionModel.deselect(option);\n            }\n            if (isUserInput) {\n                this._keyManager.setActiveItem(option);\n            }\n            if (this.multiple) {\n                this._sortValues();\n                if (isUserInput) {\n                    // In case the user selected the option with their mouse, we\n                    // want to restore focus back to the trigger, in order to\n                    // prevent the select keyboard controls from clashing with\n                    // the ones from `mat-option`.\n                    this.focus();\n                }\n            }\n        }\n        if (wasSelected !== this._selectionModel.isSelected(option)) {\n            this._propagateChanges();\n        }\n        this.stateChanges.next();\n    }\n    /** Sorts the selected values in the selected based on their order in the panel. */\n    _sortValues() {\n        if (this.multiple) {\n            const options = this.options.toArray();\n            this._selectionModel.sort((a, b) => {\n                return this.sortComparator ? this.sortComparator(a, b, options) :\n                    options.indexOf(a) - options.indexOf(b);\n            });\n            this.stateChanges.next();\n        }\n    }\n    /** Emits change event to set the model value. */\n    _propagateChanges(fallbackValue) {\n        let valueToEmit = null;\n        if (this.multiple) {\n            valueToEmit = this.selected.map(option => option.value);\n        }\n        else {\n            valueToEmit = this.selected ? this.selected.value : fallbackValue;\n        }\n        this._value = valueToEmit;\n        this.valueChange.emit(valueToEmit);\n        this._onChange(valueToEmit);\n        this.selectionChange.emit(this._getChangeEvent(valueToEmit));\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Highlights the selected item. If no option is selected, it will highlight\n     * the first item instead.\n     */\n    _highlightCorrectOption() {\n        if (this._keyManager) {\n            if (this.empty) {\n                this._keyManager.setFirstItemActive();\n            }\n            else {\n                this._keyManager.setActiveItem(this._selectionModel.selected[0]);\n            }\n        }\n    }\n    /** Whether the panel is allowed to open. */\n    _canOpen() {\n        var _a;\n        return !this._panelOpen && !this.disabled && ((_a = this.options) === null || _a === void 0 ? void 0 : _a.length) > 0;\n    }\n    /** Focuses the select element. */\n    focus(options) {\n        this._elementRef.nativeElement.focus(options);\n    }\n    /** Gets the aria-labelledby for the select panel. */\n    _getPanelAriaLabelledby() {\n        var _a;\n        if (this.ariaLabel) {\n            return null;\n        }\n        const labelId = (_a = this._parentFormField) === null || _a === void 0 ? void 0 : _a.getLabelId();\n        const labelExpression = (labelId ? labelId + ' ' : '');\n        return this.ariaLabelledby ? labelExpression + this.ariaLabelledby : labelId;\n    }\n    /** Determines the `aria-activedescendant` to be set on the host. */\n    _getAriaActiveDescendant() {\n        if (this.panelOpen && this._keyManager && this._keyManager.activeItem) {\n            return this._keyManager.activeItem.id;\n        }\n        return null;\n    }\n    /** Gets the aria-labelledby of the select component trigger. */\n    _getTriggerAriaLabelledby() {\n        var _a;\n        if (this.ariaLabel) {\n            return null;\n        }\n        const labelId = (_a = this._parentFormField) === null || _a === void 0 ? void 0 : _a.getLabelId();\n        let value = (labelId ? labelId + ' ' : '') + this._valueId;\n        if (this.ariaLabelledby) {\n            value += ' ' + this.ariaLabelledby;\n        }\n        return value;\n    }\n    /** Called when the overlay panel is done animating. */\n    _panelDoneAnimating(isOpen) {\n        this.openedChange.emit(isOpen);\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    setDescribedByIds(ids) {\n        this._ariaDescribedby = ids.join(' ');\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick() {\n        this.focus();\n        this.open();\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get shouldLabelFloat() {\n        return this._panelOpen || !this.empty || (this._focused && !!this._placeholder);\n    }\n}\n_MatSelectBase.ɵfac = function _MatSelectBase_Factory(t) { return new (t || _MatSelectBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.ErrorStateMatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.NgForm, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.FormGroupDirective, 8), ɵngcc0.ɵɵdirectiveInject(MAT_FORM_FIELD, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.NgControl, 10), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(MAT_SELECT_SCROLL_STRATEGY), ɵngcc0.ɵɵdirectiveInject(ɵngcc5.LiveAnnouncer), ɵngcc0.ɵɵdirectiveInject(MAT_SELECT_CONFIG, 8)); };\n_MatSelectBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: _MatSelectBase, viewQuery: function _MatSelectBase_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, 1);\n        ɵngcc0.ɵɵviewQuery(_c1, 1);\n        ɵngcc0.ɵɵviewQuery(CdkConnectedOverlay, 1);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.trigger = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.panel = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.overlayDir = _t.first);\n    } }, inputs: { ariaLabel: [\"aria-label\", \"ariaLabel\"], id: \"id\", placeholder: \"placeholder\", required: \"required\", multiple: \"multiple\", disableOptionCentering: \"disableOptionCentering\", compareWith: \"compareWith\", value: \"value\", typeaheadDebounceInterval: \"typeaheadDebounceInterval\", panelClass: \"panelClass\", ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], errorStateMatcher: \"errorStateMatcher\", sortComparator: \"sortComparator\" }, outputs: { openedChange: \"openedChange\", _openedStream: \"opened\", _closedStream: \"closed\", selectionChange: \"selectionChange\", valueChange: \"valueChange\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature] });\n_MatSelectBase.ctorParameters = () => [\n    { type: ViewportRuler },\n    { type: ChangeDetectorRef },\n    { type: NgZone },\n    { type: ErrorStateMatcher },\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgForm, decorators: [{ type: Optional }] },\n    { type: FormGroupDirective, decorators: [{ type: Optional }] },\n    { type: MatFormField, decorators: [{ type: Optional }, { type: Inject, args: [MAT_FORM_FIELD,] }] },\n    { type: NgControl, decorators: [{ type: Self }, { type: Optional }] },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_SELECT_SCROLL_STRATEGY,] }] },\n    { type: LiveAnnouncer },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_SELECT_CONFIG,] }] }\n];\n_MatSelectBase.propDecorators = {\n    trigger: [{ type: ViewChild, args: ['trigger',] }],\n    panel: [{ type: ViewChild, args: ['panel',] }],\n    overlayDir: [{ type: ViewChild, args: [CdkConnectedOverlay,] }],\n    panelClass: [{ type: Input }],\n    placeholder: [{ type: Input }],\n    required: [{ type: Input }],\n    multiple: [{ type: Input }],\n    disableOptionCentering: [{ type: Input }],\n    compareWith: [{ type: Input }],\n    value: [{ type: Input }],\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }],\n    errorStateMatcher: [{ type: Input }],\n    typeaheadDebounceInterval: [{ type: Input }],\n    sortComparator: [{ type: Input }],\n    id: [{ type: Input }],\n    openedChange: [{ type: Output }],\n    _openedStream: [{ type: Output, args: ['opened',] }],\n    _closedStream: [{ type: Output, args: ['closed',] }],\n    selectionChange: [{ type: Output }],\n    valueChange: [{ type: Output }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(_MatSelectBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc1.ViewportRuler }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.NgZone }, { type: ɵngcc2.ErrorStateMatcher }, { type: ɵngcc0.ElementRef }, { type: ɵngcc3.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc4.NgForm, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc4.FormGroupDirective, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc6.MatFormField, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_FORM_FIELD]\n            }] }, { type: ɵngcc4.NgControl, decorators: [{\n                type: Self\n            }, {\n                type: Optional\n            }] }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_SELECT_SCROLL_STRATEGY]\n            }] }, { type: ɵngcc5.LiveAnnouncer }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_SELECT_CONFIG]\n            }] }]; }, { ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], openedChange: [{\n            type: Output\n        }], _openedStream: [{\n            type: Output,\n            args: ['opened']\n        }], _closedStream: [{\n            type: Output,\n            args: ['closed']\n        }], selectionChange: [{\n            type: Output\n        }], valueChange: [{\n            type: Output\n        }], id: [{\n            type: Input\n        }], placeholder: [{\n            type: Input\n        }], required: [{\n            type: Input\n        }], multiple: [{\n            type: Input\n        }], disableOptionCentering: [{\n            type: Input\n        }], compareWith: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], typeaheadDebounceInterval: [{\n            type: Input\n        }], trigger: [{\n            type: ViewChild,\n            args: ['trigger']\n        }], panel: [{\n            type: ViewChild,\n            args: ['panel']\n        }], overlayDir: [{\n            type: ViewChild,\n            args: [CdkConnectedOverlay]\n        }], panelClass: [{\n            type: Input\n        }], ariaLabelledby: [{\n            type: Input,\n            args: ['aria-labelledby']\n        }], errorStateMatcher: [{\n            type: Input\n        }], sortComparator: [{\n            type: Input\n        }] }); })();\nclass MatSelect extends _MatSelectBase {\n    constructor() {\n        super(...arguments);\n        /** The scroll position of the overlay panel, calculated to center the selected option. */\n        this._scrollTop = 0;\n        /** The cached font-size of the trigger element. */\n        this._triggerFontSize = 0;\n        /** The value of the select panel's transform-origin property. */\n        this._transformOrigin = 'top';\n        /**\n         * The y-offset of the overlay panel in relation to the trigger's top start corner.\n         * This must be adjusted to align the selected option text over the trigger text.\n         * when the panel opens. Will change based on the y-position of the selected option.\n         */\n        this._offsetY = 0;\n        this._positions = [\n            {\n                originX: 'start',\n                originY: 'top',\n                overlayX: 'start',\n                overlayY: 'top',\n            },\n            {\n                originX: 'start',\n                originY: 'bottom',\n                overlayX: 'start',\n                overlayY: 'bottom',\n            },\n        ];\n    }\n    /**\n     * Calculates the scroll position of the select's overlay panel.\n     *\n     * Attempts to center the selected option in the panel. If the option is\n     * too high or too low in the panel to be scrolled to the center, it clamps the\n     * scroll position to the min or max scroll positions respectively.\n     */\n    _calculateOverlayScroll(selectedIndex, scrollBuffer, maxScroll) {\n        const itemHeight = this._getItemHeight();\n        const optionOffsetFromScrollTop = itemHeight * selectedIndex;\n        const halfOptionHeight = itemHeight / 2;\n        // Starts at the optionOffsetFromScrollTop, which scrolls the option to the top of the\n        // scroll container, then subtracts the scroll buffer to scroll the option down to\n        // the center of the overlay panel. Half the option height must be re-added to the\n        // scrollTop so the option is centered based on its middle, not its top edge.\n        const optimalScrollPosition = optionOffsetFromScrollTop - scrollBuffer + halfOptionHeight;\n        return Math.min(Math.max(0, optimalScrollPosition), maxScroll);\n    }\n    ngOnInit() {\n        super.ngOnInit();\n        this._viewportRuler.change().pipe(takeUntil(this._destroy)).subscribe(() => {\n            if (this.panelOpen) {\n                this._triggerRect = this.trigger.nativeElement.getBoundingClientRect();\n                this._changeDetectorRef.markForCheck();\n            }\n        });\n    }\n    open() {\n        if (super._canOpen()) {\n            super.open();\n            this._triggerRect = this.trigger.nativeElement.getBoundingClientRect();\n            // Note: The computed font-size will be a string pixel value (e.g. \"16px\").\n            // `parseInt` ignores the trailing 'px' and converts this to a number.\n            this._triggerFontSize =\n                parseInt(getComputedStyle(this.trigger.nativeElement).fontSize || '0');\n            this._calculateOverlayPosition();\n            // Set the font size on the panel element once it exists.\n            this._ngZone.onStable.pipe(take(1)).subscribe(() => {\n                if (this._triggerFontSize && this.overlayDir.overlayRef &&\n                    this.overlayDir.overlayRef.overlayElement) {\n                    this.overlayDir.overlayRef.overlayElement.style.fontSize = `${this._triggerFontSize}px`;\n                }\n            });\n        }\n    }\n    /** Scrolls the active option into view. */\n    _scrollOptionIntoView(index) {\n        const labelCount = _countGroupLabelsBeforeOption(index, this.options, this.optionGroups);\n        const itemHeight = this._getItemHeight();\n        this.panel.nativeElement.scrollTop = _getOptionScrollPosition((index + labelCount) * itemHeight, itemHeight, this.panel.nativeElement.scrollTop, SELECT_PANEL_MAX_HEIGHT);\n    }\n    _positioningSettled() {\n        this._calculateOverlayOffsetX();\n        this.panel.nativeElement.scrollTop = this._scrollTop;\n    }\n    _panelDoneAnimating(isOpen) {\n        if (this.panelOpen) {\n            this._scrollTop = 0;\n        }\n        else {\n            this.overlayDir.offsetX = 0;\n            this._changeDetectorRef.markForCheck();\n        }\n        super._panelDoneAnimating(isOpen);\n    }\n    _getChangeEvent(value) {\n        return new MatSelectChange(this, value);\n    }\n    /**\n     * Sets the x-offset of the overlay panel in relation to the trigger's top start corner.\n     * This must be adjusted to align the selected option text over the trigger text when\n     * the panel opens. Will change based on LTR or RTL text direction. Note that the offset\n     * can't be calculated until the panel has been attached, because we need to know the\n     * content width in order to constrain the panel within the viewport.\n     */\n    _calculateOverlayOffsetX() {\n        const overlayRect = this.overlayDir.overlayRef.overlayElement.getBoundingClientRect();\n        const viewportSize = this._viewportRuler.getViewportSize();\n        const isRtl = this._isRtl();\n        const paddingWidth = this.multiple ? SELECT_MULTIPLE_PANEL_PADDING_X + SELECT_PANEL_PADDING_X :\n            SELECT_PANEL_PADDING_X * 2;\n        let offsetX;\n        // Adjust the offset, depending on the option padding.\n        if (this.multiple) {\n            offsetX = SELECT_MULTIPLE_PANEL_PADDING_X;\n        }\n        else if (this.disableOptionCentering) {\n            offsetX = SELECT_PANEL_PADDING_X;\n        }\n        else {\n            let selected = this._selectionModel.selected[0] || this.options.first;\n            offsetX = selected && selected.group ? SELECT_PANEL_INDENT_PADDING_X : SELECT_PANEL_PADDING_X;\n        }\n        // Invert the offset in LTR.\n        if (!isRtl) {\n            offsetX *= -1;\n        }\n        // Determine how much the select overflows on each side.\n        const leftOverflow = 0 - (overlayRect.left + offsetX - (isRtl ? paddingWidth : 0));\n        const rightOverflow = overlayRect.right + offsetX - viewportSize.width\n            + (isRtl ? 0 : paddingWidth);\n        // If the element overflows on either side, reduce the offset to allow it to fit.\n        if (leftOverflow > 0) {\n            offsetX += leftOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n        }\n        else if (rightOverflow > 0) {\n            offsetX -= rightOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n        }\n        // Set the offset directly in order to avoid having to go through change detection and\n        // potentially triggering \"changed after it was checked\" errors. Round the value to avoid\n        // blurry content in some browsers.\n        this.overlayDir.offsetX = Math.round(offsetX);\n        this.overlayDir.overlayRef.updatePosition();\n    }\n    /**\n     * Calculates the y-offset of the select's overlay panel in relation to the\n     * top start corner of the trigger. It has to be adjusted in order for the\n     * selected option to be aligned over the trigger when the panel opens.\n     */\n    _calculateOverlayOffsetY(selectedIndex, scrollBuffer, maxScroll) {\n        const itemHeight = this._getItemHeight();\n        const optionHeightAdjustment = (itemHeight - this._triggerRect.height) / 2;\n        const maxOptionsDisplayed = Math.floor(SELECT_PANEL_MAX_HEIGHT / itemHeight);\n        let optionOffsetFromPanelTop;\n        // Disable offset if requested by user by returning 0 as value to offset\n        if (this.disableOptionCentering) {\n            return 0;\n        }\n        if (this._scrollTop === 0) {\n            optionOffsetFromPanelTop = selectedIndex * itemHeight;\n        }\n        else if (this._scrollTop === maxScroll) {\n            const firstDisplayedIndex = this._getItemCount() - maxOptionsDisplayed;\n            const selectedDisplayIndex = selectedIndex - firstDisplayedIndex;\n            // The first item is partially out of the viewport. Therefore we need to calculate what\n            // portion of it is shown in the viewport and account for it in our offset.\n            let partialItemHeight = itemHeight - (this._getItemCount() * itemHeight - SELECT_PANEL_MAX_HEIGHT) % itemHeight;\n            // Because the panel height is longer than the height of the options alone,\n            // there is always extra padding at the top or bottom of the panel. When\n            // scrolled to the very bottom, this padding is at the top of the panel and\n            // must be added to the offset.\n            optionOffsetFromPanelTop = selectedDisplayIndex * itemHeight + partialItemHeight;\n        }\n        else {\n            // If the option was scrolled to the middle of the panel using a scroll buffer,\n            // its offset will be the scroll buffer minus the half height that was added to\n            // center it.\n            optionOffsetFromPanelTop = scrollBuffer - itemHeight / 2;\n        }\n        // The final offset is the option's offset from the top, adjusted for the height difference,\n        // multiplied by -1 to ensure that the overlay moves in the correct direction up the page.\n        // The value is rounded to prevent some browsers from blurring the content.\n        return Math.round(optionOffsetFromPanelTop * -1 - optionHeightAdjustment);\n    }\n    /**\n     * Checks that the attempted overlay position will fit within the viewport.\n     * If it will not fit, tries to adjust the scroll position and the associated\n     * y-offset so the panel can open fully on-screen. If it still won't fit,\n     * sets the offset back to 0 to allow the fallback position to take over.\n     */\n    _checkOverlayWithinViewport(maxScroll) {\n        const itemHeight = this._getItemHeight();\n        const viewportSize = this._viewportRuler.getViewportSize();\n        const topSpaceAvailable = this._triggerRect.top - SELECT_PANEL_VIEWPORT_PADDING;\n        const bottomSpaceAvailable = viewportSize.height - this._triggerRect.bottom - SELECT_PANEL_VIEWPORT_PADDING;\n        const panelHeightTop = Math.abs(this._offsetY);\n        const totalPanelHeight = Math.min(this._getItemCount() * itemHeight, SELECT_PANEL_MAX_HEIGHT);\n        const panelHeightBottom = totalPanelHeight - panelHeightTop - this._triggerRect.height;\n        if (panelHeightBottom > bottomSpaceAvailable) {\n            this._adjustPanelUp(panelHeightBottom, bottomSpaceAvailable);\n        }\n        else if (panelHeightTop > topSpaceAvailable) {\n            this._adjustPanelDown(panelHeightTop, topSpaceAvailable, maxScroll);\n        }\n        else {\n            this._transformOrigin = this._getOriginBasedOnOption();\n        }\n    }\n    /** Adjusts the overlay panel up to fit in the viewport. */\n    _adjustPanelUp(panelHeightBottom, bottomSpaceAvailable) {\n        // Browsers ignore fractional scroll offsets, so we need to round.\n        const distanceBelowViewport = Math.round(panelHeightBottom - bottomSpaceAvailable);\n        // Scrolls the panel up by the distance it was extending past the boundary, then\n        // adjusts the offset by that amount to move the panel up into the viewport.\n        this._scrollTop -= distanceBelowViewport;\n        this._offsetY -= distanceBelowViewport;\n        this._transformOrigin = this._getOriginBasedOnOption();\n        // If the panel is scrolled to the very top, it won't be able to fit the panel\n        // by scrolling, so set the offset to 0 to allow the fallback position to take\n        // effect.\n        if (this._scrollTop <= 0) {\n            this._scrollTop = 0;\n            this._offsetY = 0;\n            this._transformOrigin = `50% bottom 0px`;\n        }\n    }\n    /** Adjusts the overlay panel down to fit in the viewport. */\n    _adjustPanelDown(panelHeightTop, topSpaceAvailable, maxScroll) {\n        // Browsers ignore fractional scroll offsets, so we need to round.\n        const distanceAboveViewport = Math.round(panelHeightTop - topSpaceAvailable);\n        // Scrolls the panel down by the distance it was extending past the boundary, then\n        // adjusts the offset by that amount to move the panel down into the viewport.\n        this._scrollTop += distanceAboveViewport;\n        this._offsetY += distanceAboveViewport;\n        this._transformOrigin = this._getOriginBasedOnOption();\n        // If the panel is scrolled to the very bottom, it won't be able to fit the\n        // panel by scrolling, so set the offset to 0 to allow the fallback position\n        // to take effect.\n        if (this._scrollTop >= maxScroll) {\n            this._scrollTop = maxScroll;\n            this._offsetY = 0;\n            this._transformOrigin = `50% top 0px`;\n            return;\n        }\n    }\n    /** Calculates the scroll position and x- and y-offsets of the overlay panel. */\n    _calculateOverlayPosition() {\n        const itemHeight = this._getItemHeight();\n        const items = this._getItemCount();\n        const panelHeight = Math.min(items * itemHeight, SELECT_PANEL_MAX_HEIGHT);\n        const scrollContainerHeight = items * itemHeight;\n        // The farthest the panel can be scrolled before it hits the bottom\n        const maxScroll = scrollContainerHeight - panelHeight;\n        // If no value is selected we open the popup to the first item.\n        let selectedOptionOffset;\n        if (this.empty) {\n            selectedOptionOffset = 0;\n        }\n        else {\n            selectedOptionOffset =\n                Math.max(this.options.toArray().indexOf(this._selectionModel.selected[0]), 0);\n        }\n        selectedOptionOffset += _countGroupLabelsBeforeOption(selectedOptionOffset, this.options, this.optionGroups);\n        // We must maintain a scroll buffer so the selected option will be scrolled to the\n        // center of the overlay panel rather than the top.\n        const scrollBuffer = panelHeight / 2;\n        this._scrollTop = this._calculateOverlayScroll(selectedOptionOffset, scrollBuffer, maxScroll);\n        this._offsetY = this._calculateOverlayOffsetY(selectedOptionOffset, scrollBuffer, maxScroll);\n        this._checkOverlayWithinViewport(maxScroll);\n    }\n    /** Sets the transform origin point based on the selected option. */\n    _getOriginBasedOnOption() {\n        const itemHeight = this._getItemHeight();\n        const optionHeightAdjustment = (itemHeight - this._triggerRect.height) / 2;\n        const originY = Math.abs(this._offsetY) - optionHeightAdjustment + itemHeight / 2;\n        return `50% ${originY}px 0px`;\n    }\n    /** Calculates the height of the select's options. */\n    _getItemHeight() {\n        return this._triggerFontSize * SELECT_ITEM_HEIGHT_EM;\n    }\n    /** Calculates the amount of items in the select. This includes options and group labels. */\n    _getItemCount() {\n        return this.options.length + this.optionGroups.length;\n    }\n}\nMatSelect.ɵfac = function MatSelect_Factory(t) { return ɵMatSelect_BaseFactory(t || MatSelect); };\nMatSelect.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatSelect, selectors: [[\"mat-select\"]], contentQueries: function MatSelect_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MAT_SELECT_TRIGGER, 1);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatOption, 1);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MAT_OPTGROUP, 1);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.customTrigger = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.options = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.optionGroups = _t);\n    } }, hostAttrs: [\"role\", \"combobox\", \"aria-autocomplete\", \"none\", \"aria-haspopup\", \"true\", 1, \"mat-select\"], hostVars: 20, hostBindings: function MatSelect_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"keydown\", function MatSelect_keydown_HostBindingHandler($event) { return ctx._handleKeydown($event); })(\"focus\", function MatSelect_focus_HostBindingHandler() { return ctx._onFocus(); })(\"blur\", function MatSelect_blur_HostBindingHandler() { return ctx._onBlur(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"id\", ctx.id)(\"tabindex\", ctx.tabIndex)(\"aria-controls\", ctx.panelOpen ? ctx.id + \"-panel\" : null)(\"aria-expanded\", ctx.panelOpen)(\"aria-label\", ctx.ariaLabel || null)(\"aria-required\", ctx.required.toString())(\"aria-disabled\", ctx.disabled.toString())(\"aria-invalid\", ctx.errorState)(\"aria-describedby\", ctx._ariaDescribedby || null)(\"aria-activedescendant\", ctx._getAriaActiveDescendant());\n        ɵngcc0.ɵɵclassProp(\"mat-select-disabled\", ctx.disabled)(\"mat-select-invalid\", ctx.errorState)(\"mat-select-required\", ctx.required)(\"mat-select-empty\", ctx.empty)(\"mat-select-multiple\", ctx.multiple);\n    } }, inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", tabIndex: \"tabIndex\" }, exportAs: [\"matSelect\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: MatFormFieldControl, useExisting: MatSelect },\n            { provide: MAT_OPTION_PARENT_COMPONENT, useExisting: MatSelect }\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c3, decls: 9, vars: 12, consts: [[\"cdk-overlay-origin\", \"\", 1, \"mat-select-trigger\", 3, \"click\"], [\"origin\", \"cdkOverlayOrigin\", \"trigger\", \"\"], [1, \"mat-select-value\", 3, \"ngSwitch\"], [\"class\", \"mat-select-placeholder mat-select-min-line\", 4, \"ngSwitchCase\"], [\"class\", \"mat-select-value-text\", 3, \"ngSwitch\", 4, \"ngSwitchCase\"], [1, \"mat-select-arrow-wrapper\"], [1, \"mat-select-arrow\"], [\"cdk-connected-overlay\", \"\", \"cdkConnectedOverlayLockPosition\", \"\", \"cdkConnectedOverlayHasBackdrop\", \"\", \"cdkConnectedOverlayBackdropClass\", \"cdk-overlay-transparent-backdrop\", 3, \"cdkConnectedOverlayPanelClass\", \"cdkConnectedOverlayScrollStrategy\", \"cdkConnectedOverlayOrigin\", \"cdkConnectedOverlayOpen\", \"cdkConnectedOverlayPositions\", \"cdkConnectedOverlayMinWidth\", \"cdkConnectedOverlayOffsetY\", \"backdropClick\", \"attach\", \"detach\"], [1, \"mat-select-placeholder\", \"mat-select-min-line\"], [1, \"mat-select-value-text\", 3, \"ngSwitch\"], [\"class\", \"mat-select-min-line\", 4, \"ngSwitchDefault\"], [4, \"ngSwitchCase\"], [1, \"mat-select-min-line\"], [1, \"mat-select-panel-wrap\"], [\"role\", \"listbox\", \"tabindex\", \"-1\", 3, \"ngClass\", \"keydown\"], [\"panel\", \"\"]], template: function MatSelect_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c2);\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"click\", function MatSelect_Template_div_click_0_listener() { return ctx.toggle(); });\n        ɵngcc0.ɵɵelementStart(3, \"div\", 2);\n        ɵngcc0.ɵɵtemplate(4, MatSelect_span_4_Template, 2, 1, \"span\", 3);\n        ɵngcc0.ɵɵtemplate(5, MatSelect_span_5_Template, 3, 2, \"span\", 4);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(6, \"div\", 5);\n        ɵngcc0.ɵɵelement(7, \"div\", 6);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(8, MatSelect_ng_template_8_Template, 4, 14, \"ng-template\", 7);\n        ɵngcc0.ɵɵlistener(\"backdropClick\", function MatSelect_Template_ng_template_backdropClick_8_listener() { return ctx.close(); })(\"attach\", function MatSelect_Template_ng_template_attach_8_listener() { return ctx._onAttached(); })(\"detach\", function MatSelect_Template_ng_template_detach_8_listener() { return ctx.close(); });\n    } if (rf & 2) {\n        const _r0 = ɵngcc0.ɵɵreference(1);\n        ɵngcc0.ɵɵattribute(\"aria-owns\", ctx.panelOpen ? ctx.id + \"-panel\" : null);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx.empty);\n        ɵngcc0.ɵɵattribute(\"id\", ctx._valueId);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", false);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"cdkConnectedOverlayPanelClass\", ctx._overlayPanelClass)(\"cdkConnectedOverlayScrollStrategy\", ctx._scrollStrategy)(\"cdkConnectedOverlayOrigin\", _r0)(\"cdkConnectedOverlayOpen\", ctx.panelOpen)(\"cdkConnectedOverlayPositions\", ctx._positions)(\"cdkConnectedOverlayMinWidth\", ctx._triggerRect == null ? null : ctx._triggerRect.width)(\"cdkConnectedOverlayOffsetY\", ctx._offsetY);\n    } }, directives: [ɵngcc7.CdkOverlayOrigin, ɵngcc8.NgSwitch, ɵngcc8.NgSwitchCase, ɵngcc7.CdkConnectedOverlay, ɵngcc8.NgSwitchDefault, ɵngcc8.NgClass], styles: [\".mat-select{display:inline-block;width:100%;outline:none}.mat-select-trigger{display:inline-table;cursor:pointer;position:relative;box-sizing:border-box}.mat-select-disabled .mat-select-trigger{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-select-value{display:table-cell;max-width:0;width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.mat-select-value-text{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-select-arrow-wrapper{display:table-cell;vertical-align:middle}.mat-form-field-appearance-fill .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-outline .mat-select-arrow-wrapper{transform:translateY(-25%)}.mat-form-field-appearance-standard.mat-form-field-has-label .mat-select:not(.mat-select-empty) .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:none}.mat-select-arrow{width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;margin:0 4px}.mat-select-panel-wrap{flex-basis:100%}.mat-select-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;padding-top:0;padding-bottom:0;max-height:256px;min-width:100%;border-radius:4px;outline:0}.cdk-high-contrast-active .mat-select-panel{outline:solid 1px}.mat-select-panel .mat-optgroup-label,.mat-select-panel .mat-option{font-size:inherit;line-height:3em;height:3em}.mat-form-field-type-mat-select:not(.mat-form-field-disabled) .mat-form-field-flex{cursor:pointer}.mat-form-field-type-mat-select .mat-form-field-label{width:calc(100% - 18px)}.mat-select-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable .mat-select-placeholder{transition:none}.mat-form-field-hide-placeholder .mat-select-placeholder{color:transparent;-webkit-text-fill-color:transparent;transition:none;display:block}.mat-select-min-line:empty::before{content:\\\" \\\";white-space:pre;width:1px}\\n\"], encapsulation: 2, data: { animation: [\n            matSelectAnimations.transformPanelWrap,\n            matSelectAnimations.transformPanel\n        ] }, changeDetection: 0 });\nMatSelect.propDecorators = {\n    options: [{ type: ContentChildren, args: [MatOption, { descendants: true },] }],\n    optionGroups: [{ type: ContentChildren, args: [MAT_OPTGROUP, { descendants: true },] }],\n    customTrigger: [{ type: ContentChild, args: [MAT_SELECT_TRIGGER,] }]\n};\nconst ɵMatSelect_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(MatSelect);\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSelect, [{\n        type: Component,\n        args: [{\n                selector: 'mat-select',\n                exportAs: 'matSelect',\n                template: \"<!--\\n Note that the select trigger element specifies `aria-owns` pointing to the listbox overlay.\\n While aria-owns is not required for the ARIA 1.2 `role=\\\"combobox\\\"` interaction pattern,\\n it fixes an issue with VoiceOver when the select appears inside of an `aria-model=\\\"true\\\"`\\n element (e.g. a dialog). Without this `aria-owns`, the `aria-modal` on a dialog prevents\\n VoiceOver from \\\"seeing\\\" the select's listbox overlay for aria-activedescendant.\\n Using `aria-owns` re-parents the select overlay so that it works again.\\n See https://github.com/angular/components/issues/20694\\n-->\\n<div cdk-overlay-origin\\n     [attr.aria-owns]=\\\"panelOpen ? id + '-panel' : null\\\"\\n     class=\\\"mat-select-trigger\\\"\\n     (click)=\\\"toggle()\\\"\\n     #origin=\\\"cdkOverlayOrigin\\\"\\n     #trigger>\\n  <div class=\\\"mat-select-value\\\" [ngSwitch]=\\\"empty\\\" [attr.id]=\\\"_valueId\\\">\\n    <span class=\\\"mat-select-placeholder mat-select-min-line\\\" *ngSwitchCase=\\\"true\\\">{{placeholder}}</span>\\n    <span class=\\\"mat-select-value-text\\\" *ngSwitchCase=\\\"false\\\" [ngSwitch]=\\\"!!customTrigger\\\">\\n      <span class=\\\"mat-select-min-line\\\" *ngSwitchDefault>{{triggerValue}}</span>\\n      <ng-content select=\\\"mat-select-trigger\\\" *ngSwitchCase=\\\"true\\\"></ng-content>\\n    </span>\\n  </div>\\n\\n  <div class=\\\"mat-select-arrow-wrapper\\\"><div class=\\\"mat-select-arrow\\\"></div></div>\\n</div>\\n\\n<ng-template\\n  cdk-connected-overlay\\n  cdkConnectedOverlayLockPosition\\n  cdkConnectedOverlayHasBackdrop\\n  cdkConnectedOverlayBackdropClass=\\\"cdk-overlay-transparent-backdrop\\\"\\n  [cdkConnectedOverlayPanelClass]=\\\"_overlayPanelClass\\\"\\n  [cdkConnectedOverlayScrollStrategy]=\\\"_scrollStrategy\\\"\\n  [cdkConnectedOverlayOrigin]=\\\"origin\\\"\\n  [cdkConnectedOverlayOpen]=\\\"panelOpen\\\"\\n  [cdkConnectedOverlayPositions]=\\\"_positions\\\"\\n  [cdkConnectedOverlayMinWidth]=\\\"_triggerRect?.width!\\\"\\n  [cdkConnectedOverlayOffsetY]=\\\"_offsetY\\\"\\n  (backdropClick)=\\\"close()\\\"\\n  (attach)=\\\"_onAttached()\\\"\\n  (detach)=\\\"close()\\\">\\n  <div class=\\\"mat-select-panel-wrap\\\" [@transformPanelWrap]>\\n    <div\\n      #panel\\n      role=\\\"listbox\\\"\\n      tabindex=\\\"-1\\\"\\n      class=\\\"mat-select-panel {{ _getPanelTheme() }}\\\"\\n      [attr.id]=\\\"id + '-panel'\\\"\\n      [attr.aria-multiselectable]=\\\"multiple\\\"\\n      [attr.aria-label]=\\\"ariaLabel || null\\\"\\n      [attr.aria-labelledby]=\\\"_getPanelAriaLabelledby()\\\"\\n      [ngClass]=\\\"panelClass\\\"\\n      [@transformPanel]=\\\"multiple ? 'showing-multiple' : 'showing'\\\"\\n      (@transformPanel.done)=\\\"_panelDoneAnimatingStream.next($event.toState)\\\"\\n      [style.transformOrigin]=\\\"_transformOrigin\\\"\\n      [style.font-size.px]=\\\"_triggerFontSize\\\"\\n      (keydown)=\\\"_handleKeydown($event)\\\">\\n      <ng-content></ng-content>\\n    </div>\\n  </div>\\n</ng-template>\\n\",\n                inputs: ['disabled', 'disableRipple', 'tabIndex'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: {\n                    'role': 'combobox',\n                    'aria-autocomplete': 'none',\n                    // TODO(crisbeto): the value for aria-haspopup should be `listbox`, but currently it's difficult\n                    // to sync into Google, because of an outdated automated a11y check which flags it as an invalid\n                    // value. At some point we should try to switch it back to being `listbox`.\n                    'aria-haspopup': 'true',\n                    'class': 'mat-select',\n                    '[attr.id]': 'id',\n                    '[attr.tabindex]': 'tabIndex',\n                    '[attr.aria-controls]': 'panelOpen ? id + \"-panel\" : null',\n                    '[attr.aria-expanded]': 'panelOpen',\n                    '[attr.aria-label]': 'ariaLabel || null',\n                    '[attr.aria-required]': 'required.toString()',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '[attr.aria-invalid]': 'errorState',\n                    '[attr.aria-describedby]': '_ariaDescribedby || null',\n                    '[attr.aria-activedescendant]': '_getAriaActiveDescendant()',\n                    '[class.mat-select-disabled]': 'disabled',\n                    '[class.mat-select-invalid]': 'errorState',\n                    '[class.mat-select-required]': 'required',\n                    '[class.mat-select-empty]': 'empty',\n                    '[class.mat-select-multiple]': 'multiple',\n                    '(keydown)': '_handleKeydown($event)',\n                    '(focus)': '_onFocus()',\n                    '(blur)': '_onBlur()'\n                },\n                animations: [\n                    matSelectAnimations.transformPanelWrap,\n                    matSelectAnimations.transformPanel\n                ],\n                providers: [\n                    { provide: MatFormFieldControl, useExisting: MatSelect },\n                    { provide: MAT_OPTION_PARENT_COMPONENT, useExisting: MatSelect }\n                ],\n                styles: [\".mat-select{display:inline-block;width:100%;outline:none}.mat-select-trigger{display:inline-table;cursor:pointer;position:relative;box-sizing:border-box}.mat-select-disabled .mat-select-trigger{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-select-value{display:table-cell;max-width:0;width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.mat-select-value-text{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-select-arrow-wrapper{display:table-cell;vertical-align:middle}.mat-form-field-appearance-fill .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-outline .mat-select-arrow-wrapper{transform:translateY(-25%)}.mat-form-field-appearance-standard.mat-form-field-has-label .mat-select:not(.mat-select-empty) .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:none}.mat-select-arrow{width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;margin:0 4px}.mat-select-panel-wrap{flex-basis:100%}.mat-select-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;padding-top:0;padding-bottom:0;max-height:256px;min-width:100%;border-radius:4px;outline:0}.cdk-high-contrast-active .mat-select-panel{outline:solid 1px}.mat-select-panel .mat-optgroup-label,.mat-select-panel .mat-option{font-size:inherit;line-height:3em;height:3em}.mat-form-field-type-mat-select:not(.mat-form-field-disabled) .mat-form-field-flex{cursor:pointer}.mat-form-field-type-mat-select .mat-form-field-label{width:calc(100% - 18px)}.mat-select-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable .mat-select-placeholder{transition:none}.mat-form-field-hide-placeholder .mat-select-placeholder{color:transparent;-webkit-text-fill-color:transparent;transition:none;display:block}.mat-select-min-line:empty::before{content:\\\" \\\";white-space:pre;width:1px}\\n\"]\n            }]\n    }], null, { options: [{\n            type: ContentChildren,\n            args: [MatOption, { descendants: true }]\n        }], optionGroups: [{\n            type: ContentChildren,\n            args: [MAT_OPTGROUP, { descendants: true }]\n        }], customTrigger: [{\n            type: ContentChild,\n            args: [MAT_SELECT_TRIGGER]\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatSelectModule {\n}\nMatSelectModule.ɵfac = function MatSelectModule_Factory(t) { return new (t || MatSelectModule)(); };\nMatSelectModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatSelectModule });\nMatSelectModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ providers: [MAT_SELECT_SCROLL_STRATEGY_PROVIDER], imports: [[\n            CommonModule,\n            OverlayModule,\n            MatOptionModule,\n            MatCommonModule,\n        ], CdkScrollableModule,\n        MatFormFieldModule,\n        MatOptionModule,\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatSelectModule, { declarations: function () { return [MatSelect, MatSelectTrigger]; }, imports: function () { return [CommonModule,\n        OverlayModule,\n        MatOptionModule,\n        MatCommonModule]; }, exports: function () { return [CdkScrollableModule,\n        MatFormFieldModule, MatSelect, MatSelectTrigger, MatOptionModule,\n        MatCommonModule]; } }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSelectModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    OverlayModule,\n                    MatOptionModule,\n                    MatCommonModule,\n                ],\n                exports: [\n                    CdkScrollableModule,\n                    MatFormFieldModule,\n                    MatSelect,\n                    MatSelectTrigger,\n                    MatOptionModule,\n                    MatCommonModule\n                ],\n                declarations: [MatSelect, MatSelectTrigger],\n                providers: [MAT_SELECT_SCROLL_STRATEGY_PROVIDER]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_SELECT_CONFIG, MAT_SELECT_SCROLL_STRATEGY, MAT_SELECT_SCROLL_STRATEGY_PROVIDER, MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY, MAT_SELECT_TRIGGER, MatSelect, MatSelectChange, MatSelectModule, MatSelectTrigger, SELECT_ITEM_HEIGHT_EM, SELECT_MULTIPLE_PANEL_PADDING_X, SELECT_PANEL_INDENT_PADDING_X, SELECT_PANEL_MAX_HEIGHT, SELECT_PANEL_PADDING_X, SELECT_PANEL_VIEWPORT_PADDING, _MatSelectBase, matSelectAnimations };\n\n//# sourceMappingURL=select.js.map","import { Injectable } from '@angular/core';\nimport { EnvironmentService } from 'projects/core/src/lib/services/environment.service';\nimport { HttpService, UserService } from 'projects/core/src/public-api';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class QuoteHeaderService {\n  constructor(\n    private _http: HttpService,\n    private _env: EnvironmentService,\n    private _user: UserService\n  ) {}\n\n  getQuoteSummary<T>(quoteId: any): Observable<T> {\n    return this._http.sendGETRequest(\n      this._env.getEndPoint() + 'quote/items?quote_id=' + quoteId\n    );\n  }\n\n  getUnitQuoteSummary<T>(unitId: any, floorplanId: any, quoteId: any): Observable<T> {\n    const data = {'unit_id':unitId,'floorplan_id':floorplanId,'quote_id': quoteId};\n    return this._http.sendPOSTRequest(\n      this._env.getEndPoint() + 'load/floorplan/unit/products', JSON.stringify(data)\n    );\n  }\n\n  getMoodboardInQuote<T>(quoteId: number): Observable<T> {\n    let data = {\n      quote_id: quoteId,\n    };\n    return this._http.sendPOSTRequest(\n      this._env.getEndPoint() + 'quote/defaultUnit/MbAndIndivisualProds',\n      JSON.stringify(data)\n    );\n  }\n\n  getQuoteInformation<T>(quoteId: number): Observable<T> {\n    return this._http\n      .sendGETRequest(\n        this._env.getEndPoint() + 'load/quote/info?quote_id=' + quoteId\n      )\n      .pipe(map((data: any) => data.quote));\n  }\n\n  getMoodBoardByUser(): Observable<[]> {\n    return this._http.sendPOSTRequest(\n      this._env.getEndPoint() + 'getMoodBoardByUser',\n      JSON.stringify({ userid: this._user.getUser().getId() })\n    );\n  }\n\n  addMoodboard(quoteId: number, moodboardId: number) {\n    let obj = {\n      moodboard_id: moodboardId,\n      quote_id: quoteId,\n      user_id: this._user.getUser().getId(),\n    };\n    return this._http.sendPOSTRequest(\n      this._env.getEndPoint() + 'add/defaultunit/moodboard',\n      JSON.stringify(obj)\n    );\n  }\n\n  // default unit\n  addMDtoFloorPlan(): Observable<any> {\n    return this._http.sendGETRequest('');\n  }\n\n  getMoodboardItems(mdId: number): Observable<any> {\n    return this._http.sendPOSTRequest(\n      this._env.getEndPoint() + 'load/moodboard/items',\n      JSON.stringify({ moodboard_id: mdId })\n    );\n  }\n\n  addMDtoUnit(): Observable<any> {\n    return this._http.sendGETRequest('');\n  }\n  removeMDfromQuote(quoteId: number, moodboardId: number): Observable<any> {\n    return this._http.sendPOSTRequest(\n      this._env.getEndPoint() + 'removeMoodBoardFromQuote',\n      JSON.stringify({ quote_id: quoteId, moodboard_id: moodboardId })\n    );\n  }\n  removeProductfromQuote(quoteId: number, item_id: number): Observable<any> {\n    return this._http.sendPOSTRequest(\n      this._env.getEndPoint() + 'remove/quote/items',\n      JSON.stringify({ quote_id: quoteId, item_id: item_id, })\n    );\n  }\n  \n}\n","import { Routes } from '@angular/router';\nimport { FloorPlanDetailsComponent } from './common/components/floor-plan-details/floor-plan-details.component';\nimport { FloorPlanUnitComponent } from './components/floor-plan-unit/floor-plan-unit.component';\nimport { QuoteCreateComponent } from './components/quote-create/quote-create.component';\nimport { QuoteDetailComponent } from './components/quote-detail/quote-detail.component';\nimport { QuoteListComponent } from './components/quote-list/quote-list.component';\nimport { QuoteComponent } from './components/quote/quote.component';\n\nexport const quoteRoute: Routes = [\n  {\n    path: '',\n    component: QuoteComponent,\n    children: [\n      {\n        path: '',\n        component: QuoteListComponent,\n      },\n      {\n        path: 'create',\n        component: QuoteCreateComponent,\n      },\n      {\n        path: 'edit',\n        component: QuoteCreateComponent,\n      },\n      {\n        path: 'copy',\n        component: QuoteCreateComponent,\n      },\n      {\n        path: ':id',\n        component: QuoteDetailComponent,\n      },\n      {\n        path: ':id/:fpId',\n        component: FloorPlanDetailsComponent,\n      }, {\n        path: ':id/floor-plan-unit/:fpId/unit/:unit_id',\n        component: FloorPlanUnitComponent,\n      }\n    ],\n  },\n];\n","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lib-delete-item',\n  templateUrl: './delete-item.component.html',\n  styleUrls: ['./delete-item.component.scss']\n})\nexport class DeleteItemComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<span class=\"material-icons md-18 icon\"> delete</span>\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { UserService, ToasterService } from 'projects/core/src/public-api';\nimport { QuoteService } from '../../../quote.service';\nimport { AddFPComponent } from '../add-fp/add-fp.component';\n\n@Component({\n  selector: 'lib-add-fpu',\n  templateUrl: './add-fpu.component.html',\n  styleUrls: ['./add-fpu.component.scss'],\n})\nexport class AddFPUComponent implements OnInit {\n  fpuFormGroup = new FormGroup({});\n  quoteId = '';\n  floorPlanTypes: Array<any> = [\n    {\n      name: 'Studio',\n      sgid: 1,\n    },\n    {\n      name: '1 Bedroom',\n      sgid: 2,\n    },\n    {\n      name: '2 Bedroom',\n      sgid: 3,\n    },\n    {\n      name: '3 Bedroom',\n      sgid: 4,\n    },\n    {\n      name: '4 Bedroom',\n      sgid: 5,\n    },\n    {\n      name: '5 Bedroom',\n      sgid: 6,\n    },\n    {\n      name: '6 Bedroom',\n      sgid: 7,\n    },\n    {\n      name: '7 Bedroom',\n      sgid: 8,\n    },\n    {\n      name: '8 Bedroom',\n      sgid: 9,\n    },\n    {\n      name: '9 Bedroom',\n      sgid: 10,\n    },\n    {\n      name: '10 Bedroom',\n      sgid: 11,\n    },\n  ];\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public dialogData: any,\n    private _user: UserService,\n    private _quoteService: QuoteService,\n    private _toaster: ToasterService,\n    private _dialogRef: MatDialogRef<AddFPComponent>\n  ) {}\n\n  ngOnInit(): void {\n    this.quoteId = this.dialogData.quoteId;\n    this.fpuFormGroup.addControl(\n      'units',\n      new FormControl('', [Validators.required])\n    );\n    this.fpuFormGroup.addControl('floorplan_name', new FormControl(''));\n    this.fpuFormGroup.addControl('floorplan_type_id', new FormControl(''));\n  }\n\n  onSubmit() {\n    if(this.fpuFormGroup.value.floorplan_name){\n      if(!this.fpuFormGroup.value.floorplan_type_id){\n        this._toaster.warning('Please select floor plan type')\n        return;\n      }\n    }\n    let obj = this.fpuFormGroup.value;\n    obj.quote_id = this.quoteId;\n    obj.userid = this._user.getUser().getId();\n    this._quoteService.addOptionalUnits(obj).subscribe((resp) => {\n      if (resp.statusCode) {\n        this._toaster.success(resp.message);\n        this._dialogRef.close(1)\n      } else {\n        this._toaster.error(resp.message);\n        this._dialogRef.close(0)\n      }\n    });\n  }\n}\n","<div\n  fxLayout=\"row\"\n  style=\"width: 100%; cursor: pointer\"\n  fxLayoutAlign=\"space-between start\"\n>\n  <span></span>\n  <div class=\"h1\" style=\"margin-bottom: 1rem\">ADD UNIT</div>\n  <i class=\"fa fa-times\" mat-dialog-close aria-hidden=\"true\"></i>\n</div>\n<div style=\"margin-bottom: 1rem\" mat-dialog-content>\n  <form [formGroup]=\"fpuFormGroup\" fxLayout=\"column\" action=\"\">\n    <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\n      <mat-label fxFlex=\"50\">No of Units*</mat-label>\n      <mat-form-field fxFlex=\"50\" appearance=\"outline\">\n        <input formControlName=\"units\" matInput />\n      </mat-form-field>\n    </div>\n    <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\n      <mat-label fxFlex=\"50\">Floor Plan Name (Optional)</mat-label>\n      <mat-form-field fxFlex=\"50\" appearance=\"outline\">\n        <input formControlName=\"floorplan_name\" matInput />\n      </mat-form-field>\n    </div>\n    <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\n      <mat-label fxFlex=\"50\">Floor Plan Type (Optional)</mat-label>\n      <mat-form-field fxFlex=\"50\" appearance=\"outline\">\n        <mat-select formControlName=\"floorplan_type_id\">\n          <mat-option *ngFor=\"let type of floorPlanTypes\" [value]=\"type.sgid\">\n            {{ type.name }}\n          </mat-option>\n        </mat-select>\n      </mat-form-field>\n    </div>\n  </form>\n</div>\n<div mat-dialog-actions fxLayoutAlign=\"center\">\n  <button [disabled]=\"fpuFormGroup.invalid\" (click)=\"onSubmit()\" mat-flat-button color=\"accent\">ADD</button>\n  <button mat-flat-button mat-dialog-close color=\"primary\">\n    CANCEL\n  </button>\n</div>\n","<span  *ngIf=\"status === 1\">Buy</span>\n<span  *ngIf=\"status === 0\">Rent</span>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { ICellRendererAngularComp } from 'ag-grid-angular';\nimport { ICellRendererComp, ICellRendererParams } from 'ag-grid-community';\n\n@Component({\n  selector: 'lib-item-type',\n  templateUrl: './item-type.component.html',\n  styleUrls: ['./item-type.component.scss'],\n})\nexport class ItemTypeComponent implements OnInit, ICellRendererAngularComp {\n   @Input() status = 0;\n\n  constructor() {}\n\n  ngOnInit(): void {}\n\n  agInit(params: ICellRendererParams): void {\n    this.status = params.data.button_type;\n  }\n\n  refresh(params: ICellRendererParams): boolean {\n    this.status = params.data.button_type;\n    return false;\n  }\n}\n","import { Location } from '@angular/common';\nimport { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ActivatedRoute, Params, Route } from '@angular/router';\nimport {\n  GridOptions,\n  GridReadyEvent,\n  ICellRendererParams,\n} from 'ag-grid-community';\nimport {\n  CounterComponent,\n  DialogService,\n  ImageRendererComponent,\n  ToasterService,\n} from 'projects/core/src/public-api';\nimport { DeleteItemComponent } from '../delete-item/delete-item.component';\nimport { MoodboardComponent } from '../moodboard/moodboard.component';\nimport { ItemTypeComponent } from './../../../common/components/item-type/item-type.component';\nimport { TotalCellRendererComponent } from './../../../common/components/total-cell-renderer/total-cell-renderer.component';\nimport { FloorPlanDetailsService } from './floor-plan-details.service';\n\n@Component({\n  selector: 'lib-floor-plan-details',\n  templateUrl: './floor-plan-details.component.html',\n  styleUrls: ['./floor-plan-details.component.scss'],\n})\nexport class FloorPlanDetailsComponent implements OnInit {\n  @ViewChild('dialog') dialog: TemplateRef<any> = {} as TemplateRef<any>;\n  quoteId = '';\n  fpId = '';\n  unitId = '';\n  unitName = '';\n  noOfUnits = '';\n  fpDetails: any = {};\n  moodboardList: Array<any> = [];\n  moodboardWithUnitList: Array<any> = [];\n  fpUnitList: Array<any> = [];\n  quoteMDList = [\n    { name: '1', unitmoodboards: {} },\n    { name: '2', unitmoodboards: {} },\n  ];\n  rowData: Array<any> = [];\n  fpGridApi: GridOptions = {} as GridOptions;\n  fpRowData = [];\n  fpColumnDefs = [\n    {\n      field: 'sgid',\n      width: 140,\n      headerName: 'S. NO',\n      headerTooltip: 'S.NO',\n      colSpan: (params: any) => (params.data.subTotal === 'abc' ? 10 : 1),\n      cellStyle: (params: any) => {\n        if (params.data.subTotal === 'abc') {\n          return { 'text-align': 'end' };\n        }\n        return '';\n      },\n    },\n    { field: 'warehouse_name', headerName: 'CITY' },\n    { field: 'sku', headerName: 'SKU' },\n    {\n      headerName: 'IMAGE',\n      cellRenderer: 'ImageRendererComponent',\n      field: 'product_images.small',\n      cellStyle: {\n        padding: '0.3rem',\n      },\n      // valueGetter: async (params:ICellRendererParams)=>{\n      // let x = await this._core.getBase64Image(params?.data?.product_images?.small).toPromise();\n      // return 'data:image/jpeg;base64' + x?.imageurl;\n      // }\n    },\n    {\n      headerName: 'PRODUCT NAME',\n      field: 'name',\n      width: '250px',\n    },\n    {\n      headerName: 'TYPE',\n      field: 'button_type',\n      cellRenderer: 'ItemTypeCellRenderer',\n      valueGetter: (params: ICellRendererParams) => {\n        return params.data.button_type === 0 ? 'Rent' : 'Buy';\n      },\n    },\n    {\n      headerName: 'QUANTITY',\n      field: 'is_qty',\n      cellRenderer: 'CounterCellRenderer',\n    },\n    {\n      headerName: 'BUY PRICE ($)',\n      field: 'buy_price',\n      valueGetter: (params: ICellRendererParams) => {\n        return params.data.button_type === 1 ? params.data.buy_price : 'NA';\n      },\n    },\n    {\n      headerName: 'RENTAL PRICE/MONTH',\n      field: 'price',\n      cellRenderer: (params: ICellRendererParams) => {\n        return params.data.button_type === 0 ? params.value : 'NA';\n      },\n    },\n    // { headerName: 'DISCOUNT ($)', field: 'discount' },\n\n    {\n      headerName: 'MONTHS',\n      field: 'months',\n    },\n    {\n      headerName: 'TOTAL ($)',\n      field: 'is_total',\n      cellRenderer: 'TotalCellRendererComponent',\n    },\n  ];\n  pinnedBottomRowData = [\n    {\n      subTotal: 'abc',\n      sgid: 'SUB TOTAL',\n      is_total: '0',\n      isExtraRow: true,\n    },\n    {\n      subTotal: 'abc',\n      sgid: 'DELIVERY FEE',\n      is_total: '0',\n      isExtraRow: true,\n    },\n    {\n      subTotal: 'abc',\n      sgid: 'TAXES',\n      is_total: '0',\n      isExtraRow: true,\n    },\n    {\n      subTotal: 'abc',\n      sgid: 'TOTAL',\n      is_total: '0',\n      isExtraRow: true,\n    },\n  ];\n  frameworkComponents = {\n    ImageRendererComponent: ImageRendererComponent,\n    TotalCellRendererComponent: TotalCellRendererComponent,\n    ItemTypeCellRenderer: ItemTypeComponent,\n    CounterCellRenderer: CounterComponent,\n    DeleteItemComponent: DeleteItemComponent,\n  };\n  columnDefs = [\n    { field: 'sub_total', headerName: 'SUB TOTAL (Monthly Rent)' },\n    { field: 'delivery_fee', headerName: 'DELIVERY FEE' },\n    { field: 'tax_amount', headerName: 'TAXES' },\n    { field: 'net_total', headerName: 'TOTAL AMOUNT' },\n    {\n      field: 'pickup_fee',\n      headerName: 'PICKUP FEE (Charged at the end of the lease)',\n    },\n  ];\n  gridOptions: GridOptions = {\n    onGridReady: (api: GridReadyEvent) => {\n      this.onGridReady(api);\n    },\n    rowHeight: 80,\n  };\n  defaultColDef = {\n    wrapText: true,\n    cellClass: 'grid-cell',\n    cellStyle: {\n      'line-height': 'normal',\n      'align-items': 'center',\n      'justify-content': 'center',\n      display: 'flex',\n      padding: '0 0.5rem',\n    },\n  };\n  fpGridOptions: GridOptions = {\n    rowHeight: 60,\n    onGridReady: (api: GridReadyEvent) => {\n      this.fpGridApi = api;\n      this.onGridReady(api);\n    },\n  };\n  constructor(\n    private _fpSevice: FloorPlanDetailsService,\n    private _route: ActivatedRoute,\n    private _location: Location,\n    private _toaster: ToasterService,\n    private _matDialog: MatDialog,\n    private _dialog: DialogService\n  ) {}\n\n  ngOnInit(): void {\n    this._route.params.subscribe((params: Params) => {\n      this.quoteId = params.id;\n      this.fpId = params.fpId;\n      this.getFloorPlanDetails();\n      this.getMoodBoards();\n      this.getFloorPlanUnits();\n      this.getMoodboardWithUnits();\n    });\n  }\n\n  refresh() {\n    this.getFloorPlanDetails();\n    this.getMoodBoards();\n    this.getFloorPlanUnits();\n    this.getMoodboardWithUnits();\n  }\n\n  back() {\n    this._location.back();\n  }\n  onClickMDorProduct(ab: any) {}\n\n  openAddMoodboardDialog() {\n    this._matDialog\n      .open(MoodboardComponent, {\n        width: '50%',\n        data: { quoteId: this.quoteId, fpId: this.fpId },\n      })\n      .afterClosed()\n      .subscribe((data) => {\n        if (data) {\n          this.refresh();\n        }\n      });\n  }\n  onGridReady(evt: GridReadyEvent) {\n    evt.api.sizeColumnsToFit();\n  }\n\n  getMoodBoards() {\n    this._fpSevice.getMoodBoards(this.quoteId, this.fpId).subscribe((data) => {\n      if (data.statusCode == 200) {\n        this.moodboardList = data.floorplans;\n      } else {\n        this.moodboardList = [];\n      }\n    });\n  }\n\n  getFloorPlanUnits() {\n    this._fpSevice\n      .getFloorPlanUnits(this.quoteId, this.fpId)\n      .subscribe((data: any) => {\n        if (data.statusCode) {\n          this.fpUnitList = data?.result;\n          this.getFPSummary(data?.result[0]);\n        } else {\n          this.fpUnitList = [];\n        }\n      });\n  }\n  getFPSummary(unit: any) {\n    this.unitId = unit?.sgid;\n    this.unitName = unit?.name;\n    if (!this.unitId) {\n      return;\n    }\n    this._fpSevice\n      .getFPSummary(this.quoteId, this.fpId, this.unitId)\n      .subscribe((resp) => {\n        this.fpRowData = resp.result.map((data: any) => {\n          data.isDeleteOption = true;\n          return data;\n        });\n        this.updateBottomData(resp.unit, resp.sales_tax_rate);\n        this.setTotalFPSummary(resp.floorplan);\n        this.fpGridApi?.api?.redrawRows();\n      });\n  }\n\n  setTotalFPSummary(fp: any) {\n    this.rowData = [fp];\n  }\n  updateBottomData(data: any, tax: string) {\n    this.pinnedBottomRowData[1].is_total = data?.delivery_fee;\n    this.pinnedBottomRowData[2].sgid = 'TAXES (' + tax + '%)';\n    this.pinnedBottomRowData[2].is_total = data?.tax_amount;\n    this.pinnedBottomRowData[3].is_total = data?.tax_amount;\n  }\n\n  getFloorPlanDetails() {\n    this._fpSevice\n      .getFloorPlanDetails(this.quoteId, this.fpId)\n      .subscribe((resp) => {\n        if (resp.statusCode == 200) {\n          this.fpDetails = resp?.result[0];\n        } else {\n          this.fpDetails = {};\n        }\n      });\n  }\n  changeUnitName() {\n    this._fpSevice\n      .changeUnitName(this.quoteId, this.unitId, this.unitName)\n      .subscribe((data) => {\n        if (data.statusCode == 200) {\n          this._toaster.success(data.result);\n          this.refresh();\n        } else {\n          this._toaster.success(data.result);\n        }\n      });\n  }\n\n  removeUnitFromFP(unit: any) {\n    this._dialog\n      .openConformationDialog({\n        title: 'REMOVE UNIT FROM FLOOR PLAN',\n        suTitle: 'Are you sure you want to delete?',\n        width: '50%',\n      })\n      .afterClosed()\n      .subscribe((data) => {\n        if (data) {\n          this._fpSevice\n            .removeUnitFromFp(this.quoteId, unit?.name, unit?.sgid)\n            .subscribe((resp) => {\n              if (resp.statusCode == 200) {\n                this._toaster.success(resp.message);\n                this.refresh();\n              } else {\n                this._toaster.success(resp.message);\n              }\n            });\n        }\n      });\n  }\n\n  getMoodboardWithUnits() {\n    this._fpSevice.getMoodboardWithUnits(this.quoteId, this.fpId).subscribe(\n      (resp) => {\n        if (resp.statusCode == 200) {\n          this.moodboardWithUnitList = resp.result;\n        } else {\n          this._toaster.error(resp?.message);\n        }\n      },\n      (error) => {\n        this._toaster.error(error?.message);\n      }\n    );\n  }\n\n  addUnitsToFp() {\n    this._fpSevice\n      .addUnitsToFp(this.quoteId, this.fpId, this.noOfUnits)\n      .subscribe((data) => {\n        if (data.statusCode == 200) {\n          this._toaster.success(data.message);\n          this.refresh();\n        } else {\n          this._toaster.success(data.message);\n        }\n      });\n  }\n\n  removeMoodboardFromFP(moodboard: any) {\n    this._dialog\n      .openConformationDialog({\n        title: 'REMOVE MOODBOARD FROM FLOOR PLAN',\n        suTitle: 'Are you sure you want to delete?',\n        width: '50%',\n      })\n      .afterClosed()\n      .subscribe((data) => {\n        if (data) {\n          this._fpSevice\n            .removeMoodboardFromFP(\n              this.quoteId,\n              this.fpId,\n              moodboard.moodboard_id\n            )\n            .subscribe((resp) => {\n              if (resp.statusCode == 200) {\n                this._toaster.success(resp.result);\n                this.refresh()\n              } else {\n                this._toaster.success(resp.result);\n              }\n            });\n        }\n      });\n  }\n\n  openAddDialog() {\n    this._matDialog\n      .open(this.dialog)\n      .afterClosed()\n      .subscribe((data) => {\n        if (data) {\n          this.refresh();\n        }\n      });\n  }\n}\n","<div class=\"fp\" fxLayout=\"column\" fxLayoutGap=\"1.5rem\">\n  <div class=\"fp-col\" fxLayout=\"column\" fxLayoutGap=\"1rem\">\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"1rem\">\n      <mat-icon class=\"back\"\n        ><span (click)=\"back()\" class=\"material-icons\">\n          arrow_back\n        </span></mat-icon\n      >\n      <span>Back to Quote/ {{ fpDetails?.floorname }}</span>\n    </div>\n    <mat-divider></mat-divider>\n    <div fxLayout=\"row\" fxLayoutGap=\"2rem\">\n      <div><span class=\"h2\">FLOOR PLAN:</span> {{ fpDetails?.floorname }}</div>\n      <button class=\"round filter-button\" mat-flat-button>\n        {{ fpDetails?.floorplan_mb_cnt }} Moodboards\n      </button>\n      <button class=\"round filter-button\" mat-flat-button>\n        {{ fpDetails?.total_unit }} Units\n      </button>\n      <button class=\"round filter-button\" mat-flat-button>\n        {{ fpDetails?.floorplan_type_name }}\n      </button>\n    </div>\n    <div class=\"fp__container\" fxLayout=\"row\" fxLayoutGap=\"1rem\">\n      <div fxLayout=\"column\" class=\"fp__container--unit-add g-box-shadow\">\n        <button mat-icon-button (click)=\"openAddDialog()\">\n          <span class=\"material-icons\"> add_circle_outline </span>\n        </button>\n      </div>\n      <div\n        fxLayout=\"column\"\n        *ngFor=\"let unit of fpUnitList\"\n        class=\"fp__container--unit g-box-shadow\"\n      >\n        <i\n          (click)=\"removeUnitFromFP(unit)\"\n          class=\"fa fa-times icon\"\n          aria-hidden=\"true\"\n        ></i>\n        <div class=\"h2\">{{ unit.name }}</div>\n        <div class=\"h3\">Unit</div>\n      </div>\n    </div>\n  </div>\n  <div class=\"fp-col odd\" fxLayout=\"column\" fxLayoutGap=\"1rem\">\n    <div class=\"h2\">ADD/MANAGE MOODBOARDS</div>\n    <div\n      class=\"fp__container\"\n      fxLayout=\"row wrap\"\n      fxLayoutAlign=\"start\"\n      fxLayoutGap=\"1rem\"\n    >\n      <div\n        fxFlex=\"10\"\n        class=\"fp__container--item\"\n        fxLayoutAlign=\"center center\"\n        fxLayout=\"column\"\n        (click)=\"openAddMoodboardDialog()\"\n      >\n        <mat-icon class=\"icon\" inline=\"true\">add_circle_outline</mat-icon>\n      </div>\n      <div\n        fxFlex=\"10\"\n        class=\"fp__container--item\"\n        [ngClass]=\"{}\"\n        *ngFor=\"let moodboard of moodboardList\"\n        fxLayout=\"column\"\n      >\n        <i\n          (click)=\"removeMoodboardFromFP(moodboard)\"\n          class=\"fa fa-times icon\"\n          aria-hidden=\"true\"\n        ></i>\n        <img\n          height=\"110px\"\n          width=\"auto\"\n          (click)=\"onClickMDorProduct(moodboard)\"\n          [src]=\"moodboard?.is_moodboard_images?.small\"\n          alt=\"Moodboard\"\n        />\n        <p>{{ moodboard?.moodboard_name }}</p>\n      </div>\n    </div>\n  </div>\n  <div class=\"fp-col odd\" fxLayout=\"column\" fxLayoutGap=\"1rem\">\n    <div class=\"h2\">MOODBOARD & UNITS</div>\n    <div\n      class=\"fp__container\"\n      fxLayout=\"row\"\n      *ngFor=\"let md of moodboardWithUnitList\"\n      fxLayoutGap=\"1rem\"\n    >\n      <div class=\"fp__container_moodboard\">\n        <img\n          [src]=\"md?.moodboard_images?.small\"\n          height=\"100px\"\n          width=\"100px\"\n          alt=\"\"\n        />\n        <p class=\"h3\">{{ md.moodboard_name }}</p>\n      </div>\n      <mat-divider vertical=\"true\"></mat-divider>\n      <div\n        fxFlex\n        fxLayout=\"row\"\n        fxLayoutAlign=\"start center\"\n        fxLayoutGap=\"1rem\"\n        class=\"fp__container_units\"\n      >\n        <div\n          fxLayout=\"column\"\n          *ngFor=\"let unit of md?.unit_ids\"\n          class=\"fp__container--unit g-box-shadow\"\n        >\n          <div class=\"h2\">{{ unit.name }}</div>\n          <div class=\"h3\">Unit</div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"fp-col odd\" fxLayout=\"column\" fxLayoutGap=\"1rem\">\n    <div class=\"h2\">FLOOR PLAN SUMMARY</div>\n    <div class=\"fp__container\" fxLayout=\"column\" fxLayoutGap=\"1rem\">\n      <div\n        fxFlex\n        fxLayout=\"row\"\n        fxLayoutAlign=\"start center\"\n        fxLayoutGap=\"1rem\"\n        class=\"fp__container_units\"\n      >\n        <div\n          fxLayout=\"column\"\n          *ngFor=\"let unit of fpUnitList\"\n          class=\"fp__container--unit g-box-shadow\"\n          [ngClass]=\"{ selected: unitId == unit.sgid }\"\n          (click)=\"getFPSummary(unit)\"\n        >\n          <div class=\"h2\">{{ unit.name }}</div>\n          <div class=\"h3\">Unit</div>\n        </div>\n      </div>\n      <div\n        class=\"fp__container--input\"\n        fxLayout=\"row\"\n        fxLayoutAlign=\"start center\"\n        fxLayoutGap=\"2rem\"\n      >\n        <mat-label class=\"h3\">Unit Name:</mat-label>\n        <mat-form-field appearance=\"outline\">\n          <input [(ngModel)]=\"unitName\" matInput />\n        </mat-form-field>\n        <button\n          class=\"round\"\n          mat-flat-button\n          color=\"primary\"\n          (click)=\"changeUnitName()\"\n        >\n          Change Unit Name\n        </button>\n      </div>\n      <ag-grid-angular\n        [gridOptions]=\"fpGridOptions\"\n        style=\"height: 600px; width: 100%\"\n        class=\"ag-theme-alpine fp__container--grid quotes-table\"\n        [rowData]=\"fpRowData\"\n        [columnDefs]=\"fpColumnDefs\"\n        [pinnedBottomRowData]=\"pinnedBottomRowData\"\n        [frameworkComponents]=\"frameworkComponents\"\n        [defaultColDef]=\"defaultColDef\"\n      >\n      </ag-grid-angular>\n    </div>\n  </div>\n  <div class=\"fp-col odd\" fxLayout=\"column\" fxLayoutGap=\"1rem\">\n    <div class=\"h2\">TOTAL FLOOR PLAN SUMMARY</div>\n    <div class=\"fp__container\">\n      <ag-grid-angular\n        [gridOptions]=\"gridOptions\"\n        style=\"height: 131px; width: 100%\"\n        class=\"ag-theme-alpine quotes-table\"\n        [rowData]=\"rowData\"\n        [columnDefs]=\"columnDefs\"\n        [defaultColDef]=\"defaultColDef\"\n      >\n      </ag-grid-angular>\n    </div>\n  </div>\n</div>\n\n<ng-template #dialog>\n  <div fxLayout=\"column\" fxLayoutAlign=\"center center\">\n    <div class=\"h2\">ADD NUMBER OF UNITS</div>\n    <mat-dialog-content>\n      <div fxLayout=\"row\" fxLayoutGap=\"2rem\" fxLayoutAlign=\"center center\">\n        <mat-label> No. of units:</mat-label>\n        <mat-form-field appearance=\"outline\">\n          <input type=\"text\" [(ngModel)]=\"noOfUnits\" matInput />\n        </mat-form-field>\n      </div>\n    </mat-dialog-content>\n    <mat-dialog-actions>\n      <button mat-flat-button (click)=\"addUnitsToFp()\" color=\"accent\">\n        ADD\n      </button>\n    </mat-dialog-actions>\n  </div>\n</ng-template>\n","import { Injectable } from '@angular/core';\nimport { EnvironmentService, HttpService } from 'projects/core/src/public-api';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class QuoteService {\n  constructor(private http: HttpService, private env: EnvironmentService) {}\n  getCompanyList(): Observable<any> {\n    return this.http.sendGETRequest(\n      this.env.getEndPoint() + 'getCompanyListNew'\n    );\n  }\n\n  getProjectList(companyId: any): Observable<any> {\n    return this.http.sendGETRequest(\n      this.env.getEndPoint() + 'getProjectListNew?company_id=' + companyId\n    );\n  }\n\n  getFloorPlan(quoteId: number): Observable<any> {\n    return this.http.sendPOSTRequest(\n      this.env.getEndPoint() + 'getFloorplanDetails',\n      JSON.stringify({ quote_id: quoteId })\n    );\n  }\n\n  createFloorPlan(obj: any): Observable<any> {\n    return this.http.sendPOSTRequest(\n      this.env.getEndPoint() + 'addFloorPlan',\n      JSON.stringify(obj)\n    );\n  }\n\n  removeFloorPlanFromQuote(\n    quoteId: number,\n    floorPlanId: number\n  ): Observable<any> {\n    return this.http.sendPOSTRequest(\n      this.env.getEndPoint() + 'removeFloorPlan',\n      JSON.stringify({ quote_id: quoteId, floorplan_id: floorPlanId })\n    );\n  }\n  getUnits(obj: any): Observable<any> {\n    return this.http.sendPOSTRequest(\n      this.env.getEndPoint() + 'getFloorPlan/Quote/WithUnits',\n      JSON.stringify(obj)\n    );\n  }\n\n  addOptionalUnits(obj: any): Observable<any> {\n    return this.http.sendPOSTRequest(\n      this.env.getEndPoint() + 'addUnit/optional/floorplan',\n      JSON.stringify(obj)\n    );\n  }\n  addMBQuote(obj: any) {\n    return this.http.sendPOSTRequest(\n      this.env.getEndPoint() + 'add/moodboard/quote',\n      JSON.stringify(obj)\n    );\n  }\n  addProductQuote(obj: any) {\n    return this.http.sendPOSTRequest(\n      this.env.getEndPoint() + 'put/product/commonQuoteForProductAndMoodboard',\n      JSON.stringify(obj)\n    );\n  }\n  getFpu(obj: any) {\n    return this.http.sendPOSTRequest(\n      this.env.getEndPoint() + 'add/moodboard/quote',\n      JSON.stringify(obj)\n    );\n  }\n  getFpus(obj: any) {\n    return this.http.sendPOSTRequest(\n      this.env.getEndPoint() + 'getFloorPlanUnits',\n      JSON.stringify(obj)\n    );\n  }\n  getFpuWithoutFP(obj: any) {\n    return this.http.sendPOSTRequest(\n      this.env.getEndPoint() + 'getUnitsWithoutDefaultUnit',\n      JSON.stringify(obj)\n    );\n  }\n  addFPMB(obj: any) {\n    return this.http.sendPOSTRequest(\n      this.env.getEndPoint() + 'add/floorplan/moodboard',\n      JSON.stringify(obj)\n    );\n  }\n  addFPUMB(obj: any) {\n    return this.http.sendPOSTRequest(\n      this.env.getEndPoint() + 'add/moodboard/all/units',\n      JSON.stringify(obj)\n    );\n  }\n  addFPQuote(obj: any) {\n    return this.http.sendPOSTRequest(\n      this.env.getEndPoint() + 'addProduct/Quote/FloorplanUnits',\n      JSON.stringify(obj)\n    );\n  }\n\n  addFPUQuote(obj: any) {\n    return this.http.sendPOSTRequest(\n      this.env.getEndPoint() + 'addProduct/Quote/AllUnits',\n      JSON.stringify(obj)\n    );\n  }\n\n  addQuoteMoodboard(obj: any) {\n    return this.http.sendPOSTRequest(\n      this.env.getEndPoint() + 'add/defaultunit/moodboard',\n      JSON.stringify(obj)\n    );\n  }\n\n  removeUnitFromFp(\n    quoteId: number,\n    unitName: string,\n    unitId: string\n  ): Observable<any> {\n    return this.http.sendPOSTRequest(\n      this.env.getEndPoint() + 'removeUnit',\n      JSON.stringify({ quote_id: quoteId, unit: unitName, sgid: unitId })\n    );\n  }\n}\n","import { identifierModuleUrl } from '@angular/compiler';\nimport { Component, Inject, Input, OnInit } from '@angular/core';\nimport {\n  MatDialog,\n  MatDialogRef,\n  MAT_DIALOG_DATA,\n} from '@angular/material/dialog';\nimport { ToasterService, UserService } from 'projects/core/src/public-api';\nimport { QuoteService } from '../../../quote.service';\nimport { QuoteHeaderService } from '../quote-header/quote-header.service';\n\n@Component({\n  selector: 'lib-moodboard',\n  templateUrl: './moodboard.component.html',\n  styleUrls: ['./moodboard.component.scss'],\n})\nexport class MoodboardComponent implements OnInit {\n  @Input() fpId = '';\n  @Input() quoteId = '';\n  @Input() unit_id = '';\n  mbList: any = [];\n  selectedFpid: any = '';\n  selectedMBId = '';\n  isSelectedAll: any = true;\n  fpuList: any = [];\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public dialogData: any,\n    public _dialogRef: MatDialogRef<MoodboardComponent>,\n    private _quoteService: QuoteService,\n    private _toaster: ToasterService,\n    private _quoteHeaderService: QuoteHeaderService\n  ) {\n    this.fpId = dialogData?.fpId ?? '';\n    this.quoteId = dialogData?.quoteId ?? '';\n    this.unit_id = dialogData?.unit_id ?? '';\n  }\n\n  ngOnInit(): void {\n    this.getMoodboardList();\n  }\n  getMoodboardList() {\n    this._quoteHeaderService.getMoodBoardByUser().subscribe(\n      (resp: any) => {\n        this.mbList = resp.result;\n      },\n      (error) => {\n        this.mbList = [];\n        this._toaster.error('Something went wrong!');\n      }\n    );\n  }\n  selectUnitsForPlans(unit: any) {\n    if (unit.isActive) {\n      let checker = 0;\n      this.fpuList.forEach((elem: any) => {\n        if (elem.isActive) {\n          checker++;\n        }\n      });\n      if (checker > 1) {\n        unit.isActive = false;\n      } else {\n      }\n    } else {\n      unit.isActive = true;\n    }\n  }\n  isAllUnit(bool: any) {\n    if (bool) {\n      this.isSelectedAll = true;\n      this.fpuList.forEach((elem: any) => {\n        elem.isActive = true;\n      });\n    } else {\n      this.isSelectedAll = false;\n      this.fpuList.forEach((elem: any) => {\n        elem.isActive = false;\n      });\n    }\n  }\n  getFPU(ev: any) {\n    this.selectedMBId = ev.target.value;\n    if (this.unit_id) return;\n    \n    let obj = {\n      floorplan_id: this.fpId,\n      quote_id: this.quoteId,\n      mid: ev.target.value,\n    };\n    this._quoteService.getFpus(obj).subscribe(\n      (resp: any) => {\n        this.fpuList = resp.result;\n        this.isAllUnit(1);\n      },\n      (error) => {\n        this.fpuList = [];\n        this._toaster.error('Something went wrong!');\n      }\n    );\n  }\n  add() {\n    if (\n      !this.unit_id &&\n      this.fpuList?.filter((x: any) => x.isActive)?.length <= 0\n    ) {\n      this._toaster.warning('Select at-least one unit');\n      return;\n    }\n    let obj = {\n      quote_id: this.quoteId,\n      moodboard_id: this.selectedMBId,\n      floorplan_id: this.fpId,\n      units: this.unit_id\n        ? [this.unit_id]\n        : this.fpuList.filter((x: any) => x.isActive).map((x: any) => x.sgid),\n    };\n\n    this._quoteService.addFPMB(obj).subscribe(\n      (resp: any) => {\n        if (resp.statusCode == 200) {\n          this._toaster.success(resp.message);\n          this._dialogRef.close(1);\n        } else {\n          this._toaster.success(resp.message);\n          this._dialogRef.close(0);\n        }\n      },\n      (error) => {\n        this._toaster.success(error.message);\n      }\n    );\n  }\n}\n","<div\n  fxLayout=\"row\"\n  style=\"width: 100%; cursor: pointer\"\n  fxLayoutAlign=\"space-between start\"\n>\n<span></span>\n<i class=\"fa fa-times\" mat-dialog-close aria-hidden=\"true\"></i>\n</div>\n<div style=\"margin-bottom: 1rem\"  mat-dialog-content>\n    <div   fxLayout=\"row\"\n      style=\"width: 98%; background: #F4F4F4;padding: 22px; margin: 2%;\"\n      fxLayoutAlign=\"space-between start\"\n    >\n        <div   fxLayout=\"column\" \n        style=\"width: 100%;\"\n        fxLayoutAlign=\"space-between start\"\n        >  \n            <span class=\"titeltxt\"> Add a moodboard</span>   \n            <span class=\"txt\"> Select a Moodboard to be added to this quote. </span> \n            <select style=\"width: 60%; padding: 5px; \" (change)=\"getFPU($event)\">\n                <option [value]=''>Choose existing moodboard</option>\n                <option *ngFor=\"let mb of mbList\" [value]=\"mb.id\">\n                  {{ mb.boardname }}\n                </option>\n              </select>  \n        </div>\n\n        <button mat-flat-button color=\"accent\" (click)=\"add()\" class=\"btn-txt\"> ADD </button>\n    </div>  \n    <div fxLayout=\"row\" style=\"padding: 0px 20px;\" *ngIf=\"!unit_id\">\n        \n        <label class=\"form-check-label\" style=\"padding: 10px;\"> \n          <input type=\"radio\" class=\"form-check-input\" (click)='isAllUnit(1)' [checked]='true' name=\"optradio\">All\n          Units\n        </label>\n        <label style=\"padding: 10px;\" class=\"form-check-label\">\n          <input type=\"radio\" class=\"form-check-input\" (click)='isAllUnit(0)' name=\"optradio\">Selected Unit\n        </label>\n      </div>\n      <div fxLayout=\"row wrap\"\n      style=\"width: 98%; background: #F4F4F4; margin: 2%;\"\n      fxLayoutAlign=\"space-between start\"\n      class=\"nofptxt d-flex  justify-content-center p-2 my-3\"\n      >\n    <div *ngFor='let unit of fpuList' [ngClass]=\"{'allow-click': isSelectedAll ? true : false}\"\n    (click)='selectUnitsForPlans(unit)' class=\"unit-box  add-unit-mb\">\n      <div>{{unit.unit}}</div> \n      <div>unit</div>\n    <span aria-hidden=\"true\" [ngClass]=\"{'fa-check':(unit.isActive) ? true : false}\"\n      class=\"px-2 pb-1 cross-close fa \" style=\"padding: 4px; color: green;\"></span></div>\n    </div>\n    \n    \n</div>\n","import { Component, Inject, OnInit } from '@angular/core';\nimport {\n  MatDialog,\n  MatDialogRef,\n  MAT_DIALOG_DATA,\n} from '@angular/material/dialog';\nimport { ToasterService, UserService } from 'projects/core/src/public-api';\nimport { QuoteService } from '../../../quote.service';\nimport { AddFPUComponent } from '../add-fpu/add-fpu.component';\nimport { AddProductService } from '../addproduct/add-product.service';\nimport { SelectFpComponent } from '../select-fp/select-fp.component';\n\n@Component({\n  selector: 'lib-select-fpu',\n  templateUrl: './select-fpu.component.html',\n  styleUrls: ['./select-fpu.component.scss'],\n})\nexport class SelectFpuComponent implements OnInit {\n  selectedFpid: any = '';\n  isSelectedAll: any = true;\n  fpuList: any = [];\n\n  constructor(\n    private _dialog: MatDialog,\n    @Inject(MAT_DIALOG_DATA) public dialogData: any,\n    private _user: UserService,\n    private _quoteService: QuoteService,\n    private _toaster: ToasterService,\n    private _dialogRef: MatDialogRef<SelectFpComponent>,\n    private _addProductService: AddProductService\n  ) {}\n\n  ngOnInit(): void {\n    let obj = {\n      quote_id: this.dialogData.qid,\n    };\n    this._quoteService.getFpuWithoutFP(obj).subscribe((resp: any) => {\n      if (resp.statusCode == 200) {\n        this.fpuList = resp.result;\n        this.fpuList.forEach((elem: any, index: any) => {\n          elem.isActive = true;\n        });\n        // this._toaster.success(resp.message);\n        // this._dialogRef.close(1);\n      } else {\n        // this._toaster.success(resp.message);\n        // this._dialogRef.close(0);\n      }\n    });\n  }\n  selectUnitsForPlans(unit: any) {\n    if (unit.isActive) {\n      let checker = 0;\n      this.fpuList.forEach((elem: any) => {\n        if (elem.isActive) {\n          checker++;\n        }\n      });\n      if (checker > 1) {\n        unit.isActive = false;\n      } else {\n      }\n    } else {\n      unit.isActive = true;\n    }\n  }\n  isAllUnit(bool: any) {\n    if (bool) {\n      this.isSelectedAll = true;\n      this.fpuList.forEach((elem: any) => {\n        elem.isActive = true;\n      });\n    } else {\n      this.isSelectedAll = false;\n    }\n  }\n  onCancel() {\n    this._dialogRef.close(0);\n  }\n  onSubmit() {\n    let unitList: any = [];\n    if (this.isSelectedAll == true) {\n      this.fpuList.forEach((element: any) => {\n        unitList.push(element.sgid);\n      });\n    } else {\n      this.fpuList.forEach((element: any) => {\n        if (element.isActive == false) unitList.push(element.sgid);\n      });\n    }\n    if (this.dialogData.product_id) {\n      let obj = {\n        quote_id: this.dialogData.qid,\n        user_id: this._user.getUser().getId(),\n        units: unitList,\n        product_id: this.dialogData.product_id,\n        sku: this.dialogData.sku,\n        quantity: this.dialogData.quantity,\n        button_type: this.dialogData.button_type,\n        month: this.dialogData.month,\n        warehouse_id: this.dialogData.warehouse_id,\n        source: this.dialogData.source,\n      };\n\n      this._quoteService.addFPUQuote(obj).subscribe((resp: any) => {\n        if (resp.statusCode == 200) {\n          this._toaster.success(resp.result);\n          this._dialogRef.close(1);\n        } else {\n          this._toaster.success(resp.result);\n          this._dialogRef.close(0);\n        }\n      });\n    } else {\n      let obj = {\n        quote_id: this.dialogData.qid,\n        moodboard_id: this.dialogData.mid,\n        user_id: this._user.getUser().getId(),\n        units: unitList,\n        source: this.dialogData.source,\n      };\n\n      this._quoteService.addFPUMB(obj).subscribe((resp: any) => {\n        if (resp.statusCode == 200) {\n          this._toaster.success(resp.result);\n          this._dialogRef.close({ event: 'success' });\n        } else {\n          this._toaster.success(resp.result);\n          this._dialogRef.close(0);\n        }\n      });\n    }\n  }\n  onCreateNewFPU() {\n    this._dialog\n      .open(AddFPUComponent, {\n        height: '70%',\n        width: '70%',\n        data: {\n          isDialog: true,\n        },\n      })\n      .afterClosed()\n      .subscribe((data) => {\n        console.log(data);\n      });\n  }\n}\n","<div fxLayout=\"row\" style=\"width: 100%;cursor: pointer;\" fxLayoutAlign=\"space-between start\" >\n    <div style=\"margin-bottom: 2rem\"> Add/Select Unit(s) </div>\n    <i class=\"fa fa-times\" mat-dialog-close aria-hidden=\"true\"></i>\n</div>\n<div style=\"margin-bottom: 2rem\" mat-dialog-content>\n    <div   fxLayout=\"column\" style=\"width: 100%; \" fxLayoutAlign=\"space-between start\" >\n        <div   fxLayout=\"row\"\n        style=\"width: 100%; margin: 2%; \"\n        fxLayoutAlign=\"center\"\n        class=\"txt\"\n      >\n      <a mat-button style=\"padding: 0px 10px 0px 9px; margin: -4px -5px -5px 0px;\" (click)=\"onCreateNewFPU()\" class=\"add\">\n        <img src=\"assets/quote/images/SVG-Icons-06.svg\">\n      </a>\n      <span style=\"padding: 8px;\">Add moodboard to existing unit(s)or create new unit(s)</span>\n  \n      \n    </div>\n    <div fxLayout=\"row\">\n        <label  class=\"form-check-label\" style=\"padding: 10px;\">Assign this Moodboard to:\n            </label>\n        <label class=\"form-check-label\" style=\"padding: 10px;\"> \n          <input type=\"radio\" class=\"form-check-input\" (click)='isAllUnit(1)' [checked]='true' name=\"optradio\">All\n          Units\n        </label>\n        <label style=\"padding: 10px;\" class=\"form-check-label\">\n          <input type=\"radio\" class=\"form-check-input\" (click)='isAllUnit(0)' name=\"optradio\">Selected Unit\n        </label>\n      </div>\n      <div fxLayout=\"row wrap\"\n      style=\"width: 98%; background: #F4F4F4; margin: 2%;\"\n      fxLayoutAlign=\"space-between start\"\n      class=\"nofptxt d-flex  justify-content-center p-2 my-3\"\n      >\n    <div *ngFor='let unit of fpuList' [ngClass]=\"{'allow-click': isSelectedAll ? true : false}\"\n    (click)='selectUnitsForPlans(unit)' class=\"unit-box  add-unit-mb\">\n      <div>{{unit.unit}}</div> \n      <div>unit</div>\n    <span aria-hidden=\"true\" [ngClass]=\"{'fa-check':(unit.isActive) ? true : false}\"\n      class=\"px-2 pb-1 cross-close fa \" style=\"padding: 4px; color: green;\"></span></div>\n    </div>\n    </div>\n</div>  \n<div mat-dialog-actions fxLayoutAlign=\"center\">\n    <button (click)=\"onSubmit()\" class=\"btn-add\" mat-button color=\"accent\">ADD</button>\n    <button mat-button (click)=\"onCancel();\" class=\"btn-cancel\"color=\"primary\">CANCEL</button>\n  </div>\n  ","import { Injectable } from '@angular/core';\nimport {\n  EnvironmentService,\n  HttpService,\n  ToasterService,\n} from 'projects/core/src/public-api';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class FloorPlanDetailsService {\n  constructor(\n    private _http: HttpService,\n    private _env: EnvironmentService,\n    private _toaster: ToasterService\n  ) {}\n\n  getMoodBoards(quoteId: string, fpId: string): Observable<any> {\n    return this._http.sendGETRequest(\n      this._env.getEndPoint() +\n        'load/floorplan/moodboards?quote_id=' +\n        quoteId +\n        '&floorplan_id=' +\n        fpId\n    );\n  }\n\n  getUnitMoodBoards(quoteId: string, fpId: string, unitID: any): Observable<any> {\n    const data = {sgid: unitID};\n    return this._http.sendPOSTRequest(\n      this._env.getEndPoint() +\n        'getUnitMoodboards', JSON.stringify(data)\n    );\n  }\n\n  getFloorPlanUnits(quoteId: string, fpId: string) {\n    return this._http.sendGETRequest(\n      this._env.getEndPoint() +\n        'getFloorPlanUnits?quote_id=' +\n        quoteId +\n        '&floorplan_id=' +\n        fpId\n    );\n  }\n\n  getFPSummary(quoteId: string, fpId: string, unitId: string): Observable<any> {\n    return this._http.sendPOSTRequest(\n      this._env.getEndPoint() + 'load/floorplan/unit/products',\n      JSON.stringify({ unit_id: unitId, floorplan_id: fpId, quote_id: quoteId })\n    );\n  }\n\n  getFPList(id: any): Observable<any> {\n    return this._http.sendPOSTRequest(\n      this._env.getEndPoint() + 'getFloorplanDetails',\n      JSON.stringify({quote_id : id})\n    );\n  }\n\n  getFloorPlanDetails(quoteId: string, fpId: string): Observable<any> {\n    return this._http.sendPOSTRequest(\n      this._env.getEndPoint() + 'getFloorplanDetails',\n      JSON.stringify({ quote_id: quoteId, floorplan_id: fpId })\n    );\n  }\n\n  addFloorPlanUnit(unit: any, floorplan_id: any, quote_id: any, sgid: any) {\n    const data = {unit, floorplan_id, quote_id, sgid};\n    return this._http.sendPOSTRequest(\n      this._env.getEndPoint() + 'addUnitFloorPlan',\n      JSON.stringify(data)\n    );\n  }\n\n  removeUnitFromFp(\n    quoteId: string,\n    unitName: string,\n    unitId: string\n  ): Observable<any> {\n    return this._http.sendPOSTRequest(\n      this._env.getEndPoint() + 'removeUnit',\n      JSON.stringify({ quote_id: quoteId, unit: unitName, sgid: unitId })\n    );\n  }\n\n  removeMoodboardFromFP(\n    quoteId: string,\n    fpId: string,\n    mdId: string\n  ): Observable<any> {\n    return this._http.sendPOSTRequest(\n      this._env.getEndPoint() + 'remove/floorplan/moodboard',\n      JSON.stringify({\n        quote_id: quoteId,\n        moodboard_id: mdId,\n        floorplan_id: fpId,\n      })\n    );\n  }\n  removeMoodboardFromFPUnits(quoteId: string, fpId: string, mdId: string, unit: string\n  ): Observable<any> {\n    return this._http.sendPOSTRequest(\n      this._env.getEndPoint() + 'remove/floorplan/moodboard',\n      JSON.stringify({\n        quote_id: quoteId,\n        moodboard_id: mdId,\n        floorplan_id: fpId,\n        unit_id: unit\n      })\n    );\n  }\n\n  getMoodboardWithUnits(quoteId: string, fpId: string): Observable<any> {\n    return this._http.sendPOSTRequest(\n      this._env.getEndPoint() + 'quote/moodboardInFloorplan/units',\n      JSON.stringify({ quote_id: quoteId, floorplan_id: fpId })\n    );\n  }\n\n  changeUnitName(\n    quoteId: string,\n    unitId: string,\n    unitName: string\n  ): Observable<any> {\n    return this._http.sendPOSTRequest(\n      this._env.getEndPoint() + 'update/UnitName',\n      JSON.stringify({\n        unit_id: unitId,\n        quote_id: quoteId,\n        unit_name: unitName,\n      })\n    );\n  }\n\n  addUnitsToFp(quoteId: string, fpId: string, units: string): Observable<any> {\n    return this._http.sendPOSTRequest(\n      this._env.getEndPoint() + 'addFloorPlanUnits',\n      JSON.stringify({ quote_id: quoteId, unit: units, floorplan_id: fpId })\n    );\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n@Component({\n  selector: 'lib-quote',\n  templateUrl: './quote.component.html',\n  styleUrls: ['./quote.component.scss'],\n})\nexport class QuoteComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit() {}\n}\n","<router-outlet></router-outlet>","import { Component, OnInit } from '@angular/core';\nimport { ICellRendererAngularComp } from 'ag-grid-angular';\nimport { ICellRendererParams } from 'ag-grid-community';\nimport { ComputationService } from 'projects/core/src/public-api';\n\n@Component({\n  selector: 'lib-total-cell-renderer',\n  templateUrl: './total-cell-renderer.component.html',\n  styleUrls: ['./total-cell-renderer.component.scss'],\n})\nexport class TotalCellRendererComponent\n  implements OnInit, ICellRendererAngularComp\n{\n  isDelete = false;\n  value: number = 0;\n  constructor(private _computationService: ComputationService) {}\n\n  ngOnInit(): void {}\n\n  agInit(params: ICellRendererParams): void {\n    let isExtraRow = params?.data?.isExtraRow;\n    this.isDelete = params?.data?.isDeleteOption;\n    if (isExtraRow) {\n      let keys = params.data.sgid;\n      switch (keys) {\n        case 'SUB TOTAL':\n          this.value = this._computationService.getSubTotal(params);\n          break;\n        case 'TOTAL':\n          let subTotal = this._computationService.getSubTotal(params);\n          let deliveryFee = parseFloat(\n            params.api.getValue('is_total', params.api.getPinnedBottomRow(1))\n          );\n          let taxAmount = parseFloat(\n            params.api.getValue('is_total', params.api.getPinnedBottomRow(2))\n          );\n          this.value = this._computationService.getTotalAmount(\n            subTotal,\n            deliveryFee,\n            taxAmount\n          );\n          break;\n        default:\n          this.value = params.value;\n          break;\n      }\n    } else {\n      let price = this.getItemPrice(params);\n      let discount = parseFloat(params.data.discount ?? 0);\n      let quantity = parseFloat(params.data.is_qty ?? 0);\n      this.value = this._computationService.getProductTotalAmount(\n        price,\n        discount,\n        quantity\n      );\n    }\n    params.node.setDataValue(params.column?.getId() as string, this.value);\n    // params.api.redrawRows();\n  }\n\n  refresh(params: ICellRendererParams): boolean {\n    this.agInit(params);\n    return true;\n  }\n\n  getItemPrice(params: ICellRendererParams): number {\n    let price =\n      params.data.button_type === 0\n        ? params.data.price ?? 0\n        : params.data.buy_price ?? 0;\n    return parseFloat(price);\n  }\n}\n","<span fxLayout=\"row\" fxLayoutGap=\".5rem\">\n  <span> {{ value | number: \"1.2-2\" }}</span>\n  <!-- <lib-delete-item *ngIf=\"isDelete\"></lib-delete-item> -->\n</span>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport {  MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatSelectModule } from '@angular/material/select';\nimport { RouterModule } from '@angular/router';\nimport { AgGridModule } from 'ag-grid-angular';\nimport { CoreModule } from 'projects/core/src/public-api';\nimport { QuoteCommonModule } from './common/quote-common.module';\nimport { QuoteCreateComponent } from './components/quote-create/quote-create.component';\nimport { QuoteListComponent } from './components/quote-list/quote-list.component';\nimport { QuoteComponent } from './components/quote/quote.component';\nimport {MatRadioModule} from '@angular/material/radio';\nimport { quoteRoute } from './quote-routing';\nimport { QuoteDetailComponent } from './components/quote-detail/quote-detail.component';\nimport { FloorPlanUnitComponent } from './components/floor-plan-unit/floor-plan-unit.component';\nimport { MatDividerModule } from '@angular/material/divider';\nimport {MatInputModule} from '@angular/material/input';\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [QuoteListComponent, QuoteComponent,QuoteCreateComponent, FloorPlanUnitComponent, QuoteDetailComponent],\n  imports: [\n    CommonModule,\n    MatButtonModule,\n    MatIconModule,\n    FlexLayoutModule,\n    QuoteCommonModule,\n    MatDialogModule,\n    CoreModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    AgGridModule,\n    MatRadioModule,\n    RouterModule.forChild(quoteRoute),\n    MatDividerModule,\n    MatInputModule,\n    FormsModule,\n  ],\n  exports: [],\n})\nexport class QuoteModule {}\n"],"sourceRoot":"webpack:///"}