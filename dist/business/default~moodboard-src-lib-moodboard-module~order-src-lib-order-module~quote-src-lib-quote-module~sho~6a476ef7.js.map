{"version":3,"sources":["./projects/quote/src/lib/common/components/add-fp/add-fp.component.ts","./projects/quote/src/lib/common/components/add-fp/add-fp.component.html","./projects/quote/src/lib/components/quote-list/quote-list.component.ts","./projects/quote/src/lib/components/quote-list/quote-list.component.html","./projects/quote/src/lib/common/components/addproduct/add-product.service.ts","./projects/quote/src/lib/components/quote-list/quote-list.service.ts","./projects/quote/src/lib/components/quote-detail/quote-detail.component.ts","./projects/quote/src/lib/components/quote-detail/quote-detail.component.html","./projects/quote/src/lib/common/components/add-moodboard-quote/add-moodboard-quote.component.ts","./projects/quote/src/lib/common/components/add-moodboard-quote/add-moodboard-quote.component.html","./projects/quote/src/lib/components/quote-create/quote-create.component.ts","./projects/quote/src/lib/components/quote-create/quote-create.component.html","./projects/quote/src/lib/common/components/select-fp/select-fp.component.ts","./projects/quote/src/lib/common/components/select-fp/select-fp.component.html","./projects/quote/src/lib/common/components/addproduct/addproduct.component.ts","./projects/quote/src/lib/common/components/addproduct/addproduct.component.html","./projects/quote/src/lib/components/floor-plan-unit/floor-plan-unit.component.ts","./projects/quote/src/lib/components/floor-plan-unit/floor-plan-unit.component.html","./projects/quote/src/lib/common/quote-common.module.ts","./projects/quote/src/lib/components/quote/quote-detail.service.ts","./projects/quote/src/lib/common/components/quote-create-form/quote-create-form.component.ts","./projects/quote/src/lib/common/components/quote-create-form/quote-create-form.component.html","./projects/quote/src/lib/common/components/quote-header/quote-header.component.ts","./projects/quote/src/lib/common/components/quote-header/quote-header.component.html","./projects/quote/src/lib/common/components/quote-create-form/quote-create-form.service.ts","./projects/quote/src/lib/common/components/quote-header/quote-header.service.ts","./projects/quote/src/lib/quote-routing.ts","./projects/quote/src/lib/common/components/delete-item/delete-item.component.ts","./projects/quote/src/lib/common/components/delete-item/delete-item.component.html","./projects/quote/src/lib/common/components/add-fpu/add-fpu.component.ts","./projects/quote/src/lib/common/components/add-fpu/add-fpu.component.html","./projects/quote/src/lib/common/components/item-type/item-type.component.html","./projects/quote/src/lib/common/components/item-type/item-type.component.ts","./projects/quote/src/lib/common/components/floor-plan-details/floor-plan-details.component.ts","./projects/quote/src/lib/common/components/floor-plan-details/floor-plan-details.component.html","./node_modules/tslib/tslib.es6.js","./projects/quote/src/lib/quote.service.ts","./projects/quote/src/lib/common/components/moodboard/moodboard.component.ts","./projects/quote/src/lib/common/components/moodboard/moodboard.component.html","./projects/quote/src/lib/common/components/select-fpu/select-fpu.component.ts","./projects/quote/src/lib/common/components/select-fpu/select-fpu.component.html","./projects/quote/src/lib/common/components/floor-plan-details/floor-plan-details.service.ts","./projects/quote/src/lib/components/quote/quote.component.ts","./projects/quote/src/lib/components/quote/quote.component.html","./projects/quote/src/lib/common/components/total-cell-renderer/total-cell-renderer.component.ts","./projects/quote/src/lib/common/components/total-cell-renderer/total-cell-renderer.component.html","./projects/quote/src/lib/quote.module.ts"],"names":[],"mappings":";;;;;;;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoE;AACK;;;;;;;;;;;;;;;ICuB/D,iFAAoE;IAClE,uDACF;IAAA,4DAAa;;;IAFmC,+EAAmB;IACjE,0DACF;IADE,wFACF;;ADfH,MAAM,cAAc;IAGzB,YACkC,UAAe,EACvC,KAAkB,EAClB,aAA2B,EAC3B,QAAwB,EACxB,UAAwC,EACxC,kBAAqC;QALb,eAAU,GAAV,UAAU,CAAK;QACvC,UAAK,GAAL,KAAK,CAAa;QAClB,kBAAa,GAAb,aAAa,CAAc;QAC3B,aAAQ,GAAR,QAAQ,CAAgB;QACxB,eAAU,GAAV,UAAU,CAA8B;QACxC,uBAAkB,GAAlB,kBAAkB,CAAmB;QARtC,YAAO,GAAG,EAAE,CAAC;QAUtB,sBAAiB,GAAG,EAAE,CAAC;QACvB,mBAAc,GAAe;YAC3B;gBACE,IAAI,EAAE,QAAQ;gBACd,IAAI,EAAE,CAAC;aACR;YACD;gBACE,IAAI,EAAE,WAAW;gBACjB,IAAI,EAAE,CAAC;aACR;YACD;gBACE,IAAI,EAAE,WAAW;gBACjB,IAAI,EAAE,CAAC;aACR;YACD;gBACE,IAAI,EAAE,WAAW;gBACjB,IAAI,EAAE,CAAC;aACR;YACD;gBACE,IAAI,EAAE,WAAW;gBACjB,IAAI,EAAE,CAAC;aACR;YACD;gBACE,IAAI,EAAE,WAAW;gBACjB,IAAI,EAAE,CAAC;aACR;YACD;gBACE,IAAI,EAAE,WAAW;gBACjB,IAAI,EAAE,CAAC;aACR;YACD;gBACE,IAAI,EAAE,WAAW;gBACjB,IAAI,EAAE,CAAC;aACR;YACD;gBACE,IAAI,EAAE,WAAW;gBACjB,IAAI,EAAE,CAAC;aACR;YACD;gBACE,IAAI,EAAE,WAAW;gBACjB,IAAI,EAAE,EAAE;aACT;YACD;gBACE,IAAI,EAAE,YAAY;gBAClB,IAAI,EAAE,EAAE;aACT;SACF,CAAC;QACF,uBAAkB,GAAG,IAAI,wDAAS,CAAC,EAAE,CAAC,CAAC;IAhDpC,CAAC;IAiDJ,QAAQ;QACN,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC;QACvC,IAAI,CAAC,kBAAkB,CAAC,UAAU,CAChC,gBAAgB,EAChB,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC,CAC3C,CAAC;QACF,IAAI,CAAC,kBAAkB,CAAC,UAAU,CAChC,mBAAmB,EACnB,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC,CAC3C,CAAC;QACF,IAAI,CAAC,kBAAkB,CAAC,UAAU,CAChC,OAAO,EACP,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC,CAC3C,CAAC;IAEJ,CAAC;IACD,QAAQ;QACN,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IAC3B,CAAC;IACD,QAAQ;QACN,IAAI,GAAG,GAAG,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC;QACxC,GAAG,CAAC,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC;QAC5B,GAAG,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC,KAAK,EAAE,CAAC;QAC1C,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;YACzD,IAAI,IAAI,CAAC,UAAU,IAAI,GAAG,EAAE;gBAC1B,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBACpC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;gBACzB,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,EAAC,KAAK,EAAG,SAAS,EAAC,CAAC;aAC3C;iBAAM;gBACL,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBACpC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;aAC1B;QACH,CAAC,CAAC,CAAC;IACL,CAAC;;4EA5FU,cAAc,kEAIf,wEAAe;8FAJd,cAAc;QCZ3B,yEAIC;QACC,yEAAiC;QAAA,8EAAmB;QAAA,4DAAM;QAC1D,kEAA+D;QACjE,4DAAM;QACN,yEAAoD;QAClD,0EAKC;QACC,yEAA6D;QAC3D,+EAA8B;QAAA,2EAAgB;QAAA,4DAAY;QAC1D,oFAAqC;QACnC,uEAAmD;QACrD,4DAAiB;QACnB,4DAAM;QACN,0EAA6D;QAC3D,gFAA8B;QAAA,4EAAgB;QAAA,4DAAY;QAC1D,qFAAqC;QACnC,iFAAgD;QAC9C,2HAEa;QACf,4DAAa;QACf,4DAAiB;QACnB,4DAAM;QACN,0EAA6D;QAC3D,gFAA8B;QAAA,wEAAY;QAAA,4DAAY;QACtD,qFAAqC;QACnC,wEAA0C;QAC5C,4DAAiB;QACnB,4DAAM;QACR,4DAAO;QACT,4DAAM;QACN,2EAA+C;QAC7C,8EAMC;QAJC,uIAAS,cAAU,IAAC;QAKpB,iEACF;QAAA,4DAAS;QACT,8EAA2E;QAArC,uIAAS,cAAU,IAAC;QACxD,oEACF;QAAA,4DAAS;QACX,4DAAM;;QA1CF,0DAAgC;QAAhC,6FAAgC;QAeG,2DAAiB;QAAjB,uFAAiB;QAkBpD,0DAAuC;QAAvC,oGAAuC;;;;;;;;;;;;;;ACvC3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGsC;AACJ;;;;;;;;;;;;;;ICmCxB,6EAA2E;IAAA,uDAAwB;IAAA,4DAAS;;;IAAhE,0FAA8B;IAAC,0DAAwB;IAAxB,wFAAwB;;;IAiBnG,6EAA2E;IAAA,uDAAwB;IAAA,4DAAS;;;IAAhE,0FAA8B;IAAC,0DAAwB;IAAxB,wFAAwB;;AD3CtG,MAAM,kBAAkB;IA2D7B,YACU,iBAAmC,EACnC,OAAe,EACf,YAAyB;QAFzB,sBAAiB,GAAjB,iBAAiB,CAAkB;QACnC,YAAO,GAAP,OAAO,CAAQ;QACf,iBAAY,GAAZ,YAAY,CAAa;QA7DnC,cAAS,GAAG;YACV,aAAa,EAAE,mCAAmC;YAClD,gBAAgB,EAAE,YAAY;YAC9B,SAAS,EAAE,sCAAsC;YACjD,YAAY,EAAE,oBAAoB;YAClC,eAAe,EACb,qEAAqE;YACvE,IAAI,EAAE,OAAO;SACd,CAAC;QACF,gBAAW,GAAQ,EAAE;QAErB,eAAU,GAAG;YACX,EAAE,KAAK,EAAE,MAAM,EAAE,UAAU,EAAE,cAAc,EAAE;YAC7C,EAAE,KAAK,EAAE,MAAM,EAAE,UAAU,EAAE,eAAe,EAAE;YAC9C,EAAE,KAAK,EAAE,cAAc,EAAE,UAAU,EAAE,cAAc,EAAE;YACrD,EAAE,KAAK,EAAE,cAAc,EAAE,UAAU,EAAE,cAAc,EAAE;YACrD;gBACE,KAAK,EAAE,YAAY;gBACnB,UAAU,EAAE,oBAAoB;gBAChC,cAAc,EAAG,CAAC,MAA0B,EAAC,EAAE;;oBAC7C,mBAAO,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,IAAI,0CAAE,UAAU,0CAAE,KAAK,CAAC,GAAG,EAAE,CAAC,EAAE;gBACjD,CAAC;aACF;YACD;gBACE,KAAK,EAAE,UAAU;gBACjB,UAAU,EAAE,iBAAiB;gBAC7B,aAAa,EAAE,CAAC,MAAW,EAAE,EAAE;oBAC7B,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;gBACtB,CAAC;aACF;SACF,CAAC;QAEF,kBAAa,GAAG;YACd,QAAQ,EAAE,IAAI;YACd,SAAS,EAAE,WAAW;YACtB,SAAS,EAAE;gBACT,aAAa,EAAE,QAAQ;gBACvB,aAAa,EAAE,QAAQ;gBACvB,iBAAiB,EAAE,QAAQ;gBAC3B,OAAO,EAAE,MAAM;gBACf,OAAO,EAAE,UAAU;aACpB;SACF,CAAC;QAEF,YAAO,GAAsB,IAAI,+CAAU,EAAE,CAAC;QAC9C,gBAAW,GAAgB;YACzB,YAAY,EAAE,CAAC,KAAK,EAAE,EAAE,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC;YACjD,oBAAoB;YACpB,SAAS,EAAE,EAAE;YACb,WAAW,EAAE,CAAC,GAAmB,EAAE,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC;SAC5D,CAAC;QAEF,mBAAc,GAA2B,UAAU,CAAC;QACpD,wBAAmB,GAAG;YACpB,sBAAsB,EAAE,mFAAsB;SAC/C,CAAC;QACF,gBAAW,GAAQ,EAAE;QACrB,oBAAe,GAAQ,EAAE,CAAC;IAKvB,CAAC;IAEJ,QAAQ;QACN,IAAI,CAAC,cAAc,EAAE;IACvB,CAAC;IACD,WAAW,CAAC,GAAmB;QAC7B,IAAI,CAAC,YAAY,EAAE;QACnB,GAAG,CAAC,GAAG,CAAC,gBAAgB,EAAE,CAAC;IAC7B,CAAC;IAED,YAAY,CAAC,KAAU;;QACrB,IAAI,OAAO,SAAG,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,IAAI,0CAAE,IAAI,CAAC;QAChC,IAAI,YAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,IAAI,0CAAE,YAAY,KAAI,OAAO,EAAE;YACxC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,CAAC;SAC3C;aAAM,IAAI,OAAO,EAAE;YAClB,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,CAAC;SAC3C;IACH,CAAC;IAED,YAAY;QACV,wBAAwB;QACxB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,iBAAiB,CAAC,YAAY,CAChD,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,CAAC,KAAK,EAAE,EACnC,IAAI,CAAC,cAAc,IAAI,SAAS,EAAC,KAAI,EAAC,GAAE,EACxC,QAAQ,EACR,IAAI,CAAC,eAAe,CACrB,CAAC;IACJ,CAAC;IACD,OAAO;QACL,IAAI,CAAC,cAAc,GAAG,SAAS,CAAC;QAChC,IAAI,CAAC,YAAY,EAAE;IACrB,CAAC;IACD,QAAQ;QACN,IAAI,CAAC,cAAc,GAAE,UAAU,CAAC;QAChC,IAAI,CAAC,YAAY,EAAE,CAAC;IACtB,CAAC;IAED,YAAY,CAAC,EAAO;QAClB,IAAG,EAAE,CAAC,KAAK,IAAI,CAAC,EAAE;YAChB,IAAI,CAAC,QAAQ,EAAE,CAAC;SACjB;QACD,IAAG,EAAE,CAAC,KAAK,IAAI,CAAC,EAAE;YAChB,IAAI,CAAC,OAAO,EAAE,CAAC;SAChB;IACH,CAAC;IAED,cAAc;QACZ,IAAI,MAAM,GAAI,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,CAAC,KAAK,EAAE,CAAC;QAClD,IAAI,CAAC,iBAAiB,CAAC,cAAc,CAAC,IAAI,CAAC,cAAc,IAAI,SAAS,EAAC,CAAC,IAAI,EAAC,MAAK,EAAC,MAAM,CAAC,CAAC,SAAS,CAAC,CAAC,QAAY,EAAE,EAAE;YACpH,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC,YAAY,CAAC;QAC3C,CAAC,CAAC,CAAC;IACL,CAAC;IAED,WAAW;QACT,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;IAC1C,CAAC;IAED,aAAa,CAAC,KAAU;QACtB,IAAI,CAAC,eAAe,GAAG,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,MAAM,CAAC,KAAK,CAAC;QAC3C,IAAI,CAAC,YAAY,EAAE,CAAC;IACtB,CAAC;;oFA3HU,kBAAkB;kGAAlB,kBAAkB;QCjB/B,yEAA+D;QAC7D,2EAOc;QAEd,yEAKC;QACC,4EAAkD;QAAxB,0IAAS,iBAAa,IAAC;QAC/C,8EAAwB;QAAA,6EAAkB;QAAA,4DAAW;QACvD,4DAAS;QACT,0EAAiC;QAAA,6EAAkB;QAAA,4DAAO;QAO5D,4DAAM;QAWN,sFAC8E;QAA3D,+KAAqB,wBAAoB,IAAE;QAC5D,8EAA6B;QAC3B,0EAAoD;QAClD,8EAA4E;QAApE,mJAAU,yBAAqB,IAAC;QACtC,8EAAiB;QAAA,4EAAgB;QAAA,4DAAS;QAC1C,uHAA4G;QAC9G,4DAAS;QACX,4DAAM;QACN,kFAQkB;;QACpB,4DAAU;QACV,+EAA2B;QACzB,0EAAoD;QAClD,8EAA4E;QAApE,mJAAU,yBAAqB,IAAC;QACtC,8EAAiB;QAAA,4EAAgB;QAAA,4DAAS;QAC1C,uHAA4G;QAC9G,4DAAS;QACX,4DAAM;QACN,kFAQkB;;QACpB,4DAAU;QACZ,4DAAgB;QAUlB,4DAAM;;QAjFF,0DAAmC;QAAnC,gGAAmC;QAuCU,2DAAkC;QAAlC,wFAAkC;QAE7C,0DAAc;QAAd,oFAAc;QAI9C,0DAA+B;QAA/B,4FAA+B;QAWY,0DAAkC;QAAlC,wFAAkC;QAE7C,0DAAc;QAAd,oFAAc;QAI9C,0DAA+B;QAA/B,4FAA+B;;;;;;;;;;;;;;;;;;;;ACzD9B,MAAM,iBAAiB;IAE5B,YACY,KAAkB,EAClB,IAAwB,EACxB,KAAkB;QAFlB,UAAK,GAAL,KAAK,CAAa;QAClB,SAAI,GAAJ,IAAI,CAAoB;QACxB,UAAK,GAAL,KAAK,CAAa;IACxB,CAAC;IACL,SAAS,CAAC,EAAO;QACf,IAAI,GAAG,GAAG,qBAAqB,CAAC;QAChC,OAAO,IAAI,CAAC,KAAK,CAAC,eAAe,CAC/B,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,GAAG,GAAG,EAC7B,IAAI,CAAC,SAAS,CAAC,EAAC,UAAU,EAAG,EAAE,EAAC,CAAC,CAClC,CAAC;IACJ,CAAC;IACD,aAAa;QACX,IAAI,GAAG,GAAG,kBAAkB,CAAC;QAC7B,OAAO,IAAI,CAAC,KAAK,CAAC,cAAc,CAC9B,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,GAAG,GAAG,CAC9B,CAAC;IACJ,CAAC;;kFAnBQ,iBAAiB;oGAAjB,iBAAiB,WAAjB,iBAAiB,mBAFhB,MAAM;;;;;;;;;;;;;ACDpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAqC;;;;AAK9B,MAAM,gBAAgB;IAC3B,YAAoB,IAAiB,EAAU,GAAuB;QAAlD,SAAI,GAAJ,IAAI,CAAa;QAAU,QAAG,GAAH,GAAG,CAAoB;IAAG,CAAC;IAE1E,YAAY,CACV,MAAc,EACd,IAAa,EACb,UAAmB,EACnB,cAAsB,EAAE;QAExB,IAAI,GAAG,GACL,+BAA+B;YAC/B,MAAM;YACN,eAAe;YACf,IAAI;YACJ,QAAQ;YACR,UAAU;YACV,gBAAgB;YAChB,WAAW,CAAC;QACd,OAAO,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,GAAG,GAAG,CAAC,CAAC,IAAI,CAChE,0DAAG,CAAC,CAAC,IAAS,EAAE,EAAE;YAChB,OAAO,IAAI,CAAC,KAAK,CAAC;QACpB,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IAED,cAAc,CAAC,UAAkB,EAAE,MAAc;QAC/C,OAAO,IAAI,CAAC,IAAI,CAAC,cAAc,CAC7B,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE;YACpB,qCAAqC;YACrC,eAAe;YACf,UAAU;YACV,UAAU;YACV,MAAM,CACT,CAAC;IACJ,CAAC;;gFAlCU,gBAAgB;mGAAhB,gBAAgB,WAAhB,gBAAgB,mBAFf,MAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACJkB;AACZ;AACc;AAOF;;;;;;;;;;;;;ICN9B,4EAKC;IADC,6TAAuB;IAEvB,yEACF;IAAA,4DAAS;;;;IAET,4EAMC;IADC,mUAA6B;IAE7B,gFACF;IAAA,4DAAS;;ADFV,MAAM,oBAAoB;IAI/B,YACU,MAAsB,EACtB,mBAAuC,EACvC,QAAwB,EACxB,OAAkB,EAClB,KAAkB,EAClB,KAAkB,EAClB,IAAgB,EAChB,OAAe;QAPf,WAAM,GAAN,MAAM,CAAgB;QACtB,wBAAmB,GAAnB,mBAAmB,CAAoB;QACvC,aAAQ,GAAR,QAAQ,CAAgB;QACxB,YAAO,GAAP,OAAO,CAAW;QAClB,UAAK,GAAL,KAAK,CAAa;QAClB,UAAK,GAAL,KAAK,CAAa;QAClB,SAAI,GAAJ,IAAI,CAAY;QAChB,YAAO,GAAP,OAAO,CAAQ;QAXzB,YAAO,GAAW,CAAC,CAAC;QACM,gBAAW,GACnC,EAA0B,CAAC;IAU1B,CAAC;IAEJ,QAAQ;QACN,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,MAAc,EAAE,EAAE;YAC9C,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,EAAE,CAAC;QAC3B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,SAAS;;QACP,IAAI,SAAS,GAAe,EAAE,CAAC;QAC/B,IAAI,YAAY,GAAG,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC;QACjD,IAAI,aAAa,GAAG,IAAI,CAAC,WAAW,CAAC,mBAAmB,CAAC;QACzD,IAAI,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC;QACrC,YAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,GAAG,0CAAE,WAAW,CAAC,CAAC,OAAO,EAAE,EAAE;YACnC,IAAI,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC;YACxB,IAAI,GAAG,GAAQ;gBACb,IAAI,EAAE,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,IAAI;gBAChB,WAAW,EAAE,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,WAAW;gBAC9B,QAAQ,EAAE,YAAY,CAAC,IAAI;gBAC3B,SAAS,EAAE,aAAa,CAAC,CAAC,CAAC,CAAC,QAAQ;gBACpC,SAAS,EAAE,IAAI,CAAC,SAAS;gBACzB,YAAY,EAAE,YAAY,CAAC,YAAY;gBACvC,YAAY,EAAE,YAAY,CAAC,YAAY;gBACvC,UAAU,EAAE,YAAY,CAAC,UAAU;gBACnC,GAAG,EAAE,aAAa,CAAC,CAAC,CAAC,CAAC,QAAQ;gBAC9B,SAAS,EAAE,YAAY,CAAC,SAAS;gBACjC,GAAG,EAAE,IAAI,CAAC,MAAM;gBAChB,QAAQ,EAAE,IAAI,CAAC,QAAQ,IAAI,CAAC;gBAC5B,cAAc,EAAE,YAAY,CAAC,QAAQ,IAAI,CAAC;gBAC1C,oBAAoB,EAAE,YAAY,CAAC,cAAc,IAAI,CAAC;gBACtD,mBAAmB,EAAE,IAAI,CAAC,mBAAmB,IAAI,CAAC;gBAClD,MAAM,EAAE,IAAI,CAAC,MAAM;gBACnB,KAAK,EAAE,IAAI,CAAC,QAAQ;gBACpB,KAAK,EAAE,IAAI,CAAC,KAAK;gBACjB,SAAS,EAAE,IAAI,CAAC,SAAS;gBACzB,UAAU,EAAE,IAAI,CAAC,KAAK;gBACtB,kBAAkB,EAAE,IAAI,CAAC,YAAY,IAAI,CAAC;aAC3C,CAAC;YACF,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACtB,CAAC,EAAE;QACH,IAAI,CAAC,mBAAmB,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC,SAAS,CACvD,CAAC,IAAI,EAAE,EAAE;YACP,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,0BAA0B,CAAC,CAAC;QACpD,CAAC,EACD,CAAC,KAAK,EAAE,EAAE;YACR,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QAC7B,CAAC,CACF,CAAC;IACJ,CAAC;IAED,iBAAiB;;QACf,IAAI,CAAC,OAAO;aACT,IAAI,CAAC,6EAAgB,EAAE;YACtB,MAAM,EAAE,OAAO;YACf,IAAI,EAAE,EAAE,OAAO,cAAE,IAAI,CAAC,WAAW,0CAAE,YAAY,0CAAE,IAAI,EAAE;SACxD,CAAC;aACD,WAAW,EAAE;aACb,SAAS,CACR,CAAC,IAAI,EAAE,EAAE;;YACP,IAAI,CAAC,UAAU,CAAC,eAAG,IAAI,CAAC,WAAW,0CAAE,YAAY,0CAAE,IAAI,CAAC;YACxD,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC,KAAK,EAAE,CAAC;YAC5C,IAAI,CAAC,mBAAmB,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,SAAS,CAClD,CAAC,IAAQ,EAAE,EAAE;;gBACX,IAAG,IAAI,CAAC,UAAU,IAAI,GAAG,EAAC;oBACxB,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;oBACnC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC;wBACpB,OAAO;oCACP,IAAI,CAAC,WAAW,0CAAE,YAAY,0CAAE,IAAI;qBACrC,CAAC,CAAC;iBACJ;qBAAM;oBACL,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;iBACpC;YACH,CAAC,EACD,CAAC,KAAK,EAAE,EAAE;gBACR,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,KAAK,CAAC;YAC9B,CAAC,CACF,CAAC;QACJ,CAAC,EACD,CAAC,KAAK,EAAE,EAAE,GAAE,CAAC,CACd,CAAC;IACN,CAAC;IAEK,WAAW;;YACf,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;YACtE,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE;YACpB,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC;YAC5B,IAAI,GAAG,GAAG,QAAQ,CAAC,sBAAsB,CAAC,YAAY,CAAC,CAAC,CAAC,CAAQ,CAAC;YAClE,MAAM,WAAW,GAAG,MAAM,kDAAW,CAAC,GAAG,CAAC,CAAC;YAC3C,MAAM,YAAY,GAAG,WAAW,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;YACxD,IAAI,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,uBAAuB,CAAC,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,IAAU,EAAE,CAAC,CAAC,CAAC;YACvE,SAAS,CAAC,SAAS,CAAC,CAAC,MAAW,EAAE,EAAE;;gBAClC,IAAI,GAAG,GAAG,IAAI,6CAAK,EAAE,CAAC;gBACtB,MAAM,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;gBACrC,MAAM,aAAa,GAAG,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC;gBAC9C,GAAG,CAAC,YAAY,CAAC,QAAQ,CAAC,IAAI,EAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;gBAC/C,GAAG,CAAC,YAAY,CAAC,aAAa,CAAC,IAAI,EAAC,aAAa,CAAC,KAAK,CAAC,CAAC;gBAEzD,GAAG,CAAC,OAAO,CAAC,aAAa,EAAE,SAAS,EAAE,QAAQ,CAAC,CAAC;gBAChD,GAAG,CAAC,OAAO,CAAC,kBAAkB,EAAE,cAAc,EAAE,MAAM,CAAC,CAAC;gBACxD,mCAAmC;gBACnC,GAAG,CAAC,OAAO,CAAC,cAAc,EAAC,MAAM,CAAC,CAAC;gBACnC,GAAG,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;gBACpB,GAAG,CAAC,QAAQ,CAAC,YAAY,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;gBAChD,GAAG,CAAC,IAAI,CAAC,mBAAmB,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;gBACrC,IAAI,IAAI,GAAG;oBACT,CAAC,eAAe,EAAE,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,YAAY,EAAE,SAAS,EAAE,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,OAAO,CAAC;oBAC/G,CAAC,eAAe,EAAE,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,YAAY,EAAE,SAAS,EAAE,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,IAAI,CAAC;oBAC5G,CAAC,aAAa,EAAE,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,SAAS,EAAE,QAAQ,EAAE,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,aAAa,CAAC;oBAC/G,CAAC,gBAAgB,EAAE,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,IAAI,EAAE,QAAQ,EAAE,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,KAAK,CAAC;oBACrG,CAAC,OAAO,EAAE,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,SAAS,EAAE,UAAU,EAAE,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,OAAO,CAAC;iBACtG,CAAC;gBACF,sDAAS,CAAC,GAAG,kCACR,IAAI,CAAC,IAAI,CAAC,8BAA8B,EAAE,KAC7C,MAAM,EAAC,EAAE,EACT,IAAI,EAAE,IAAI,EACV,MAAM,EAAE,EAAE,QAAQ,EAAE,CAAC,EAAE,EACvB,YAAY,EAAE;wBACZ,CAAC,EAAE,EAAE,SAAS,EAAE,EAAE,EAAG,IAAI,EAAC,cAAc,EAAC,SAAS,EAAE,MAAM,EAAC;wBAC3D,CAAC,EAAE,EAAE,SAAS,EAAE,EAAE,EAAG,IAAI,EAAC,SAAS,EAAG,SAAS,EAAE,QAAQ,EAAC;wBAC1D,CAAC,EAAE,EAAE,SAAS,EAAE,EAAE,EAAG,IAAI,EAAC,cAAc,EAAC,SAAS,EAAE,MAAM,EAAC;wBAC3D,CAAC,EAAE,EAAE,IAAI,EAAC,SAAS,EAAG,SAAS,EAAE,QAAQ,EAAC;qBAC3C,IAED,CAAC;gBACT,sBAAsB;gBAChB,GAAG,CAAC,IAAI,CAAC,eAAe,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;gBACjC,sDAAS,CAAC,GAAG,kCACR,IAAI,CAAC,IAAI,CAAC,0BAA0B,EAAE,KACzC,MAAM,EAAC,EAAE,EACT,YAAY,EAAE,OAAO;oBACvB,cAAc;oBACd,eAAe;oBACf,kBAAkB;oBAClB,eAAe;oBACf,gBAAgB;oBAChB,KAAK;oBACL,YAAY,EAAE;wBACV,CAAC,EAAE,EAAE,SAAS,EAAE,EAAE,EAAE;wBACpB,CAAC,EAAE,EAAE,SAAS,EAAE,EAAE,EAAE;wBACpB,CAAC,EAAE,EAAE,SAAS,EAAE,EAAE,EAAE;wBACpB,CAAC,EAAE,EAAE,SAAS,EAAE,EAAE,EAAE;wBACpB,CAAC,EAAE,EAAE,SAAS,EAAE,EAAE,EAAE;wBACpB,CAAC,EAAE,EAAE,SAAS,EAAE,EAAE,EAAE;wBACpB,CAAC,EAAE,EAAE,SAAS,EAAE,EAAE,EAAE;wBACpB,CAAC,EAAE,EAAE,SAAS,EAAE,EAAE,EAAE;wBACpB,CAAC,EAAE,EAAE,SAAS,EAAE,EAAE,EAAE;wBACpB,EAAE,EAAE,EAAE,SAAS,EAAE,EAAE,EAAE;wBACrB,EAAE,EAAE,EAAE,SAAS,EAAE,EAAE,EAAE;qBACtB,EACD,OAAO,EAAE,IAAI,CAAC,OAAO,EACrB,IAAI,QAAE,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,IAAI,0CAAE,GAAG,CAAC,CAAC,CAAM,EAAE,EAAE;wBAC/B,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;4BACnB,IAAI,IAAI,GAAG,EAAE,CAAC;4BACd,IAAI,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,CAAC;4BACpD,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;4BAC3B,CAAC,GAAG,IAAI,CAAC;yBACV;wBACD,OAAO,CAAC,CAAC;oBACX,CAAC,GACD,YAAY,EAAE,CAAC,IAAQ,EAAE,EAAE;wBACzB,IAAI,IAAI,CAAC,OAAO,KAAK,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,KAAK,KAAK,CAAC,EAAE;4BACtD,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC;4BACnB,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;4BACpB,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,QAAQ,CAAC;4BACnC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,QAAQ,CAAC;yBACpC;wBACD,IAAI,IAAI,CAAC,OAAO,KAAK,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,KAAK,KAAK,EAAE,EAAE;4BACvD,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;yBACvC;oBACH,CAAC,EACD,WAAW,EAAE,CAAC,IAAQ,EAAE,EAAE;wBACxB,IAAI,IAAI,CAAC,OAAO,KAAK,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,KAAK,KAAK,CAAC,EAAE;4BACtD,IAAI,SAAS,GAAG,yBAAyB,GAAG,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;4BACnE,GAAG,CAAC,QAAQ,CACV,SAAS,EACT,MAAM,EACN,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,EACf,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,EACf,EAAE,EACF,EAAE,CACH,CAAC;4BACF,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,QAAQ,CAAC;4BACnC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,QAAQ;yBACnC;oBACH,CAAC,IACD,CAAC;gBACH,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;YACxB,CAAC,CAAC,CAAC;QACL,CAAC;KAAA;;wFAzMU,oBAAoB;oGAApB,oBAAoB;;;;;;QCrBjC,sEAAK;QACD,yFAA0D;QACxD,2EAAsB;QACpB,4EAA2E;QAAtB,4IAAS,eAAW,IAAC;QACxE,uEACF;QAAA,4DAAS;QACT,sHAOS;QACT,qEAAoB;QACpB,sHAQS;QACX,qEAAe;QACjB,4DAAmB;QACrB,4DAAM;QACN,sEAA6B;;;QA1BW,0DAAmB;QAAnB,gFAAmB;QAQlD,0DAA2B;QAA3B,+EAA2B;QAU3B,0DAA2B;QAA3B,+EAA2B;;;;;;;;;;;;;;AClBtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoF;AAIf;AACG;;;;;;;;;;;ICUxD,6EAA2E;IAAA,uDAAuB;IAAA,4DAAS;;;IAAzD,oFAAwB;IAAC,0DAAuB;IAAvB,uFAAuB;;ADH3G,MAAM,0BAA0B;IAKrC,YAAoB,mBAAuC,EACzB,UAAe,EACvC,KAAkB,EAAU,aAA2B,EACvD,QAAwB,EACxB,UAAqB,EACtB,SAA4B;QALjB,wBAAmB,GAAnB,mBAAmB,CAAoB;QACzB,eAAU,GAAV,UAAU,CAAK;QACvC,UAAK,GAAL,KAAK,CAAa;QAAU,kBAAa,GAAb,aAAa,CAAc;QACvD,aAAQ,GAAR,QAAQ,CAAgB;QACxB,eAAU,GAAV,UAAU,CAAW;QACtB,cAAS,GAAT,SAAS,CAAmB;QAPrC,sBAAiB,GAAQ,EAAE;IAOc,CAAC;IAE1C,QAAQ;QACN,IAAI,CAAC,aAAa,EAAE,CAAC;IACvB,CAAC;IAED,aAAa;QACX,IAAI,CAAC,mBAAmB,CAAC,kBAAkB,EAAE,CAAC,SAAS,CACrD,CAAC,IAAS,EAAE,EAAE;YACZ,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,MAAM,CAAC;QACnC,CAAC,EACD,CAAC,KAAK,EAAE,EAAE;YACR,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;QAC1B,CAAC,CACF,CAAC;IACJ,CAAC;IAED,GAAG,CAAC,IAAS;QACX,IAAI,IAAI,IAAI,EAAE,EAAE;YACd,IAAI,GAAG,GAAG;gBACR,QAAQ,EAAE,IAAI,CAAC,UAAU,CAAC,OAAO;gBACjC,YAAY,EAAE,IAAI,CAAC,iBAAiB;gBACpC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC,KAAK,EAAE;aACtC,CAAC;YACF,IAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,CAAC,IAAS,EAAE,EAAE;gBAChE,IAAI,IAAI,CAAC,UAAU,IAAI,GAAG,EAAE;oBAC1B,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;oBACpC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,KAAK,EAAE,aAAa,EAAE,CAAC,CAAC;iBAChD;qBAAM;oBACL,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;oBACpC,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC;iBAC5B;YACH,CAAC,CAAC,CAAC;SACJ;QACD,IAAI,IAAI,IAAI,IAAI,EAAE;YAChB,IAAI,CAAC,UAAU;iBACZ,IAAI,CAAC,gFAAiB,EAAE;gBACvB,MAAM,EAAE,KAAK;gBACb,KAAK,EAAE,KAAK;gBACZ,IAAI,EAAE;oBACJ,QAAQ,EAAE,IAAI;oBACd,GAAG,EAAE,IAAI,CAAC,UAAU,CAAC,OAAO;oBAC5B,GAAG,EAAE,IAAI,CAAC,iBAAiB;iBAC5B;aACF,CAAC;iBACD,WAAW,EAAE;iBACb,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;gBAClB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;gBAClB,IAAI,IAAI,IAAI,IAAI,CAAC,KAAK,IAAI,SAAS,EAAE;oBACnC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,KAAK,EAAE,WAAW,EAAE,CAAC,CAAC;iBAC9C;YACH,CAAC,CAAC,CAAC;SACN;QACD,IAAI,IAAI,IAAI,KAAK,EAAE;YACjB,IAAI,CAAC,UAAU;iBACZ,IAAI,CAAC,mFAAkB,EAAE;gBACxB,MAAM,EAAE,KAAK;gBACb,KAAK,EAAE,KAAK;gBACZ,IAAI,EAAE;oBACJ,QAAQ,EAAE,IAAI;oBACd,GAAG,EAAE,IAAI,CAAC,UAAU,CAAC,OAAO;oBAC5B,GAAG,EAAE,IAAI,CAAC,iBAAiB;iBAC5B;aACF,CAAC;iBACD,WAAW,EAAE;iBACb,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;gBAClB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;gBAClB,IAAI,IAAI,IAAI,IAAI,CAAC,KAAK,IAAI,SAAS,EAAE;oBACnC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,KAAK,EAAE,eAAe,EAAE,CAAC,CAAC;iBAClD;YAEH,CAAC,CAAC,CAAC;SACN;IAEH,CAAC;IAED,UAAU;QACR,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE;IAC5B,CAAC;;oGAxFU,0BAA0B,0NAM3B,wEAAe;0GANd,0BAA0B;QCbvC,yEAAuB;QACnB,yEAAmE;QAC/D,yEAAyF;QACrF,sEAAK;QACD,qEAAI;QAAA,4EAAiB;QAAA,4DAAK;QAC9B,4DAAM;QACN,4EAAgF;QAA5C,kJAAS,gBAAY,IAAC;QACtD,mEACJ;QAAA,4DAAS;QACb,4DAAM;QACV,4DAAM;QACN,yEAAmE;QAC/D,yEAA0C;QACtC,sEAAI;QAAA,yGAA6C;QAAA,4DAAK;QACtD,6EAAoD;QAAhC,2MAA+B;QAC/C,6EAAiB;QAAA,wEAAY;QAAA,4DAAS;QACtC,8HAA2G;QAC/G,4DAAS;QACb,4DAAM;QACV,4DAAM;QACN,0EAA6E;QACzE,sEAAI;QAAA,oHAAwD;QAAA,4DAAK;QACjE,0EACwC;QACpC,2EAA8E;QAC1E,0EAA0C;QACtC,sEAAI;QAAC,iFAAoB;QAAA,4DAAK;QAC9B,qEAAG;QAAC,oGAAuC;QAAA,4DAAI;QACnD,4DAAM;QACN,8EAAgI;QAAlB,mJAAS,QAAI,EAAE,CAAC,IAAC;QAAE,mEAAM;QAAA,4DAAS;QACpJ,4DAAM;QACV,4DAAM;QACN,0EACwC;QACpC,2EAA8E;QAC1E,0EAA0C;QACtC,sEAAI;QAAC,iFACL;QAAA,4DAAK;QAGT,4DAAM;QACN,8EAAkI;QAApB,mJAAS,QAAI,IAAI,CAAC,IAAC;QAAE,mEAAM;QAAA,4DAAS;QACtJ,4DAAM;QACV,4DAAM;QACN,0EACwC;QACpC,2EAA8E;QAC1E,0EAA0C;QACtC,sEAAI;QAAC,4EACL;QAAA,4DAAK;QAGT,4DAAM;QACN,8EAA2I;QAArB,mJAAS,QAAI,KAAK,CAAC,IAAC;QAAE,mEAAM;QAAA,4DAAS;QAC/J,4DAAM;QAEV,4DAAM;QACV,4DAAM;QACV,4DAAM;;QA5C0B,2DAA+B;QAA/B,0FAA+B;QAEf,0DAAgB;QAAhB,sFAAgB;QAaZ,2DAAoC;QAApC,iGAAoC;QAYpC,0DAAoC;QAApC,iGAAoC;QAYlC,0DAAoC;QAApC,iGAAoC;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpCnF,MAAM,oBAAoB;IAS/B,YAAoB,OAAe,EAAU,QAAwB,EAAU,SAAmB;;QAA9E,YAAO,GAAP,OAAO,CAAQ;QAAU,aAAQ,GAAR,QAAQ,CAAgB;QAAU,cAAS,GAAT,SAAS,CAAU;QARlG,iBAAY,GAAW,EAAE,CAAC;QAC1B,aAAQ,GACN,qEAAqE,CAAC;QACxE,qBAAgB,GAAG,QAAQ,CAAC;QAC5B,SAAI,GAAkB,QAAQ,CAAC;QAEH,kBAAa,GACvC,EAA8B,CAAC;QAE/B,IAAI,WAAW,SAAG,OAAO,CAAC,oBAAoB,EAAE,0CAAE,MAAM,CAAC,KAAK,CAAC;QAC/D,IAAI,CAAC,YAAY,GAAG,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,YAAY,CAAC;IAChD,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE;YACtB,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;SACzC;QACD,IAAI,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE;YACrC,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC;YACnB,IAAI,CAAC,QAAQ,GAAG,uBAAuB,CAAC;SACzC;aAAM,IAAI,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE;YAC5C,IAAI,CAAC,QAAQ,GAAG,uBAAuB,CAAC;YACxC,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC;YACnB,IAAI,CAAC,gBAAgB,GAAG,QAAQ,CAAC;SAClC;IACH,CAAC;IAED,QAAQ,CAAC,KAAU;QACjB,0CAA0C;QAC1C,IAAG,IAAI,CAAC,IAAI,IAAI,MAAM;YAAE,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;QAC9C,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,OAAO,EAAE,KAAK,CAAC,IAAI,CAAC,EAAC,EAAC,KAAK,EAAC,EAAC,UAAU,EAAC,IAAI,EAAC,EAAC,CAAC,CAAC;IACzE,CAAC;IAED,QAAQ;QACN,yBAAyB;IAC3B,CAAC;;wFApCU,oBAAoB;oGAApB,oBAAoB;;;;;;QCRjC,8FAOC;QAFC,uKAAY,oBAAgB,IAAC,yGACjB,cAAU,IADO;QAE9B,4DAAwB;;QALvB,0EAAa;;;;;;;;;;;;;;ACVf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoF;AAGxB;;;;;;;;;;;;ICmB9C,6EAAoD;IAClD,uDACF;IAAA,4DAAS;;;IAFyB,6EAAiB;IACjD,0DACF;IADE,2FACF;;;IAKV,0EAIG;IAAA,iGACH;IAAA,4DAAM;;;;;;IAoBJ,0EACkE;IAAlE,0WAAmC;IACjC,sEAAK;IAAA,uDAAa;IAAA,4DAAM;IACxB,sEAAK;IAAA,+DAAI;IAAA,4DAAM;IACjB,sEAC+E;IAAA,4DAAM;;;;IALnD,+KAAyD;IAEpF,0DAAa;IAAb,6EAAa;IAEK,0DAAuD;IAAvD,2KAAuD;;;;IAvBlF,0EAIG;IACD,0EAAoB;IAClB,4EAAuD;IACrD,4EAAqG;IAAxD,gTAAmB,CAAC,KAAE;IAAnE,4DAAqG;IAAA,qEAEvG;IAAA,4DAAQ;IACR,4EAAuD;IACrD,4EAAoF;IAAvC,kTAAmB,CAAC,KAAE;IAAnE,4DAAoF;IAAA,yEACtF;IAAA,4DAAQ;IACV,4DAAM;IACN,0EAIG;IACH,qHAKqF;IACrF,4DAAM;IACR,4DAAM;;;IAnBoE,0DAAgB;IAAhB,yEAAgB;IAYlE,0DAAU;IAAV,mFAAU;;AD3C/B,MAAM,iBAAiB;IAK5B,YACU,OAAkB,EACM,UAAe,EACvC,KAAkB,EAClB,aAA2B,EAC3B,QAAwB,EACxB,UAA2C,EAC3C,kBAAqC;QANrC,YAAO,GAAP,OAAO,CAAW;QACM,eAAU,GAAV,UAAU,CAAK;QACvC,UAAK,GAAL,KAAK,CAAa;QAClB,kBAAa,GAAb,aAAa,CAAc;QAC3B,aAAQ,GAAR,QAAQ,CAAgB;QACxB,eAAU,GAAV,UAAU,CAAiC;QAC3C,uBAAkB,GAAlB,kBAAkB,CAAmB;QAX/C,WAAM,GAAS,EAAE,CAAC;QAClB,YAAO,GAAQ,EAAE,CAAC;QAClB,iBAAY,GAAQ,EAAE,CAAC;QACvB,kBAAa,GAAQ,IAAI,CAAC;IAQyB,CAAC;IAEpD,QAAQ;QACN,IAAI,CAAC,SAAS,EAAE;IAClB,CAAC;IAED,SAAS;QACP,IAAI,CAAC,kBAAkB,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,SAAS,CAC9D,CAAC,IAAI,EAAE,EAAE;YACP,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QAC5B,CAAC,EACD,CAAC,KAAK,EAAE,EAAE;YACR,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QAC7B,CAAC,CACF,CAAC;IACJ,CAAC;IACD,QAAQ;QACN,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IAC3B,CAAC;IACD,MAAM,CAAC,EAAO;QACZ,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC;QACpC,IAAI,GAAG,GAAE;YACP,QAAQ,EAAE,IAAI,CAAC,UAAU,CAAC,GAAG;YAC7B,YAAY,EAAE,IAAI,CAAC,YAAY;SAChC,CAAC;QACF,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,CAAC,IAAQ,EAAG,EAAE;YACtD,IAAI,IAAI,CAAC,UAAU,IAAI,GAAG,EAAE;gBAC1B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC;gBAC3B,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,IAAS,EAAE,KAAU,EAAE,EAAE;oBAC7C,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;gBACvB,CAAC,CAAC,CAAC;gBACH,uCAAuC;gBACxC,4BAA4B;aAC5B;iBAAM;gBACN,uCAAuC;gBACvC,4BAA4B;aAC5B;QACH,CAAC,CAAC,CAAC;IAEL,CAAC;IACD,mBAAmB,CAAC,IAAS;QAC3B,IAAI,IAAI,CAAC,QAAQ,EAAE;YACjB,IAAI,OAAO,GAAG,CAAC,CAAC;YAChB,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,IAAS,EAAE,EAAE;gBACjC,IAAI,IAAI,CAAC,QAAQ,EAAE;oBACjB,OAAO,EAAE,CAAC;iBACX;YACH,CAAC,CAAC,CAAC;YACH,IAAI,OAAO,GAAG,CAAC,EAAE;gBACf,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;aACvB;iBAAM;aACN;SAEF;aAAM;YACL,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;SACtB;IACH,CAAC;IACD,SAAS,CAAC,IAAS;QACjB,IAAI,IAAI,EAAE;YACR,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;YAC1B,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,IAAS,EAAE,EAAE;gBACjC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YAEvB,CAAC,CAAC,CAAC;SACJ;aAAM;YACL,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;SAC5B;IACH,CAAC;IACD,aAAa;QACX,IAAI,CAAC,OAAO;aACX,IAAI,CAAC,uEAAc,EAAE;YACpB,MAAM,EAAE,KAAK;YACb,KAAK,EAAE,KAAK;YACZ,IAAI,EAAE;gBACJ,QAAQ,EAAE,IAAI;gBACd,OAAO,EAAE,IAAI,CAAC,UAAU,CAAC,GAAG;aAC7B;SACF,CAAC;aACD,WAAW,EAAE;aACb,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;YAClB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,IAAG,IAAI,IAAI,IAAI,CAAC,KAAK,EAAE;gBACrB,IAAI,CAAC,SAAS,EAAE;aACjB;QAEH,CAAC,CAAC,CAAC;IAEL,CAAC;IACD,QAAQ;QACN,IAAI,QAAQ,GAAQ,EAAE,CAAC;QACvB,IAAG,IAAI,CAAC,aAAa,IAAI,IAAI,EAAC;YAC5B,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,OAAY,EAAE,EAAE;gBACpC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;YAC9B,CAAC,CAAC,CAAC;SACJ;aAAM;YACL,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,OAAY,EAAE,EAAE;gBACpC,IAAG,OAAO,CAAC,QAAQ,IAAI,KAAK;oBAAE,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;YAC5D,CAAC,CAAC,CAAC;SACJ;QACD,IAAG,IAAI,CAAC,UAAU,CAAC,UAAU,EAAC;YAC5B,IAAI,GAAG,GAAG;gBACR,QAAQ,EAAE,IAAI,CAAC,UAAU,CAAC,GAAG;gBAC7B,YAAY,EAAE,IAAI,CAAC,YAAY;gBAC/B,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC,KAAK,EAAE;gBACrC,KAAK,EAAG,QAAQ;gBAChB,UAAU,EAAE,IAAI,CAAC,UAAU,CAAC,UAAU;gBACtC,GAAG,EAAC,IAAI,CAAC,UAAU,CAAC,GAAG;gBACvB,QAAQ,EAAE,IAAI,CAAC,UAAU,CAAC,QAAQ;gBAClC,WAAW,EAAE,IAAI,CAAC,UAAU,CAAC,WAAW;gBACxC,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC,KAAK;gBAC5B,YAAY,EAAE,IAAI,CAAC,UAAU,CAAC,YAAY;gBAC1C,MAAM,EAAE,IAAI,CAAC,UAAU,CAAC,MAAM;aAC/B,CAAC;YACF,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,CAAC,IAAS,EAAE,EAAE;gBACzD,IAAI,IAAI,CAAC,UAAU,IAAI,GAAG,EAAE;oBAC1B,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;oBACnC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,EAAE,KAAK,EAAG,SAAS,EAAC,CAAC,CAAC;iBAC7C;qBAAM;oBACL,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;oBACnC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;iBAC1B;YACH,CAAC,CAAC,CAAC;SACJ;aAAM;YAEL,IAAI,GAAG,GAAG;gBACR,QAAQ,EAAE,IAAI,CAAC,UAAU,CAAC,GAAG;gBAC7B,YAAY,EAAE,IAAI,CAAC,UAAU,CAAC,GAAG;gBACjC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC,KAAK,EAAE;gBACrC,YAAY,EAAG,IAAI,CAAC,YAAY;gBAChC,KAAK,EAAG,QAAQ;gBAChB,MAAM,EAAC,IAAI,CAAC,UAAU,CAAC,MAAM;aAC5B,CAAC;YACF,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,CAAC,IAAS,EAAE,EAAE;gBACtD,IAAI,IAAI,CAAC,UAAU,IAAI,GAAG,EAAE;oBAC1B,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;oBACnC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;iBAC1B;qBAAM;oBACL,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;oBACnC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;iBAC1B;YACH,CAAC,CAAC,CAAC;SACJ;IACJ,CAAC;;kFA1JS,iBAAiB,uMAOlB,wEAAe;iGAPd,iBAAiB;QCZ9B,yEAA8F;QAC1F,yEAAiC;QAAC,kFAAsB;QAAA,4DAAM;QAC9D,kEAA+D;QACnE,4DAAM;QACN,yEAAoD;QAClD,yEAAoF;QAClF,yEAIC;QACC,qIACF;QAAA,4DAAM;QACN,yEAEuB;QACrB,yEAA4D;QAC1D,0EAAmG;QACjG,wEAAmH;QAAtC,qIAAS,mBAAe,IAAC;QACpG,sEAAgD;QAClD,4DAAI;QACF,8EAAuD;QAA1B,kJAAU,kBAAc,IAAC;QACpD,8EAAmB;QAAA,sFAA0B;QAAA,4DAAS;QACtD,sHAES;QACX,4DAAS;QACb,4DAAM;QACR,4DAAM;QACR,4DAAM;QACN,gHAKM;QACN,iHA0BM;QACR,4DAAM;QACR,4DAAM;QACN,2EAA+C;QAC7C,8EAAuE;QAA/D,0IAAS,cAAU,IAAC;QAA2C,+DAAG;QAAA,4DAAS;QACnF,8EAA2E;QAAxD,0IAAS,cAAU,IAAE;QAAmC,kEAAM;QAAA,4DAAS;QAC5F,4DAAM;;QA7C+B,2DAAS;QAAT,+EAAS;QAOpC,0DAAyB;QAAzB,yFAAyB;QAMzB,0DAAwB;QAAxB,wFAAwB;;;;;;;;;;;;;;ACnClC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoF;AAIf;AACG;;;;;;;AAOjE,MAAM,mBAAmB;IAE9B,YACkC,UAAe,EACxC,UAA6C,EAC5C,OAAkB,EAClB,KAAkB,EAClB,aAA2B,EAC3B,QAAwB;QALA,eAAU,GAAV,UAAU,CAAK;QACxC,eAAU,GAAV,UAAU,CAAmC;QAC5C,YAAO,GAAP,OAAO,CAAW;QAClB,UAAK,GAAL,KAAK,CAAa;QAClB,kBAAa,GAAb,aAAa,CAAc;QAC3B,aAAQ,GAAR,QAAQ,CAAgB;IAC9B,CAAC;IAEL,QAAQ;IACR,CAAC;IACD,GAAG,CAAC,IAAS;QACX,IAAG,IAAI,IAAI,EAAE,EAAE;YACb,IAAG,IAAI,CAAC,UAAU,CAAC,UAAU,EAAE;gBAC7B,IAAI,GAAG,GAAG;oBACR,QAAQ,EAAE,IAAI,CAAC,UAAU,CAAC,OAAO;oBACjC,UAAU,EAAE,IAAI,CAAC,UAAU,CAAC,UAAU;oBACtC,GAAG,EAAC,IAAI,CAAC,UAAU,CAAC,GAAG;oBACvB,QAAQ,EAAE,IAAI,CAAC,UAAU,CAAC,QAAQ;oBAClC,WAAW,EAAE,IAAI,CAAC,UAAU,CAAC,WAAW;oBACxC,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC,MAAM;oBAC7B,YAAY,EAAE,IAAI,CAAC,UAAU,CAAC,YAAY;oBAC1C,OAAO,EAAE,IAAI,CAAC,UAAU,CAAC,OAAO;oBAChC,YAAY,EAAC,IAAI;oBACjB,KAAK,EAAC,IAAI;oBACV,YAAY,EAAC,IAAI;iBAClB,CAAC;gBACF,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,CAAC,IAAS,EAAE,EAAE;oBAC9D,IAAI,IAAI,CAAC,UAAU,IAAI,GAAG,EAAE;wBAC1B,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;wBACpC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;qBAC1B;yBAAM;wBACL,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;wBACpC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;qBAC1B;gBACH,CAAC,CAAC,CAAC;aAEH;iBAAM;gBACN,IAAI,GAAG,GAAI;oBACT,QAAQ,EAAE,IAAI,CAAC,UAAU,CAAC,OAAO;oBACjC,YAAY,EAAE,IAAI,CAAC,UAAU,CAAC,IAAI;oBAClC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC,KAAK,EAAE;iBACpC,CAAC;gBACF,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,CAAC,IAAS,EAAE,EAAE;oBACzD,IAAI,IAAI,CAAC,UAAU,IAAI,GAAG,EAAE;wBAC1B,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;wBACpC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;qBAC1B;yBAAM;wBACL,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;wBACpC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;qBAC1B;gBACH,CAAC,CAAC,CAAC;aACN;SAEF;QACD,IAAG,IAAI,IAAI,IAAI,EAAE;YACf,IAAI,CAAC,OAAO;iBACX,IAAI,CAAC,gFAAiB,EAAE;gBACvB,MAAM,EAAE,KAAK;gBACb,KAAK,EAAE,KAAK;gBACZ,IAAI,EAAE;oBACJ,QAAQ,EAAE,IAAI;oBACd,GAAG,EAAE,IAAI,CAAC,UAAU,CAAC,OAAO;oBAC5B,GAAG,EAAE,IAAI,CAAC,UAAU,CAAC,IAAI;oBACzB,UAAU,EAAE,IAAI,CAAC,UAAU,CAAC,UAAU;oBACtC,GAAG,EAAC,IAAI,CAAC,UAAU,CAAC,GAAG;oBACvB,QAAQ,EAAE,IAAI,CAAC,UAAU,CAAC,QAAQ;oBAClC,WAAW,EAAE,IAAI,CAAC,UAAU,CAAC,WAAW;oBACxC,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC,MAAM;oBAC7B,YAAY,EAAE,IAAI,CAAC,UAAU,CAAC,YAAY;oBAC1C,OAAO,EAAE,IAAI,CAAC,UAAU,CAAC,OAAO;iBACjC;aAEF,CAAC;iBACD,WAAW,EAAE;iBACb,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;gBAClB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YACpB,CAAC,CAAC,CAAC;SACJ;QACD,IAAG,IAAI,IAAI,KAAK,EAAE;YAChB,IAAI,CAAC,OAAO;iBACX,IAAI,CAAC,mFAAkB,EAAE;gBACxB,MAAM,EAAE,KAAK;gBACb,KAAK,EAAE,KAAK;gBACZ,IAAI,EAAE;oBACJ,QAAQ,EAAE,IAAI;oBACd,GAAG,EAAE,IAAI,CAAC,UAAU,CAAC,OAAO;oBAC5B,GAAG,EAAE,IAAI,CAAC,UAAU,CAAC,IAAI;oBACzB,UAAU,EAAE,IAAI,CAAC,UAAU,CAAC,UAAU;oBACtC,GAAG,EAAC,IAAI,CAAC,UAAU,CAAC,GAAG;oBACvB,QAAQ,EAAE,IAAI,CAAC,UAAU,CAAC,QAAQ;oBAClC,WAAW,EAAE,IAAI,CAAC,UAAU,CAAC,WAAW;oBACxC,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC,MAAM;oBAC7B,YAAY,EAAE,IAAI,CAAC,UAAU,CAAC,YAAY;oBAC1C,OAAO,EAAE,IAAI,CAAC,UAAU,CAAC,OAAO;iBAEjC;aACF,CAAC;iBACD,WAAW,EAAE;iBACb,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;gBAClB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YACpB,CAAC,CAAC,CAAC;SACJ;QACD,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC;IAC1B,CAAC;;sFA1GU,mBAAmB,kEAGpB,wEAAe;mGAHd,mBAAmB;QCbhC,yEAIC;QACC,kEAAa;QACb,yEAA4C;QAC1C,sGACF;QAAA,4DAAM;QACN,kEAA+D;QACjE,4DAAM;QACN,yEAAoD;QAClD,yEAIC;QACC,yEAIC;QACC,0EAAuB;QAAC,gFAAoB;QAAA,4DAAO;QACrD,4DAAM;QACN,6EAAyE;QAAlC,4IAAS,QAAI,EAAE,CAAC,IAAC;QACtD,mEACF;QAAA,4DAAS;QACX,4DAAM;QACN,0EAIC;QACC,0EAIC;QACC,2EAAuB;QAAC,iFAAoB;QAAA,4DAAO;QACrD,4DAAM;QACN,6EAA2E;QAAnC,4IAAS,QAAI,IAAI,CAAC,IAAC;QACzD,mEACF;QAAA,4DAAS;QACX,4DAAM;QACN,0EAIC;QACC,0EAIC;QACC,2EAAuB;QAAC,4EAAe;QAAA,4DAAO;QAChD,4DAAM;QACN,6EAA4E;QAApC,4IAAS,QAAI,KAAK,CAAC,IAAC;QAC1D,mEACF;QAAA,4DAAS;QACX,4DAAM;QACR,4DAAM;;;;;;;;;;;;;;ACpDN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOsC;AACoD;AAC6B;AACrF;AACG;AAEsD;AAGV;;;;;;;;;;;;;;;;;;;;ICF3E,6EAMC;IADC,mUAA0B;IAE1B,6EACF;IAAA,4DAAS;;;IAkBP,6EAAoD;IAClD,uDACF;IAAA,4DAAS;;;IAFyB,6EAAiB;IACjD,0DACF;IADE,2FACF;;;;IAjBJ,yEAMC;IACC,+EACG;IAAA,mFAAwB;IAAA,4DAC1B;IACD,0EAA8B;IAC5B,0EAAgF;IAA3B,4TAAyB;IAA9E,4DAAgF;IAClF,4DAAM;IACN,6EAAuG;IAA7D,6VAA0B;IAClE,6EAAqB;IAAA,wEAAa;IAAA,4DAAS;IAC3C,gIAES;IACX,4DAAS;IACT,6EAMC;IAFC,gUAAwB;IAGxB,iEACF;IAAA,4DAAS;IACX,4DAAM;;;IAfsC,0DAA0B;IAA1B,wFAA0B;IAE3C,0DAAS;IAAT,kFAAS;;;;IAwBlC,0EAOC;IADC,wUAAkC;IAElC,+EAAqC;IAAA,6EAAkB;IAAA,4DAAW;IACpE,4DAAM;;;;IAQN,wEAKG;IAHC,qbAA0C;IAG3C,4DAAI;;;;IAZP,0EAMC;IACD,sHAKO;IACL,qEAKE;IACF,oEAAG;IAAA,uDAA0C;IAAA,4DAAI;IACnD,4DAAM;;;;IAjBJ,0IAAc;IAKf,0DAAmB;IAAnB,wFAAmB;IAQhB,0DAA6D;IAA7D,mUAA6D;IAG5D,0DAA0C;IAA1C,oLAA0C;;ADrE9C,MAAM,sBAAsB;IAqJjC,YACU,mBAAuC,EACvC,MAAsB,EACtB,OAAe,EACf,OAAkB,EAClB,SAAwB,EACxB,SAAmB,EACnB,QAAwB,EACxB,SAAkC,EAClC,KAAkB,EAClB,KAAkB,EAClB,aAA2B;QAV3B,wBAAmB,GAAnB,mBAAmB,CAAoB;QACvC,WAAM,GAAN,MAAM,CAAgB;QACtB,YAAO,GAAP,OAAO,CAAQ;QACf,YAAO,GAAP,OAAO,CAAW;QAClB,cAAS,GAAT,SAAS,CAAe;QACxB,cAAS,GAAT,SAAS,CAAU;QACnB,aAAQ,GAAR,QAAQ,CAAgB;QACxB,cAAS,GAAT,SAAS,CAAyB;QAClC,UAAK,GAAL,KAAK,CAAa;QAClB,UAAK,GAAL,KAAK,CAAa;QAClB,kBAAa,GAAb,aAAa,CAAc;QA/JrC,SAAI,GAAsB,OAAO,CAAC;QAClC,YAAO,GAAG,EAAE,CAAC;QACb,YAAO,GAAG,EAAE,CAAC;QACb,SAAI,GAAG,EAAE,CAAC;QACV,aAAQ,GAAQ,EAAE,CAAC;QACnB,iBAAY,GAAQ,EAAE,CAAC;QACvB,WAAM,GAAQ,EAAE,CAAC;QACjB,WAAM,GAAmB,EAAoB,CAAC;QAC9C,YAAO,GAAsB,IAAI,+CAAU,EAAE,CAAC;QAC9C,cAAS,GAAQ,EAAE,CAAC;QACpB,SAAI,GAAG,EAAE,CAAC;QACV,kBAAa,GAAe,EAAE,CAAC;QAC/B,aAAQ,GAAG,EAAE,CAAC;QACd,wBAAmB,GAAG,KAAK,CAAC;QAE5B,wBAAmB,GAAG;YACpB;gBACE,QAAQ,EAAE,KAAK;gBACf,IAAI,EAAE,eAAe;gBACrB,QAAQ,EAAE,GAAG;gBACb,UAAU,EAAE,IAAI;aACjB;YACD;gBACE,QAAQ,EAAE,KAAK;gBACf,IAAI,EAAE,kBAAkB;gBACxB,QAAQ,EAAE,GAAG;gBACb,UAAU,EAAE,IAAI;aACjB;YACD;gBACE,QAAQ,EAAE,KAAK;gBACf,IAAI,EAAE,WAAW;gBACjB,QAAQ,EAAE,GAAG;gBACb,UAAU,EAAE,IAAI;gBAChB,UAAU,EAAE,CAAC;aACd;YACD;gBACE,QAAQ,EAAE,KAAK;gBACf,IAAI,EAAE,WAAW;gBACjB,QAAQ,EAAE,GAAG;gBACb,UAAU,EAAE,IAAI;aACjB;SACF,CAAC;QAEF,eAAU,GAAG;YACX;gBACE,KAAK,EAAE,MAAM;gBACb,KAAK,EAAE,GAAG;gBACV,UAAU,EAAE,EAAE;gBACd,aAAa,EAAE,EAAE;gBACjB,OAAO,EAAE,CAAC,MAAW,EAAE,EAAE,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,KAAK,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;gBACnE,SAAS,EAAE,CAAC,MAAW,EAAE,EAAE;oBACzB,IAAI,MAAM,CAAC,IAAI,CAAC,QAAQ,KAAK,KAAK,EAAE;wBAClC,OAAO,EAAE,YAAY,EAAE,KAAK,EAAE,CAAC;qBAChC;oBACD,OAAO,EAAE,CAAC;gBACZ,CAAC;aACF;YACD,EAAE,KAAK,EAAE,gBAAgB,EAAE,UAAU,EAAE,MAAM,EAAE;YAC/C,EAAE,KAAK,EAAE,KAAK,EAAE,UAAU,EAAE,KAAK,EAAE;YACnC;gBACE,UAAU,EAAE,OAAO;gBACnB,YAAY,EAAE,wBAAwB;gBACtC,KAAK,EAAE,sBAAsB;gBAC7B,SAAS,EAAE;oBACT,OAAO,EAAE,QAAQ;iBAClB;aAKF;YACD;gBACE,UAAU,EAAE,cAAc;gBAC1B,KAAK,EAAE,MAAM;gBACb,KAAK,EAAE,OAAO;aACf;YACD;gBACE,UAAU,EAAE,MAAM;gBAClB,KAAK,EAAE,aAAa;gBACpB,YAAY,EAAE,sBAAsB;gBACpC,WAAW,EAAE,CAAC,MAA2B,EAAE,EAAE;oBAC3C,OAAO,MAAM,CAAC,IAAI,CAAC,WAAW,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC;gBACxD,CAAC;aACF;YACD;gBACE,UAAU,EAAE,UAAU;gBACtB,KAAK,EAAE,QAAQ;gBACf,YAAY,EAAE,qBAAqB;aACpC;YACD;gBACE,UAAU,EAAE,eAAe;gBAC3B,KAAK,EAAE,WAAW;gBAClB,WAAW,EAAE,CAAC,MAA2B,EAAE,EAAE;oBAC3C,OAAO,MAAM,CAAC,IAAI,CAAC,WAAW,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC;gBACtE,CAAC;aACF;YACD;gBACE,UAAU,EAAE,yBAAyB;gBACrC,KAAK,EAAE,OAAO;gBACd,YAAY,EAAE,CAAC,MAA2B,EAAE,EAAE;oBAC5C,OAAO,MAAM,CAAC,IAAI,CAAC,WAAW,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC;gBAC7D,CAAC;aACF;YACD,qDAAqD;YAErD;gBACE,UAAU,EAAE,QAAQ;gBACpB,KAAK,EAAE,QAAQ;aAChB;YACD;gBACE,UAAU,EAAE,WAAW;gBACvB,KAAK,EAAE,UAAU;gBACjB,YAAY,EAAE,4BAA4B;aAC3C;SACF,CAAC;QAEF,wBAAmB,GAAG;YACpB,sBAAsB,EAAE,mFAAsB;YAC9C,0BAA0B,EAAE,+HAA0B;YACtD,oBAAoB,EAAE,kGAAiB;YACvC,mBAAmB,EAAE,6EAAgB;SACtC,CAAC;QAEF,kBAAa,GAAG;YACd,QAAQ,EAAE,IAAI;YACd,SAAS,EAAE,WAAW;YACtB,SAAS,EAAE;gBACT,aAAa,EAAE,QAAQ;gBACvB,aAAa,EAAE,QAAQ;gBACvB,iBAAiB,EAAE,QAAQ;gBAC3B,OAAO,EAAE,MAAM;gBACf,OAAO,EAAE,UAAU;aACpB;SACF,CAAC;QAEF,gBAAW,GAAgB;YACzB,WAAW,EAAE,CAAC,GAAmB,EAAE,EAAE;gBACnC,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC;gBAClB,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;YACxB,CAAC;YACD,OAAO,EAAE,IAAI;YACb,SAAS,EAAE,GAAG;YACd,YAAY,EAAE,GAAG;YACjB,YAAY,EAAE,CAAC,MAAW,EAAE,EAAE;;gBAC5B,OAAO,aAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,IAAI,0CAAE,UAAU,EAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC;YAC7C,CAAC;SACF,CAAC;IAcC,CAAC;IAEJ,QAAQ;QACN,IAAI,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;YAC1C,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC;SACrB;aAAM;YACL,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC;SACrB;QACD,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,MAAc,EAAE,EAAE;YAC9C,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,EAAE,CAAC;YACzB,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,KAAK,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC;YACxD,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;YAC9B,IAAI,CAAC,mBAAmB,EAAE,CAAC;YAC3B,IAAI,CAAC,aAAa,EAAE,CAAC;YACrB,IAAI,CAAC,YAAY,EAAE,CAAC;YACpB,IAAI,CAAC,SAAS,EAAE,CAAC;YACjB,4BAA4B;YAC5B,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,mBAAmB,CAAC,mBAAmB,CACtD,IAAI,CAAC,KAAK,EACV,IAAI,CAAC,KAAK,CACX,CAAC;YACF,CAAC,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC,CAAC;QACtE,CAAC,CAAC,CAAC;IACL,CAAC;IAED,uBAAuB,CAAC,MAA2B;QACjD,IAAI,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;QACvB,IAAI,GAAG,GAAG;YACR;gBACE,KAAK,EAAE;oBACL;wBACE,MAAM,EAAE,IAAI,CAAC,MAAM;wBACnB,GAAG,EAAE,IAAI,CAAC,MAAM;wBAChB,KAAK,EAAE,IAAI,CAAC,KAAK;wBACjB,SAAS,EAAE,IAAI,CAAC,SAAS;wBACzB,UAAU,EAAE,IAAI,CAAC,aAAa;wBAC9B,WAAW,EAAE,IAAI,CAAC,QAAQ;wBAC1B,QAAQ,EAAE,IAAI,CAAC,QAAQ;wBACvB,YAAY,EAAE,IAAI,CAAC,YAAY;wBAC/B,IAAI,EAAE,IAAI,CAAC,EAAE;qBACd;iBACF;aACF;YACD;gBACE,IAAI,EAAE;oBACJ;wBACE,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI;wBACxB,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI;wBACxB,UAAU,EAAE,IAAI,CAAC,QAAQ,CAAC,UAAU;wBACpC,YAAY,EAAE,IAAI,CAAC,QAAQ,CAAC,YAAY;qBACzC;iBACF;aACF;YACD,EAAE,QAAQ,EAAE,IAAI,CAAC,OAAO,EAAE;SAC3B,CAAC;QAEF,IAAI,CAAC,aAAa,CAAC,0BAA0B,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;YACpE,IAAI,IAAI,CAAC,UAAU,IAAI,GAAG,EAAE;gBAC1B,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;gBACnC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;aAC/B;iBAAM;gBACL,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;aAClC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IACD,SAAS;QACP,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,SAAS,CAC9C,CAAC,IAAI,EAAE,EAAE;YACP,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QAC5B,CAAC,EACD,CAAC,KAAK,EAAE,EAAE;YACR,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QAC7B,CAAC,CACF,CAAC;IACJ,CAAC;IAED,cAAc,CAAC,EAAO;QACpB,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC;IACtC,CAAC;IAED,qBAAqB,CAAC,SAAc;QAClC,IAAI,CAAC,SAAS;aACX,sBAAsB,CAAC;YACtB,KAAK,EAAE,kCAAkC;YACzC,OAAO,EAAE,kCAAkC;YAC3C,KAAK,EAAE,KAAK;SACb,CAAC;aACD,WAAW,EAAE;aACb,SAAS,CAAC,CAAC,IAAS,EAAE,EAAE;YACvB,IAAI,IAAI,EAAE;gBACR,IAAI,CAAC,SAAS;qBACX,0BAA0B,CACzB,IAAI,CAAC,OAAO,EACZ,IAAI,CAAC,IAAI,EACT,SAAS,CAAC,YAAY,EACtB,IAAI,CAAC,OAAO,CACb;qBACA,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;oBAClB,IAAI,IAAI,CAAC,UAAU,KAAK,GAAG,EAAE;wBAC3B,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;wBACnC,IAAI,CAAC,OAAO,EAAE,CAAC;qBAChB;yBAAM;wBACL,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;qBACpC;gBACH,CAAC,CAAC,CAAC;aACN;QACH,CAAC,CAAC,CAAC;IACP,CAAC;IAED,aAAa;QACX,IAAI,CAAC,OAAO;aACT,IAAI,CAAC,yFAAc,EAAE;YACpB,MAAM,EAAE,KAAK;YACb,KAAK,EAAE,KAAK;YACZ,IAAI,EAAE;gBACJ,QAAQ,EAAE,IAAI;gBACd,OAAO,EAAE,IAAI,CAAC,OAAO;aACtB;SACF,CAAC;aACD,WAAW,EAAE;aACb,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;YAClB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,IAAI,IAAI,IAAI,IAAI,CAAC,KAAK,EAAE;gBACtB,IAAI,CAAC,SAAS,EAAE,CAAC;aAClB;QACH,CAAC,CAAC,CAAC;IACP,CAAC;IAED,YAAY;QACV,IAAI,CAAC,SAAS;aACX,YAAY,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC;aACnD,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;;YAClB,IAAI,CAAC,QAAQ,SAAG,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,IAAI,0CAAE,IAAI,CAAC;YACjC,IAAI,CAAC,IAAI,SAAG,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,IAAI,0CAAE,IAAI,CAAC;YAC7B,IAAI,CAAC,QAAQ,GAAG,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,IAAI,CAAC;YAC3B,IAAI,CAAC,YAAY,SAAG,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,IAAI,0CAAE,YAAY,CAAC;YAC7C,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,MAAM,CAAC;YACnE,IAAI,IAAI,CAAC,YAAY,KAAK,MAAM,EAAE;gBAChC,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC;aACjC;QACH,CAAC,CAAC,CAAC;IACP,CAAC;IAED,WAAW,CAAC,GAAmB;QAC7B,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC;QAClB,GAAG,CAAC,GAAG,CAAC,gBAAgB,EAAE,CAAC;QAC3B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,mBAAmB,EAAE,CAAC;IAC5C,CAAC;IAED,mBAAmB;QACjB,OAAO,IAAI,CAAC,mBAAmB;aAC5B,mBAAmB,CAAI,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC;aAC7D,IAAI,CACH,0DAAG,CAAC,CAAC,CAAM,EAAE,EAAE;YACb,IAAI,CAAC,CAAC,SAAS,EAAE;gBACf,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC;aACpC;iBAAM;gBACL,IAAI,CAAC,gBAAgB,CAAC;oBACpB,YAAY,EAAE,CAAC;oBACf,cAAc,EAAE,CAAC;oBACjB,UAAU,EAAE,CAAC;iBACd,CAAC,CAAC;aACJ;YACD,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,UAAU,EAAE,CAAC;YAC7B,OAAO,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAS,EAAE,KAAa,EAAE,EAAE;;gBAC/C,IAAI,CAAC,EAAE,GAAE,IAAI,CAAC,IAAI,CAAC;gBACnB,IAAI,CAAC,IAAI,GAAG,KAAK,GAAG,CAAC,CAAC;gBACtB,IAAI,CAAC,MAAM,SAAG,CAAC,aAAD,CAAC,uBAAD,CAAC,CAAE,SAAS,0CAAE,MAAM,CAAC;gBACnC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,IAAI,IAAI,OAAO,CAAC;gBACzC,OAAO,IAAI,CAAC;YACd,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CACH,CAAC;IACN,CAAC;IAED,gBAAgB,CAAC,IAAS;QACxB,IAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC,QAAQ,GAAG,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,YAAY,CAAC;QAC1D,IAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC,IAAI;YAC9B,SAAS,IAAG,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,cAAc,IAAG,QAAQ,CAAC;QAC9C,IAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC,QAAQ,GAAG,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,UAAU,CAAC;QACxD,IAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC,QAAQ,GAAG,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,UAAU,CAAC;QACxD,IAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC,UAAU,GAAG,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,cAAc,CAAC;IAChE,CAAC;IAED,IAAI;QACF,IAAI,KAAK,GAAG,IAAI,CAAC,IAAI,IAAI,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC;QACrD,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;IAC/C,CAAC;IAED,mBAAmB;QACjB,IAAI,CAAC,SAAS;aACX,mBAAmB,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,IAAI,CAAC;aAC5C,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;YAClB,IAAI,IAAI,CAAC,UAAU,KAAK,GAAG,EAAE;gBAC3B,IAAI,CAAC,SAAS,GAAG,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,MAAM,CAAC,CAAC,CAAC,CAAC;gBACjC,4CAA4C;aAC7C;iBAAM;gBACL,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;aACrB;QACH,CAAC,CAAC,CAAC;IACP,CAAC;IAED,YAAY;QACV,IAAI,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,YAAY,KAAK,MAAM,EAAE;YACrD,IAAI,CAAC,SAAS;iBACX,gBAAgB,CACf,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,YAAY,EACjB,IAAI,CAAC,OAAO,EACZ,IAAI,CAAC,OAAO,CACb;iBACA,SAAS,CAAC,CAAC,IAAS,EAAE,EAAE;gBACvB,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBACpC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC;oBACpB,OAAO;oBACP,IAAI,CAAC,OAAO;oBACZ,iBAAiB;oBACjB,IAAI,CAAC,YAAY;oBACjB,MAAM;oBACN,IAAI,CAAC,OAAO;iBACb,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;SACN;IACH,CAAC;IAED,aAAa;QACX,IAAI,CAAC,SAAS;aACX,iBAAiB,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC;aACxD,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;YAClB,IAAI,IAAI,CAAC,UAAU,KAAK,GAAG,EAAE;gBAC3B,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,cAAc,CAAC;aAC1C;iBAAM;gBACL,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;aACzB;QACH,CAAC,CAAC,CAAC;IACP,CAAC;IAED,sBAAsB;QACpB,IAAI,CAAC,OAAO;aACT,IAAI,CAAC,mGAAkB,EAAE;YACxB,KAAK,EAAE,KAAK;YACZ,IAAI,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE;SACxE,CAAC;aACD,WAAW,EAAE;aACb,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;YAClB,IAAI,IAAI,EAAE;gBACR,IAAI,CAAC,OAAO,EAAE,CAAC;aAChB;QACH,CAAC,CAAC,CAAC;IACP,CAAC;IAED,cAAc;QACZ,IAAI,CAAC,SAAS;aACX,cAAc,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC;aACzD,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;YAClB,IAAI,IAAI,CAAC,UAAU,KAAK,GAAG,EAAE;gBAC3B,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;gBACnC,IAAI,CAAC,OAAO,EAAE,CAAC;aAChB;iBAAM;gBACL,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;aACpC;QACH,CAAC,CAAC,CAAC;IACP,CAAC;IAED,OAAO;QACL,IAAI,CAAC,aAAa,EAAE,CAAC;QACrB,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAC9B,4BAA4B;QAC5B,gCAAgC;IAClC,CAAC;;4FA/aU,sBAAsB;sGAAtB,sBAAsB;QChCnC,yEAA+D;QAC7D,yEAAiE;QAC/D,yEAAoE;QAClE,8EACG;QAAA,0EAA8C;QAAxC,4IAAS,UAAM,IAAC;QACrB,uEACF;QAAA,4DAAO;QAAA,4DACR;QACD,uEAAM;QAAA,uDAAqE;QAAA,4DAAO;QACpF,4DAAM;QACN,yEAA2B;QAE3B,yEAKC;QACC,gFAAuC;QAAA,sEAAU;QAAA,4DAAY;QAC7D,qFAAuE;QACrE,4EAAyC;QAAlC,6LAAsB;QAA7B,4DAAyC;QAC3C,4DAAiB;QACjB,0HAQS;QACX,4DAAM;QAEN,sHA4BM;QACR,4DAAM;QAEN,2EAAqE;QACnE,2EAAgB;QAAA,iFAAqB;QAAA,4DAAM;QAC3C,2EAKC;QACC,qHASM;QACN,qHAoBM;QACR,4DAAM;QACR,4DAAM;QAEN,2EAAgD;QAC9C,2EAKC;QACC,2EAAgB;QAAA,wEAAY;QAAA,4DAAM;QAClC,kFAUkB;;QACpB,4DAAM;QACR,4DAAM;QACR,4DAAM;;QAvHM,0DAAqE;QAArE,uLAAqE;QAYlE,0DAAsB;QAAtB,iFAAsB;QAG9B,0DAAmB;QAAnB,qFAAmB;QAenB,0DAA0B;QAA1B,0FAA0B;QAoCxB,0DAAmB;QAAnB,qFAAmB;QAYE,0DAAgB;QAAhB,sFAAgB;QA6BtC,0DAA2B;QAA3B,wFAA2B;;;;;;;;;;;;;;AClHnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+C;AACyC;AACjC;AACI;AACD;AACF;AACT;AAC6D;AAC7B;AACtB;AACS;AACA;AACoC;AAC3C;AACA;AACN;AACA;AAEQ;AACA;AACS;AACG;AACU;AACJ;AACG;AAC0B;AACH;AACzB;AACK;;AA8C9E,MAAM,iBAAiB;;kFAAjB,iBAAiB;iGAAjB,iBAAiB;qGA5BnB;YACP,4DAAY;YACZ,oEAAa;YACb,qEAAa;YACb,qEAAa;YACb,wEAAe;YACf,uEAAU;YACV,qEAAgB;YAChB,4DAAY;YACZ,sEAAc;YACd,gFAAkB;YAClB,yEAAe;YACf,2DAAW;YACX,mEAAmB;YACnB,yEAAe;YACf,qEAAa;YACb,2EAAgB;YAChB,6EAAiB;SAClB;oIAUU,iBAAiB,mBA1C1B,oGAAoB;QACpB,wHAA0B;QAC1B,2FAAiB;QACjB,mHAAwB;QACxB,mFAAc;QACd,sFAAe;QACf,gGAAmB;QACnB,4FAAiB;QACjB,+FAAkB;QAClB,yHAA0B;QAC1B,sHAAyB;QACzB,6FAAkB;QAClB,kGAAmB,aAGnB,4DAAY;QACZ,oEAAa;QACb,qEAAa;QACb,qEAAa;QACb,wEAAe;QACf,uEAAU;QACV,qEAAgB;QAChB,4DAAY;QACZ,sEAAc;QACd,gFAAkB;QAClB,yEAAe;QACf,2DAAW;QACX,mEAAmB;QACnB,yEAAe;QACf,qEAAa;QACb,2EAAgB;QAChB,6EAAiB,aAGjB,oGAAoB;QACpB,mHAAwB;QACxB,2FAAiB;QACjB,wHAA0B;QAC1B,kGAAmB;QACnB,6FAAkB;;;;;;;;;;;;;;;;;;;;;AC/Df,MAAM,kBAAkB;IAC7B,YAAoB,KAAkB,EAAU,IAAwB;QAApD,UAAK,GAAL,KAAK,CAAa;QAAU,SAAI,GAAJ,IAAI,CAAoB;IAAG,CAAC;IAE5E,WAAW,CAAC,IAAgB;QAC1B,OAAO,IAAI,CAAC,KAAK,CAAC,eAAe,CAC/B,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,GAAG,kBAAkB,EAC5C,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CACrB,CAAC;IACJ,CAAC;IAED,WAAW,CAAC,MAAW;QACrB,OAAO,IAAI,CAAC,KAAK,CAAC,eAAe,CAC/B,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,GAAG,cAAc,EACxC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CACvB,CAAC;IACJ,CAAC;;oFAfU,kBAAkB;qGAAlB,kBAAkB,WAAlB,kBAAkB,mBAFjB,MAAM;;;;;;;;;;;;;ACPpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOuB;AAC6C;AAMK;;;;;;;;;;;;;;;ICOzE,2EAAgG;IAAxD,2TAAmB;IACzD,qEAAuE;IACzE,4DAAO;;;;IAUH,0EAKC;IACC,0EAAoB;IAAA,wEAAa;IAAA,2EAAuB;IAAA,4DAAC;IAAA,4DAAO;IAAA,4DAAO;IACvE,uEASE;IACJ,4DAAM;;;;IATF,0DAAwB;IAAxB,wFAAwB;;;;IA0B5B,wEAAqM;IAA/E,kYAAkE;IACtL,qEAAgD;IAClD,4DAAI;;;IACJ,wEAAmI;IACjI,qEAAgD;IAClD,4DAAI;;;IACJ,uEASI;;;;IARA,8GAA8C;;;IAgBhD,6EAA6D;IAC3D,uDACF;IAAA,4DAAS;;;IAFgC,+EAAkB;IACzD,0DACF;IADE,2FACF;;;;;IATA,6EAMD;IADC,2UAAyB,EAAE,aAAU;IAErC,qIAES;IACX,4DAAS;;;;IATP,gOAEE;IAIuB,0DAAc;IAAd,uFAAc;;;;IASrC,wEAAyK;IAAnD,oVAAsC;IAC1J,qEAAgD;IAClD,4DAAI;;;IACJ,wEAAwH;IACtH,qEAAgD;IAAQ,4DAAI;;;IAEhE,uEAOE;;;;IANA,kOAEE;;;IAYJ,6EAA2D;IACzD,uDACF;IAAA,4DAAS;;;IAF+B,+EAAkB;IACxD,0DACF;IADE,2FACF;;;;IATA,6EAMD;IADC,8UAA4B,EAAE,aAAU;IAExC,qIAES;IACX,4DAAS;;;;IATP,gOAEE;IAIsB,0DAAc;IAAd,uFAAc;;;IAiDpC,6EAA6D;IAC3D,uDACF;IAAA,4DAAS;;;IAF+B,iFAAoB;IAC1D,0DACF;IADE,0FACF;;ADpJD,MAAM,wBAAwB;IA0BnC,YACU,YAAyB,EACzB,OAAe,EACf,QAAwB,EACxB,SAAmB,EACnB,YAAoC,EACZ,UAAe,EACxC,UAAkD,EAClD,KAAkB,EACjB,aAA2B;;QAR3B,iBAAY,GAAZ,YAAY,CAAa;QACzB,YAAO,GAAP,OAAO,CAAQ;QACf,aAAQ,GAAR,QAAQ,CAAgB;QACxB,cAAS,GAAT,SAAS,CAAU;QACnB,iBAAY,GAAZ,YAAY,CAAwB;QACZ,eAAU,GAAV,UAAU,CAAK;QACxC,eAAU,GAAV,UAAU,CAAwC;QAClD,UAAK,GAAL,KAAK,CAAa;QACjB,kBAAa,GAAb,aAAa,CAAc;QAlC5B,gBAAW,GAAW,EAAE,CAAC;QACzB,UAAK,GAAW,EAAE,CAAC;QACnB,iBAAY,GAAG,EAAE,CAAC;QAClB,YAAO,GAAG,EAAE,CAAC;QACb,UAAK,GAAG,EAAE,CAAC;QACX,YAAO,GAAW,GAAG,CAAC;QACtB,gBAAW,GAAG,EAAE,CAAC;QACjB,cAAS,GAAG,EAAE,CAAC;QACf,SAAI,GAAG,EAAE,CAAC;QACV,gBAAW,GAAG,EAAE,CAAC;QACjB,cAAS,GAAG,EAAE,CAAC;QACf,YAAO,GAAG,EAAE,CAAC;QACb,qBAAgB,GAAG,QAAQ,CAAC;QAC3B,aAAQ,GAAG,IAAI,0DAAY,EAAE,CAAC;QAC9B,aAAQ,GAAG,IAAI,0DAAY,EAAE,CAAC;QAC/B,SAAI,GAAkB,QAAQ,CAAC;QACxC,cAAS,GAAe,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;QACnC,kBAAa,GAAQ,KAAK,CAAC;QAC3B,iBAAY,GAAQ,KAAK,CAAC;QAC1B,mBAAc,GAAc,IAAI,wDAAS,CAAC,EAAE,CAAC,CAAC;QAC9C,iBAAY,GAAQ,EAAE,CAAC;QACvB,gBAAW,GAAQ,EAAE,CAAC;QACtB,gBAAW,GAAQ,EAAE,CAAC;QACtB,oBAAe,GAAQ,EAAE,CAAC;QAC1B,oBAAe,GAAQ,EAAE,CAAC;QAYxB,IAAI,WAAW,SAAG,OAAO,CAAC,oBAAoB,EAAE,0CAAE,MAAM,CAAC,KAAK,CAAC;QAC/D,IAAI,CAAC,WAAW,GAAG,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,WAAW,CAAC;QAC5C,IAAI,CAAC,KAAK,GAAG,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,KAAK,CAAC;QAChC,IAAI,CAAC,YAAY,GAAG,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,YAAY,CAAC;QAC9C,IAAI,CAAC,OAAO,GAAG,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,OAAO,CAAC;QACpC,IAAI,CAAC,KAAK,GAAG,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,KAAK,CAAC;QAChC,IAAI,CAAC,OAAO,GAAG,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,KAAK,CAAC;QAClC,IAAI,CAAC,WAAW,GAAG,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,WAAW,CAAC;QAC5C,IAAI,CAAC,IAAI,GAAG,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,IAAI,CAAC;QAC9B,IAAI,CAAC,WAAW,GAAG,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,WAAW,CAAC;QAC5C,IAAI,CAAC,OAAO,GAAG,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,OAAO,CAAC;IACtC,CAAC;IAED,QAAQ;;QACN,IAAI,IAAI,CAAC,WAAW,EAAE;YACpB,IAAI,CAAC,cAAc,CAAC,UAAU,CAC5B,UAAU,EACV,IAAI,0DAAW,CAAC,IAAI,CAAC,WAAW,EAAE,yDAAU,CAAC,QAAQ,CAAC,CACvD,CAAC;SACH;QAED,IAAI,CAAC,cAAc,CAAC,UAAU,CAC5B,YAAY,EACZ,IAAI,0DAAW,CAAC,IAAI,CAAC,KAAK,EAAE;YAC1B,yDAAU,CAAC,QAAQ;YACnB,yDAAU,CAAC,OAAO,CAChB,4DAA4D,CAC7D;SACF,CAAC,CACH,CAAC;QACF,IAAI,CAAC,cAAc,CAAC,UAAU,CAC5B,MAAM,EACN,IAAI,0DAAW,CAAC,IAAI,CAAC,YAAY,EAAE,yDAAU,CAAC,QAAQ,CAAC,CACxD,CAAC;QACF,IAAI,CAAC,cAAc,CAAC,UAAU,CAC5B,SAAS,EACT,IAAI,0DAAW,CAAC,IAAI,CAAC,OAAO,EAAE,yDAAU,CAAC,QAAQ,CAAC,CACnD,CAAC;QACF,IAAI,CAAC,cAAc,CAAC,UAAU,CAC5B,OAAO,EACP,IAAI,0DAAW,CAAC,IAAI,CAAC,KAAK,EAAE;YAC1B,yDAAU,CAAC,QAAQ;YACnB,yDAAU,CAAC,OAAO,CAAC,yCAAyC,CAAC;SAC9D,CAAC,CACH,CAAC;QACF,IAAI,CAAC,cAAc,CAAC,UAAU,CAC5B,UAAU,EACV,IAAI,0DAAW,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC,CACrD,CAAC;QACF,IAAI,CAAC,cAAc,CAAC,UAAU,CAC5B,YAAY,EACZ,IAAI,0DAAW,CAAC,IAAI,CAAC,SAAS,CAAC,CAChC,CAAC;QACF,IAAI,CAAC,cAAc,CAAC,UAAU,CAC5B,aAAa,EACb,IAAI,0DAAW,OAAC,IAAI,CAAC,WAAW,mCAAI,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC,cAAc,EAAE,CAAC,CAC3E,CAAC;QACF,IAAI,CAAC,cAAc,CAAC,UAAU,CAC5B,MAAM,EACN,IAAI,0DAAW,CAAC,IAAI,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC,CAChD,CAAC;QACF,IAAI,CAAC,cAAc,CAAC,UAAU,CAC5B,YAAY,EACZ,IAAI,0DAAW,CAAC,IAAI,CAAC,SAAS,CAAC,CAChC,CAAC;QACF,IAAI,CAAC,cAAc,CAAC,UAAU,CAC5B,cAAc,EACd,IAAI,0DAAW,CAAC,IAAI,CAAC,WAAW,CAAC,CAClC,CAAC;QACF,IAAI,CAAC,cAAc,CAAC,UAAU,CAC5B,SAAS,EACT,IAAI,0DAAW,CAAC,IAAI,CAAC,OAAO,EAAE;YAC5B,yDAAU,CAAC,QAAQ;YACnB,yDAAU,CAAC,OAAO,CAAC,0BAA0B,CAAC;SAC/C,CAAC,CACH,CAAC;QACF,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,IAAI,CAAC,cAAc,EAAE,CAAC;IACxB,CAAC;IAED,YAAY;QACV,IAAI,CAAC,YAAY,CAAC,YAAY,EAAE,CAAC,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;YAClD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YACtB,IAAI,SAAS,IAAI,IAAI,CAAC,OAAO;gBAC3B,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,QAAQ,CAAC,UAAU,CAC9C,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,IAAI,CACvB,CAAC;QACN,CAAC,CAAC,CAAC;IACL,CAAC;IAED,cAAc;QACZ,IAAI,CAAC,aAAa,CAAC,cAAc,EAAE,CAAC,SAAS,CAAC,CAAC,IAAS,EAAE,EAAE;;YAC1D,IAAI,OAAO,IAAI,CAAC,MAAM,IAAI,QAAQ,EAAE;gBAClC,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;gBACtB,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;gBAC1B,OAAO;aACR;YACD,6DAA6D;YAC7D,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,MAAM,CAAC;YAC/B,IAAI,SAAS,SAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAC9B,CAAC,CAAM,EAAE,EAAE,CAAC,CAAC,CAAC,OAAO,IAAI,IAAI,CAAC,eAAe,CAC9C,0CAAE,IAAI,CAAC;YACR,IAAI,SAAS,EAAE;gBACb,IAAI,CAAC,cAAc,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;aACtC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IACD,iBAAiB,CAAC,EAAO,EAAE,KAAU;QACnC,IAAI,SAAS,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;QACnC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CACtC,CAAC,CAAM,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,IAAI,SAAS,CAChC,CAAC,OAAO,CAAC;QACV,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,YAAY,CAAC,UAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IACzE,CAAC;IACD,cAAc,CAAC,SAAc,EAAE,KAAU;QACvC,IAAI,KAAK,KAAK,IAAI;YAAE,SAAS,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;QACnD,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,CAAC,IAAS,EAAE,EAAE;YACnE,IAAI,OAAO,IAAI,CAAC,MAAM,IAAI,QAAQ,EAAE;gBAClC,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;gBACtB,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;aAC3B;iBAAM;gBACL,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,6BAA6B;gBAC7D,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;gBAC3C,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,YAAY,CAAC,UAAU,CAClD,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,OAAO,CAC5B,CAAC;aACH;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IACD,MAAM;QACJ,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;QACrB,IAAI,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE;YAC5B,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC;SACzB;aAAM;YACL,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;SACvB;IACH,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,SAAS,CACrE,CAAC,IAAI,EAAE,EAAE;YACP,IAAI,IAAI,CAAC,UAAU,IAAI,GAAG,EAAE;gBAC1B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,KAAK,CAAC,CAAC;gBAChC,IAAI,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE;oBAC5B,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC;iBACzB;aACF;YACD,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACtC,CAAC,EACD,CAAC,KAAK,EAAE,EAAE;YACR,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QAC7B,CAAC,CACF,CAAC;IACJ,CAAC;;gGA9LU,wBAAwB,qvBAgCzB,wEAAe;wGAhCd,wBAAwB;QCvBrC,yEAKC;QACD,yEAIG;QACH,yEAGgC;QAChC,0EAAwC;QAAC,8EAAkB;QAAA,4DAAO;QAClE,4DAAM;QACN,yEAG8B;QAC9B,sHAEO;QACP,4DAAM;QACN,4DAAM;QACJ,0EAMC;QACC,oHAiBM;QACN,yEAA4D;QAC1D,2EAAoB;QAAA,yEAAa;QAAA,4EAAuB;QAAA,6DAAC;QAAA,4DAAO;QAAA,4DAAO;QACvE,wEAOE;QACJ,4DAAM;QAEL,0EAA4D;QAC3D,2EAAoB;QAAA,wEAAY;QAAA,4EAAuB;QAAA,6DAAC;QAAA,4DAAO;QACjE,4DAAO;QACP,2EAAuF;QACvF,mHAEI;QACJ,mHAEI;QACJ,2HASI;QACF,6HAUO;QACX,4DAAM;QACJ,4DAAM;QACN,0EAA4D;QAC1D,2EAAoB;QAAA,wEAAY;QAAA,4EAAuB;QAAA,6DAAC;QAAA,4DAAO;QAAC,4DAAO;QACvE,2EAAoG;QAClG,mHAEI;QACJ,mHAC8D;QAEhE,2HAOE;QACF,6HAUO;QACb,4DAAM;QACF,4DAAM;QAGN,0EAA4D;QAC1D,2EAAoB;QAAA,iEAAK;QAAA,4EAAuB;QAAA,6DAAC;QAAA,4DAAO;QAAA,4DAAO;QAC/D,wEAOE;QACJ,4DAAM;QACN,0EAA4D;QAC1D,2EAAoB;QAAA,iEAAK;QAAA,4EAAuB;QAAA,6DAAC;QAAA,4DAAO;QAAA,4DAAO;QAC/D,wEAOE;QACJ,4DAAM;QACN,0EAA4D;QAC1D,2EAAoB;QAAA,mEAAO;QAAA,4EAAuB;QAAA,6DAAC;QAAA,4DAAO;QAAA,4DAAO;QACjE,wEAOE;QACJ,4DAAM;QACN,0EAA4D;QAC1D,2EAAoB;QAAA,iEAAK;QAAA,4EAAuB;QAAA,6DAAC;QAAA,4DAAO;QAAA,4DAAO;QAC/D,8EAKC;QACC,6HAES;QACX,4DAAS;QACX,4DAAM;QAEN,0EAA4D;QAC1D,2EAAoB;QAAA,gEAAI;QAAA,4EAAuB;QAAA,6DAAC;QAAA,4DAAO;QAAA,4DAAO;QAC9D,wEASE;QACJ,4DAAM;QAEN,0EAA4D;QAC1D,2EAAoB;QAAA,oEAAQ;QAAA,4EAAuB;QAAA,6DAAC;QAAA,4DAAO;QAAA,4DAAO;QAClE,wEASE;QACJ,4DAAM;QACR,4DAAO;QACP,2EAKC;QACC,8EAKC;QADC,iJAAS,YAAQ,IAAC;QAElB,wDACF;QAAA,4DAAS;QACT,8EAEqC;QAAnB,iJAAS,YAAQ,IAAC;QAAC,kEAAM;QAAA,4DAAS;QACtD,4DAAM;QACR,4DAAM;;;;;;;;;QAxMuD,0DAAiC;QAAjC,iGAAiC;QAM1F,0DAA4B;QAA5B,yFAA4B;QAOzB,0DAAiB;QAAjB,iFAAiB;QAoBhB,0DAEE;QAFF,wNAEE;QAWS,0DAAsC;QAAtC,sGAAsC;QAGtC,0DAAuC;QAAvC,uGAAuC;QAGzB,0DAAkB;QAAlB,kFAAkB;QAUf,0DAAuD;QAAvD,2HAAuD;QAgBpE,0DAAsC;QAAtC,sGAAsC;QAGjD,0DAAuC;QAAvC,uGAAuC;QAGhB,0DAAmB;QAAnB,mFAAmB;QAQlB,0DAAwD;QAAxD,4HAAwD;QAkBpF,0DAEE;QAFF,2NAEE;QASF,0DAEE;QAFF,gOAEE;QASF,0DAEE;QAFF,6NAEE;QASF,0DAEE;QAFF,8NAEE;QAGwB,0DAAY;QAAZ,kFAAY;QAStC,0DAA4B;QAA5B,yFAA4B;QAc5B,0DAA4B;QAA5B,yFAA4B;QAmB9B,0DAAmC;QAAnC,gGAAmC;QAInC,0DACF;QADE,gGACF;;;;;;;;;;;;;;ACxNJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQuB;AAce;AAEJ;AACQ;AACkB;AACG;AACM;AAC6B;AAEA;AAE7B;AACG;;;;;;;;;;;;;;;;;;;;;;;;IClB5D,wEAAsD;IACpD,iFAAqC;IAAA,uDAEnC;IAAA,4DAAa;IACjB,qEAAe;;;IAHD,0DAAwB;IAAxB,qFAAwB;IAAC,0DAEnC;IAFmC,wFAEnC;;;IAGJ,iFACG;IAAA,uEAAY;IAAA,4DACd;;;;IAvBX,0EAAqE;IACnE,0EAA4E;IAC1E,0EAA4C;IAAA,0EAAe;IAAA,4DAAM;IACjE,6EAAyC;IACvC,mEAA8C;IAChD,4DAAS;IACX,4DAAM;IACN,qFAAoB;IAClB,0EAA0C;IACxC,4EAAW;IAAA,wGAA6C;IAAA,4DAAY;IACpE,sFAAqC;IACnC,kFAGC;IAFC,6WAA+B;IAG/B,mJAIe;IAEf,+IAEC;IACH,4DAAa;IACf,4DAAiB;IACnB,4DAAM;IACR,4DAAqB;IACrB,0FAAiE;IAC/D,8EAMC;IADC,gWAAyC;IAEzC,2EACF;IAAA,4DAAS;IACX,4DAAqB;IACvB,4DAAM;;;IA3BI,2DAA+B;IAA/B,6FAA+B;IAGK,0DAAgB;IAAhB,yFAAgB;IAMvC,0DAAgC;IAAhC,mGAAgC;IAYjD,0DAA+B;IAA/B,+FAA+B;;;IA4BjC,0EAAuD;IACrD,0EAAoB;IAAA,yEAAc;IAAA,4DAAO;IACzC,2EAAoB;IAAA,uDAAkC;IAAA,4DAAO;IAC/D,4DAAM;;;IADgB,0DAAkC;IAAlC,oGAAkC;;;;IA0DxD,6EAKC;IADC,wUAAwB;IAExB,2EAAU;IAAA,oEAAS;IAAA,4DAAW;IAChC,4DAAS;;;;;IAkBH,0EAOG;IADD,oXAAuC;IAEvC,qEAKE;IACF,oEAAG;IAAC,uDAA2C;IAAA,uEAAO;IAAC,uEAAW;IAAA,4DAAO;IAAC,4DAAI;IAChF,4DAAM;;;;IAZJ,uOAAiE;IAQ/D,0DAA6D;IAA7D,mUAA6D;IAG3D,0DAA2C;IAA3C,+LAA2C;;;;IAEjD,0EAOG;IADD,gXAAqC;IAErC,qEAOE;IACF,oEAAG;IAAA,uDAAkB;IAAA,4DAAI;IAC3B,4DAAM;;;;IAdJ,qOAA+D;IAQ7D,0DAEC;IAFD,qYAEC;IAGA,0DAAkB;IAAlB,iFAAkB;;;;IAEvB,0EAOC;IAFC,0TAAsB;IAGtB,+EAA2D;IAAA,6EAAkB;IAAA,4DAAW;IACxF,uEAAM;IAAA,wEAAa;IAAA,4DAAO;IAC5B,4DAAM;;;;IAiBN,6EAOC;IAHC,6UAA4B;IAI5B,6EACF;IAAA,4DAAS;;;;IACT,6EAOC;IAJC,wUAAuB;IAKvB,wEACF;IAAA,4DAAS;;;;IACT,6EAOC;IAHC,8UAA6B;IAI7B,6EACF;IAAA,4DAAS;;;;IACT,6EAOC;IADC,mVAAkC;IAElC,2EACF;IAAA,4DAAS;;;;IACT,6EAOC;IADC,0UAAyB;IAEzB,4EACF;IAAA,4DAAS;;;IAUT,0EAOC;IACC,+EAGiB;IACjB,0EAA4D;IAC1D,qEAME;IACF,wEAAc;IAAA,uDAAgB;IAAA,4DAAI;IAClC,oEAAG;IACD,uDACF;IAAA,4DAAI;IACN,4DAAM;IACR,4DAAM;;;IAfF,0DAA4B;IAA5B,kHAA4B;IAO1B,0DAAoD;IAApD,8UAAoD;IAGxC,0DAAgB;IAAhB,wGAAgB;IAE5B,0DACF;IADE,8HACF;;;IAGJ,0EAOC;IACC,+EAGiB;IACjB,0EAA4D;IAC1D,qEASE;IACF,wEAAc;IAAA,uDAA2B;IAAA,4DAAI;IAC7C,oEAAG;IACD,uDACF;IAAA,4DAAI;IACN,4DAAM;IACR,4DAAM;;;IAlBF,0DAAuC;IAAvC,gJAAuC;IAOrC,0DAGC;IAHD,icAGC;IAGW,0DAA2B;IAA3B,sIAA2B;IAEvC,0DACF;IADE,4JACF;;;IA7HR,0EAAuE;IACrE,0EAKC;IACC,0EAAgB;IACd,uDAKF;IAAA,4DAAM;IACN,8HASS;IACT,8HASS;IACT,8HASS;IACT,8HASS;IACT,8HASS;IACX,4DAAM;IACN,6EAAsE;IACtE,2EAMC;IACC,0HAyBM;IACN,0HA4BM;IACR,4DAAM;IACR,4DAAM;;;IAzHA,0DAKF;IALE,gXAKF;IAOG,0DAAqB;IAArB,wFAAqB;IAUrB,0DAAqB;IAArB,wFAAqB;IAMrB,0DAAuD;IAAvD,0KAAuD;IAUvD,0DAAsD;IAAtD,yKAAsD;IAUtD,0DAAuD;IAAvD,0KAAuD;IAoBvC,0DAAiB;IAAjB,0FAAiB;IA0BjC,0DAAmC;IAAnC,6IAAmC;;;IAgC1C,2EACG;IAAA,uGAA4C;IAAA,4DAC9C;;;;IAaK,6EAKC;IAHC,kbAAsC;IAItC,mEAAuD;IAAC,mEAC1D;IAAA,4DAAS;;;IACT,6EAMC;IACC,2EAAU;IAAA,oEAAS;IAAA,4DAAW;IAChC,4DAAS;;;IACT,6EAMC;IACC,2EAAU;IAAA,oEAAS;IAAA,4DAAW;IAChC,4DAAS;;;;IApCb,0EAKC;IACC,2EAIC;IACC,8HAOS;IACT,8HAQS;IACT,8HAQS;IACX,4DAAO;IACP,2EAAoD;IAClD,2EAAiB;IAAA,uDAAkB;IAAA,4DAAO;IAC1C,uEAAM;IAAA,uDAAmC;IAAA,4DAAO;IAChD,wEAAM;IAAC,wDAAyB;IAAA,4DAAO;IACvC,wEAAM;IAAC,wDAA4B;IAAA,4DAAO;IAC5C,4DAAO;IACP,8EAKC;IAHC,yWAA+B;IAI/B,mEACF;IAAA,4DAAS;IACX,4DAAM;;;;IAtCC,0DAAyB;IAAzB,4FAAyB;IAMzB,0DAA0B;IAA1B,6FAA0B;IAS1B,0DAA0B;IAA1B,6FAA0B;IAUZ,0DAAkB;IAAlB,iFAAkB;IAC7B,0DAAmC;IAAnC,2GAAmC;IAClC,0DAAyB;IAAzB,kGAAyB;IACzB,0DAA4B;IAA5B,qGAA4B;;;;IAavC,6EAMC;IADC,4UAAkC;IAElC,2EACF;IAAA,4DAAS;;;;IACT,6EAMC;IAHC,sWAAoD;IAIpD,uDACF;IAAA,4DAAS;;;IADP,0DACF;IADE,wIACF;;;IAMF,2EAAkE;IAChE,yGACF;IAAA,4DAAO;;;IAaC,mEAIK;;;;IAVT,0EAIC;IACC,8EAAyD;IAAjD,kXAAgC;IACtC,2HAIK;IACP,4DAAS;IACT,2EAAuC;IAAlC,gXAAiC;IACpC,0EAAgB;IAAA,uDAAe;IAAA,4DAAM;IACrC,0EAAgB;IAAA,+DAAI;IAAA,4DAAM;IAC5B,4DAAM;IACR,4DAAM;;;;IATC,0DAAoB;IAApB,wFAAoB;IAMP,0DAAe;IAAf,8EAAe;;;IAnBvC,0EAGC;IACC,2EAAiB;IAAA,uDAAmB;IAAA,4DAAO;IAC3C,0EAAuC;IACrC,wHAgBM;IACR,4DAAM;IACR,4DAAM;;;IApBa,0DAAmB;IAAnB,yGAAmB;IAIf,0DAAc;IAAd,oFAAc;;;IA0B7B,mEAIK;;;;IAVT,2EAIC;IACC,8EAAiC;IAC/B,qHAIK;IACP,4DAAS;IACT,2EAAuC;IAAlC,yWAAiC;IACpC,0EAAgB;IAAA,uDAAe;IAAA,4DAAM;IACrC,0EAAgB;IAAA,+DAAI;IAAA,4DAAM;IAC5B,4DAAM;IACR,4DAAM;;;;IATC,0DAAoB;IAApB,wFAAoB;IAMP,0DAAe;IAAf,8EAAe;;;;IAOrC,6EAMC;IAFC,uUAA6B;IAG7B,wEACF;IAAA,4DAAS;;;;IACT,6EAMC;IAFC,4VAA0C;IAG1C,uDACF;IAAA,4DAAS;;;IADP,0DACF;IADE,gIACF;;;IAEA,oFAA8D;IAAC,sEAAU;IAAA,4DAAe;;;ADvb3F,MAAM,oBAAoB;IAiK/B,YACU,mBAAuC,EACvC,OAAe,EACf,KAAkB,EAClB,KAAkB,EAClB,UAAqB,EACrB,QAAwB,EACxB,OAAkB,EAClB,aAA2B;;QAP3B,wBAAmB,GAAnB,mBAAmB,CAAoB;QACvC,YAAO,GAAP,OAAO,CAAQ;QACf,UAAK,GAAL,KAAK,CAAa;QAClB,UAAK,GAAL,KAAK,CAAa;QAClB,eAAU,GAAV,UAAU,CAAW;QACrB,aAAQ,GAAR,QAAQ,CAAgB;QACxB,YAAO,GAAP,OAAO,CAAW;QAClB,kBAAa,GAAb,aAAa,CAAc;QAxK5B,YAAO,GAAW,CAAC,CAAC;QACpB,SAAI,GAAsB,OAAO,CAAC;QAClC,aAAQ,GAAW,oCAAoC,CAAC;QAEvD,WAAM,GAAG,IAAI,0DAAY,EAAE,CAAC;QAC5B,WAAM,GAAG,IAAI,0DAAY,EAAE,CAAC;QACjB,WAAM,GAAqB,EAAsB,CAAC;QACvE,cAAS,GAAG,KAAK,CAAC;QAElB,WAAM,GAAmB,EAAoB,CAAC;QAC9C,iBAAY,GAAQ,EAAE,CAAC;QACvB,eAAU,GAAe,EAAE,CAAC;QAC5B,sBAAiB,GAAQ,EAAE,CAAC;QAC5B,kBAAa,GAAe,EAAE,CAAC;QAC/B,eAAe;QACf,gBAAW,GAAe,EAAE,CAAC;QAC7B,gBAAW,GAAe,EAAE,CAAC;QAC7B,oBAAe,GAAQ,EAAE,CAAC;QAC1B,mBAAc,GAAe,EAAE,CAAC;QAEhC,aAAa;QACb,kBAAa,GAAe,EAAE,CAAC;QAC/B,sBAAiB,GAAQ,EAAE,CAAC;QAC5B,wBAAmB,GAAG,KAAK,CAAC;QAC5B,kBAAkB;QAClB,aAAQ,GAAQ,EAAE,CAAC;QACnB,mBAAc,GAAG,KAAK,CAAC;QACvB,eAAU,GAAW,CAAC,CAAC;QACvB,wBAAmB,GAAG;YACpB;gBACE,QAAQ,EAAE,KAAK;gBACf,IAAI,EAAE,eAAe;gBACrB,QAAQ,EAAE,GAAG;gBACb,UAAU,EAAE,IAAI;aACjB;YACD;gBACE,QAAQ,EAAE,KAAK;gBACf,IAAI,EAAE,kBAAkB;gBACxB,QAAQ,EAAE,GAAG;gBACb,UAAU,EAAE,IAAI;aACjB;YACD;gBACE,QAAQ,EAAE,KAAK;gBACf,IAAI,EAAE,WAAW;gBACjB,QAAQ,EAAE,GAAG;gBACb,UAAU,EAAE,IAAI;gBAChB,UAAU,EAAE,CAAC;aACd;YACD;gBACE,QAAQ,EAAE,KAAK;gBACf,IAAI,EAAE,WAAW;gBACjB,QAAQ,EAAE,GAAG;gBACb,UAAU,EAAE,IAAI;aACjB;SACF,CAAC;QAEF,eAAU,GAAG;YACX;gBACE,KAAK,EAAE,MAAM;gBACb,KAAK,EAAE,GAAG;gBACV,UAAU,EAAE,EAAE;gBACd,aAAa,EAAE,EAAE;gBACjB,OAAO,EAAE,CAAC,MAAW,EAAE,EAAE,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,KAAK,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;gBACnE,SAAS,EAAE,CAAC,MAAW,EAAE,EAAE;oBACzB,IAAI,MAAM,CAAC,IAAI,CAAC,QAAQ,KAAK,KAAK,EAAE;wBAClC,OAAO,EAAE,YAAY,EAAE,KAAK,EAAE,CAAC;qBAChC;oBACD,OAAO,EAAE,CAAC;gBACZ,CAAC;aACF;YACD,EAAE,KAAK,EAAE,gBAAgB,EAAE,UAAU,EAAE,MAAM,EAAE;YAC/C,EAAE,KAAK,EAAE,KAAK,EAAE,UAAU,EAAE,KAAK,EAAE;YACnC;gBACE,UAAU,EAAE,OAAO;gBACnB,YAAY,EAAE,wBAAwB;gBACtC,KAAK,EAAE,sBAAsB;gBAC7B,SAAS,EAAE;oBACT,OAAO,EAAE,QAAQ;iBAClB;aAKF;YACD;gBACE,UAAU,EAAE,cAAc;gBAC1B,KAAK,EAAE,MAAM;gBACb,KAAK,EAAE,OAAO;aACf;YACD;gBACE,UAAU,EAAE,MAAM;gBAClB,KAAK,EAAE,aAAa;gBACpB,YAAY,EAAE,sBAAsB;gBACpC,WAAW,EAAE,CAAC,MAA2B,EAAE,EAAE;oBAC3C,OAAO,MAAM,CAAC,IAAI,CAAC,WAAW,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC;gBACxD,CAAC;aACF;YACD;gBACE,UAAU,EAAE,KAAK;gBACjB,KAAK,EAAE,QAAQ;gBACf,YAAY,EAAE,qBAAqB;aACpC;YACD;gBACE,UAAU,EAAE,eAAe;gBAC3B,KAAK,EAAE,WAAW;gBAClB,WAAW,EAAE,CAAC,MAA2B,EAAE,EAAE;oBAC3C,OAAO,MAAM,CAAC,IAAI,CAAC,WAAW,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC;gBACtE,CAAC;aACF;YACD;gBACE,UAAU,EAAE,yBAAyB;gBACrC,KAAK,EAAE,OAAO;gBACd,YAAY,EAAE,CAAC,MAA2B,EAAE,EAAE;oBAC5C,OAAO,MAAM,CAAC,IAAI,CAAC,WAAW,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC;gBAC7D,CAAC;aACF;YACD,qDAAqD;YAErD;gBACE,UAAU,EAAE,QAAQ;gBACpB,KAAK,EAAE,QAAQ;aAChB;YACD;gBACE,UAAU,EAAE,WAAW;gBACvB,KAAK,EAAE,UAAU;gBACjB,YAAY,EAAE,4BAA4B;aAC3C;SACF,CAAC;QAEF,gBAAW,GAAgB;YACzB,WAAW,EAAE,CAAC,GAAmB,EAAE,EAAE;gBACnC,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC;gBAClB,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;YACxB,CAAC;YACD,SAAS,EAAE,GAAG;YACd,YAAY,EAAE,GAAG;YACjB,YAAY,EAAE,CAAC,MAAW,EAAE,EAAE;;gBAC5B,OAAO,aAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,IAAI,0CAAE,UAAU,EAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC;YAC7C,CAAC;SACF,CAAC;QACF,kBAAa,GAAG;YACd,QAAQ,EAAE,IAAI;YACd,SAAS,EAAE,WAAW;YACtB,SAAS,EAAE;gBACT,aAAa,EAAE,QAAQ;gBACvB,aAAa,EAAE,QAAQ;gBACvB,iBAAiB,EAAE,QAAQ;gBAC3B,OAAO,EAAE,MAAM;gBACf,OAAO,EAAE,UAAU;aACpB;SACF,CAAC;QACF,wBAAmB,GAAG;YACpB,sBAAsB,EAAE,mFAAsB;YAC9C,0BAA0B,EAAE,6GAA0B;YACtD,oBAAoB,EAAE,gFAAiB;YACvC,mBAAmB,EAAE,6EAAgB;SACtC,CAAC;QACF,YAAO,GAAsB,IAAI,+CAAU,EAAE,CAAC;QAC9C,UAAK,GAAe,IAAI,CAAC;QACjB,cAAS,GAAkC,SAAS,CAAC;QAW3D,IAAI,CAAC,KAAK,SAAG,IAAI,CAAC,OAAO,CAAC,oBAAoB,EAAE,0CAAE,MAAM,CAAC,KAAK,CAAC;IACjE,CAAC;IAED,QAAQ;;QACN,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAC3B,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAC3B,IAAI,CAAC,YAAY,EAAE,CAAC;QAEpB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QACpD,IAAI,IAAI,CAAC,UAAU,IAAI,CAAC,WAAI,IAAI,CAAC,KAAK,0CAAE,UAAU,GAAE;YAClD,IAAI,CAAC,UAAU,EAAE,CAAC;SACnB;IACH,CAAC;IACD,WAAW,CAAC,GAAmB;QAC7B,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC;QAClB,GAAG,CAAC,GAAG,CAAC,gBAAgB,EAAE,CAAC;QAC3B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC;IACxC,CAAC;IAED,OAAO;QACL,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAC3B,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,IAAI,CAAC,QAAQ,EAAE,CAAC;QAChB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAChC,CAAC;IACD,eAAe;QACb,OAAO,IAAI,CAAC,mBAAmB,CAAC,eAAe,CAAI,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,CACnE,0DAAG,CAAC,CAAC,CAAM,EAAE,EAAE;YACb,IAAI,CAAC,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,EAAE;gBAC5B,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;aAChC;iBAAM;gBACL,IAAI,CAAC,gBAAgB,CAAC;oBACpB,YAAY,EAAE,CAAC;oBACf,cAAc,EAAE,CAAC;oBACjB,UAAU,EAAE,CAAC;iBACd,CAAC,CAAC;aACJ;YACD,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,UAAU,EAAE,CAAC;YAC7B,OAAO,CAAC,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,IAAS,EAAE,KAAa,EAAE,EAAE;gBACpD,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC,KAAK,CAAC,YAAY,CAAC;gBACzC,IAAI,CAAC,IAAI,GAAG,KAAK,GAAG,CAAC,CAAC;gBACtB,OAAO,IAAI,CAAC;YACd,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IAED,mBAAmB;QACjB,IAAI,CAAC,mBAAmB;aACrB,mBAAmB,CAAa,IAAI,CAAC,OAAO,CAAC;aAC7C,SAAS,CAAC,CAAC,IAAS,EAAE,EAAE;YACvB,IAAI,OAAO,IAAI,KAAK,QAAQ,EAAE;gBAC5B,OAAO;aACR;YACD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YACvB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,cAAc,CAAC;YACvC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,CAAC,CAAM,EAAE,EAAE;gBACzD,CAAC,CAAC,YAAY,GAAG,IAAI,CAAC;gBACtB,OAAO,CAAC,CAAC;YACX,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAED,mBAAmB;QACjB,IAAI,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC,KAAK,EAAE,CAAC;QAC1C,IAAI,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC,YAAY,EAAE,CAAC;QACpD,IAAI,CAAC,mBAAmB;aACrB,mBAAmB,CAAC,IAAI,CAAC,OAAO,CAAC;aACjC,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;YAClB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;YACzB,IAAI,IAAI,CAAC,YAAY,CAAC,MAAM,KAAK,MAAM,EAAE;gBACvC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;aACvB;YACD,IACE,SAAS,KAAK,IAAI,CAAC,YAAY,CAAC,UAAU;gBAC1C,IAAI,CAAC,YAAY,CAAC,gBAAgB,KAAK,CAAC,EACxC;gBACA,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;aACvB;QACH,CAAC,CAAC,CAAC;IACP,CAAC;IAEO,cAAc;QACpB,OAAO;YACL,WAAW,EAAE,IAAI,CAAC,YAAY,CAAC,IAAI;YACnC,KAAK,EAAE,IAAI,CAAC,YAAY,CAAC,SAAS;YAClC,YAAY,EAAE,IAAI,CAAC,YAAY,CAAC,IAAI;YACpC,OAAO,EAAE,IAAI,CAAC,YAAY,CAAC,OAAO;YAClC,KAAK,EAAE,IAAI,CAAC,YAAY,CAAC,KAAK;YAC9B,KAAK,EAAE,IAAI,CAAC,YAAY,CAAC,KAAK;YAC9B,WAAW,EAAE,IAAI,CAAC,YAAY,CAAC,YAAY;YAC3C,IAAI,EAAE,IAAI,CAAC,YAAY,CAAC,SAAS;YACjC,WAAW,EAAE,IAAI,CAAC,YAAY,CAAC,YAAY;YAC3C,OAAO,EAAE,IAAI,CAAC,YAAY,CAAC,WAAW;SACvC,CAAC;IACJ,CAAC;IAED,MAAM,CAAC,GAAQ;QACb,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC,cAAc,EAAE,EAAE,CAAC,CAAC;QACxE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IACxB,CAAC;IACD,MAAM,CAAC,GAAQ;QACb,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC,cAAc,EAAE,EAAE,CAAC,CAAC;QACxE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IACxB,CAAC;IAED,gBAAgB,CAAC,IAAS;QACxB,IAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC,QAAQ,GAAG,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,YAAY,CAAC;QAC1D,IAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC,IAAI;YAC9B,SAAS,IAAG,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,cAAc,IAAG,QAAQ,CAAC;QAC9C,IAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC,QAAQ,GAAG,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,UAAU,CAAC;QACxD,IAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC,UAAU,GAAG,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,cAAc,CAAC;QAC9D,IAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC,UAAU,GAAG,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,cAAc,CAAC;QAC9D,IAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC,QAAQ,GAAG,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,UAAU,CAAC;IAC1D,CAAC;IAED,UAAU;QACR,IAAI,CAAC,OAAO;aACT,IAAI,CAAC,6GAA0B,EAAE;YAChC,MAAM,EAAE,MAAM;YACd,KAAK,EAAE,KAAK;YACZ,IAAI,EAAE;gBACJ,QAAQ,EAAE,IAAI;gBACd,OAAO,EAAE,IAAI,CAAC,OAAO;gBACrB,IAAI,EAAE,IAAI,CAAC,IAAI;aAChB;SACF,CAAC;aACD,WAAW,EAAE;aACb,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;YAClB,IAAI,IAAI,IAAI,IAAI,CAAC,KAAK,IAAI,aAAa,EAAE;aACxC;iBAAM,IAAI,IAAI,IAAI,IAAI,CAAC,KAAK,IAAI,WAAW,EAAE;aAC7C;iBAAM,IAAI,IAAI,IAAI,IAAI,CAAC,KAAK,IAAI,eAAe,EAAE;aACjD;YACD,IAAI,CAAC,OAAO,EAAE,CAAC;QACjB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,YAAY,CAAC,iBAAyB;QACpC,IAAI,CAAC,mBAAmB;aACrB,YAAY,CAAC,IAAI,CAAC,OAAO,EAAE,iBAAiB,CAAC;aAC7C,SAAS,CACR,CAAC,IAAS,EAAE,EAAE;;YACZ,UAAI,CAAC,SAAS,0CAAE,KAAK,GAAG;YACxB,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YAChC,IAAI,CAAC,QAAQ,EAAE,CAAC;YAChB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAChC,CAAC,EACD,CAAC,KAAK,EAAE,EAAE;YACR,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,uBAAuB,CAAC,CAAC;QAC/C,CAAC,CACF,CAAC;IACN,CAAC;IAED,eAAe;QACb,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;IACtC,CAAC;IAED,YAAY,CAAC,GAAQ,IAAG,CAAC;IACzB,eAAe;IACf,kBAAkB,CAAC,WAAgB;;QACjC,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;QACzB,IAAI,CAAC,eAAe,GAAG,WAAW,CAAC;QACnC,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,YAAY,EAAE;YACtC,IAAI,CAAC,mBAAmB;iBACrB,iBAAiB,aAAC,IAAI,CAAC,eAAe,0CAAE,cAAc,0CAAE,EAAE,CAAC;iBAC3D,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;gBAClB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,eAAe,CAAC;YAC7C,CAAC,CAAC,CAAC;SACN;IACH,CAAC;IACD,gBAAgB;;QACd,IAAI,GAAG,CAAC;QACR,IAAI,WAAI,CAAC,eAAe,0CAAE,YAAY,KAAI,IAAI,EAAE;YAC9C,GAAG,GAAG;gBACJ,GAAG,QAAE,IAAI,CAAC,eAAe,0CAAE,QAAQ;gBACnC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC,KAAK,EAAE;gBACrC,UAAU,QAAE,IAAI,CAAC,eAAe,0CAAE,UAAU;gBAC5C,GAAG,cAAE,IAAI,CAAC,eAAe,0CAAE,aAAa,0CAAE,IAAI;gBAC9C,QAAQ,QAAE,IAAI,CAAC,eAAe,0CAAE,GAAG;gBACnC,WAAW,QAAE,IAAI,CAAC,eAAe,0CAAE,WAAW;gBAC9C,KAAK,QAAE,IAAI,CAAC,eAAe,0CAAE,MAAM;gBACnC,YAAY,QAAE,IAAI,CAAC,eAAe,0CAAE,YAAY;gBAChD,MAAM,EAAE,cAAc;aACvB,CAAC;SACH;aAAM;YACL,GAAG,GAAG;gBACJ,QAAQ,EAAE,IAAI;gBACd,GAAG,QAAE,IAAI,CAAC,eAAe,0CAAE,QAAQ;gBACnC,GAAG,QAAE,IAAI,CAAC,eAAe,0CAAE,YAAY;gBACvC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC,KAAK,EAAE;gBACrC,MAAM,EAAE,cAAc;aACvB,CAAC;SACH;QAED,IAAI,CAAC,OAAO;aACT,IAAI,CAAC,gFAAiB,EAAE;YACvB,MAAM,EAAE,KAAK;YACb,KAAK,EAAE,KAAK;YACZ,IAAI,EAAE,GAAG;SACV,CAAC;aACD,WAAW,EAAE;aACb,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;YAClB,IAAI,IAAI,EAAE;gBACR,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;gBAC5B,IAAI,CAAC,mBAAmB,EAAE,CAAC;gBAC3B,IAAI,CAAC,YAAY,EAAE,CAAC;aACrB;QACH,CAAC,CAAC,CAAC;QACL,sEAAsE;IACxE,CAAC;IAED,WAAW;;QACT,IAAI,GAAG,CAAC;QACR,IAAI,WAAI,CAAC,eAAe,0CAAE,YAAY,KAAI,IAAI,EAAE;YAC9C,GAAG,GAAG;gBACJ,GAAG,QAAE,IAAI,CAAC,eAAe,0CAAE,QAAQ;gBACnC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC,KAAK,EAAE;gBACrC,UAAU,QAAE,IAAI,CAAC,eAAe,0CAAE,UAAU;gBAC5C,GAAG,cAAE,IAAI,CAAC,eAAe,0CAAE,aAAa,0CAAE,IAAI;gBAC9C,QAAQ,QAAE,IAAI,CAAC,eAAe,0CAAE,GAAG;gBACnC,WAAW,QAAE,IAAI,CAAC,eAAe,0CAAE,WAAW;gBAC9C,KAAK,QAAE,IAAI,CAAC,eAAe,0CAAE,MAAM;gBACnC,YAAY,QAAE,IAAI,CAAC,eAAe,0CAAE,YAAY;gBAChD,MAAM,EAAE,cAAc;aACvB,CAAC;SACH;aAAM;YACL,GAAG,GAAG;gBACJ,QAAQ,EAAE,IAAI;gBACd,GAAG,QAAE,IAAI,CAAC,eAAe,0CAAE,QAAQ;gBACnC,GAAG,QAAE,IAAI,CAAC,eAAe,0CAAE,YAAY;gBACvC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC,KAAK,EAAE;gBACrC,MAAM,EAAE,cAAc;aACvB,CAAC;SACH;QAED,IAAI,CAAC,OAAO;aACT,IAAI,CAAC,oFAAkB,EAAE;YACxB,MAAM,EAAE,KAAK;YACb,KAAK,EAAE,KAAK;YACZ,IAAI,EAAE,GAAG;SACV,CAAC;aACD,WAAW,EAAE;aACb,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;YAClB,IAAI,IAAI,EAAE;gBACR,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;gBAC5B,IAAI,CAAC,mBAAmB,EAAE,CAAC;gBAC3B,IAAI,CAAC,YAAY,EAAE,CAAC;aACrB;QACH,CAAC,CAAC,CAAC;QAEL,qEAAqE;IACvE,CAAC;IACD,sBAAsB;;QACpB,IAAI,CAAC,mBAAmB;aACrB,sBAAsB,CAAC,IAAI,CAAC,OAAO,QAAE,IAAI,CAAC,eAAe,0CAAE,IAAI,CAAC;aAChE,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;YAClB,IAAI,IAAI,CAAC,UAAU,IAAI,GAAG,EAAE;gBAC1B,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;gBACnC,IAAI,CAAC,mBAAmB,EAAE,CAAC;aAC5B;iBAAM;gBACL,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;aACpC;QACH,CAAC,CAAC,CAAC;IACP,CAAC;IACD,iBAAiB;;QACf,IAAI,CAAC,mBAAmB;aACrB,iBAAiB,CAAC,IAAI,CAAC,OAAO,cAAE,IAAI,CAAC,eAAe,0CAAE,cAAc,0CAAE,EAAE,CAAC;aACzE,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;YAClB,IAAI,IAAI,CAAC,UAAU,IAAI,GAAG,EAAE;gBAC1B,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;gBACnC,IAAI,CAAC,mBAAmB,EAAE,CAAC;aAC5B;iBAAM;gBACL,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;aACpC;QACH,CAAC,CAAC,CAAC;IACP,CAAC;IAED,aAAa;;QACX,IAAI,CAAC,OAAO,CAAC,aAAa,CACxB,aAAa,gBAAG,IAAI,CAAC,eAAe,0CAAE,cAAc,0CAAE,EAAE,EACzD,CAAC;IACJ,CAAC;IAED,iBAAiB,CAAC,IAAS;QACzB,MAAM,WAAW,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,MAAM,CAAC;QACnE,IAAI,KAAK,GAAG,OAAO,CAAC;QACpB,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI,OAAO,CAAC,EAAE;YAC1B,KAAK,GAAG,OAAO,CAAC;SACjB;QACD,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC;YACpB,KAAK;YACL,IAAI,CAAC,OAAO;YACZ,iBAAiB;YACjB,WAAW;YACX,MAAM;YACN,IAAI,CAAC,IAAI;SACV,CAAC,CAAC;IACL,CAAC;IAED,iBAAiB;IACjB,iBAAiB,CAAC,EAAO;QACvB,IAAI,KAAK,GAAG,OAAO,CAAC;QACpB,IAAI,IAAI,CAAC,IAAI,IAAI,OAAO,EAAE;YACxB,KAAK,GAAG,OAAO,CAAC;SACjB;QACD,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,KAAK,EAAE,IAAI,CAAC,OAAO,EAAE,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC;IACxD,CAAC;IACD,YAAY;QACV,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;YAC/D,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,MAAM,CAAC;YACjC,IAAI,CAAC,QAAQ,EAAE,CAAC;QAClB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,wBAAwB,CAAC,EAAO;QAC9B,IAAI,CAAC,aAAa;aACf,wBAAwB,CAAC,IAAI,CAAC,OAAO,EAAE,EAAE,CAAC,IAAI,CAAC;aAC/C,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;YAClB,IAAI,IAAI,CAAC,UAAU,IAAI,GAAG,EAAE;gBAC1B,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBACpC,IAAI,CAAC,YAAY,EAAE,CAAC;aACrB;iBAAM;gBACL,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;aACnC;QACH,CAAC,CAAC,CAAC;IACP,CAAC;IACD,sBAAsB;QACpB,IAAI,CAAC,UAAU;aACZ,IAAI,CAAC,uEAAc,EAAE;YACpB,KAAK,EAAE,KAAK;YACZ,MAAM,EAAE,KAAK;YACb,IAAI,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE;SAChC,CAAC;aACD,WAAW,EAAE;aACb,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;YAClB,IAAI,IAAI,EAAE;gBACR,IAAI,CAAC,YAAY,EAAE,CAAC;aACrB;QACH,CAAC,CAAC,CAAC;IACP,CAAC;IAED,iBAAiB;QACf,IAAI,CAAC,UAAU;aACZ,IAAI,CAAC,0EAAe,EAAE;YACrB,KAAK,EAAE,KAAK;YACZ,MAAM,EAAE,KAAK;YACb,IAAI,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE;SAChC,CAAC;aACD,WAAW,EAAE;aACb,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;YAClB,IAAI,IAAI,EAAE;gBACR,IAAI,CAAC,QAAQ,EAAE,CAAC;aACjB;QACH,CAAC,CAAC,CAAC;IACP,CAAC;IAED,kBAAkB;IAClB,QAAQ;QACN,oDAAoD;QACpD,IAAI,CAAC,aAAa;aACf,QAAQ,CAAC,EAAE,QAAQ,EAAE,IAAI,CAAC,OAAO,EAAE,CAAC;aACpC,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;YAClB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACrB,wEAAwE;YACxE,kEAAkE;YAClE,oDAAoD;QACtD,CAAC,CAAC,CAAC;QACL,OAAO;QACP,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;IAClC,CAAC;IAED,gBAAgB,CAAC,IAAS;QACxB,IAAI,CAAC,aAAa;aACf,gBAAgB,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC;aACpD,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;YAClB,IAAI,IAAI,CAAC,UAAU,EAAE;gBACnB,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBACpC,IAAI,CAAC,QAAQ,EAAE,CAAC;aACjB;iBAAM;gBACL,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;aACrC;QACH,CAAC,CAAC,CAAC;IACP,CAAC;;wFAziBU,oBAAoB;oGAApB,oBAAoB;;;;;;;QCzCjC,6MAyCc;QAEd,yEAA8D;QAC5D,yEAAmE;QACjE,yEAKC;QACC,uEAAM;QAAA,uDAAU;QAAA,4DAAO;QACvB,yEAAuB;QACvB,oEAAyC;QAC3C,4DAAM;QACN,4DAAM;QACN,yEAKC;QACC,kHAGM;QACN,0EAAiB;QACf,2EAAoB;QAAA,0EAAc;QAAA,4DAAO;QACzC,4EAAoB;QAAA,wDAA+B;QAAA,4DAAO;QAC5D,4DAAM;QACN,0EAAiB;QACf,2EAAoB;QAAA,0EAAc;QAAA,4DAAO;QACzC,4EAAoB;QAAA,wDAA+B;QAAA,4DAAO;QAC5D,4DAAM;QACN,0EAAiB;QACf,2EAAoB;QAAA,qEAAS;QAAA,4DAAO;QACpC,4EAAoB;QAAA,wDAA0B;QAAA,4DAAO;QACvD,4DAAM;QACN,0EAAiB;QACf,2EAAoB;QAAA,qEAAS;QAAA,4DAAO;QACpC,4EAAoB;QAAA,wDAAuB;QAAA,4DAAO;QACpD,4DAAM;QACN,0EAAiB;QACf,2EAAoB;QAAA,wEAAY;QAAA,4DAAO;QACvC,4EAAoB;QAAA,wDAA4B;QAAA,4DAAO;QACzD,4DAAM;QACN,0EAAiB;QACf,2EAAoB;QAAA,mEAAO;QAAA,4DAAO;QAClC,4EAAoB;QAAA,wDAAgC;QAAA,4DAAO;QAC7D,4DAAM;QACN,0EAAiB;QACf,2EAAoB;QAAA,2EAAe;QAAA,4DAAO;QAC1C,4EAAoB;QAAA,wDAAuB;QAAA,4DAAO;QACpD,4DAAM;QACN,0EAAiB;QACf,2EAAoB;QAAA,mEAAO;QAAA,4DAAO;QAClC,4EAAoB;QAAA,wDAAwB;QAAA,4DAAO;QACrD,4DAAM;QACN,0EAAiB;QACf,2EAAoB;QAAA,kEAAM;QAAA,4DAAO;QACjC,4EAAoB;QAAA,wDAA4B;QAAA,4DAAO;QACzD,4DAAM;QACN,0EAAiB;QACf,2EAAoB;QAAA,qEAAS;QAAA,4DAAO;QACpC,4EAAoB;QAAA,wDAA8B;QAAA,4DAAO;QAC3D,4DAAM;QACR,4DAAM;QACN,2EAMC;QACC,8EAKC;QADC,mJAAS,kBAAc,IAAC;QAExB,4EAAU;QAAA,qEAAS;QAAA,4DAAW;QAChC,4DAAS;QACT,yHAOS;QACX,4DAAM;QACR,4DAAM;QACN,qFAKC;QAFC,kLAAqB,wBAAoB,IAAC;QAG1C,+EAA8B;QAC5B,2EAAyC;QACvC,2EAAwE;QACtE,2EAKC;QACC,mHAeM;QACN,mHAiBM;QACN,mHAUM;QACR,4DAAM;QACR,4DAAM;QACN,oHAiIM;QACR,4DAAM;QACR,4DAAU;QACV,+EAA6B;QAC3B,2EAAuC;QACrC,qHAEC;QACD,2EAAkE;QAChE,oHAoDM;QACR,4DAAM;QACN,2EAAuC;QACrC,yHAQS;QACT,yHAQS;QACX,4DAAM;QACR,4DAAM;QACR,4DAAU;QACV,+EAAkC;QAChC,2EAAwC;QACtC,qHAEO;QACP,mHAwBM;QACN,2EAAiD;QAE/C,2EAAuC;QACrC,mHAgBM;QACR,4DAAM;QACR,4DAAM;QACN,2EAAuC;QACrC,yHAQS;QACT,yHAQS;QACT,uEAAoB;QACpB,qIAAwF;QAC1F,4DAAM;QACR,4DAAM;QACR,4DAAU;QACZ,4DAAgB;QAEhB,2EAA2E;QACzE,2EAA2B;QACzB,4EAAyC;QAAA,wDAAgB;QAAA,4DAAO;QAClE,4DAAM;QACN,2EAKC;QAED,wEAAK;QACD,6EAAyC;QAAA,4EAAe;QAAA,4DAAO;QAC/D,6EAAyC;QACvC,yDAA4B;QAAA,4DAC7B;QACH,4DAAM;QACN,wEAAK;QACH,6EAAyC;QAAA,sEAAS;QAAA,4DAAO;QACzD,6EAAyC;QAAA,yDAEvC;QAAA,4DAAO;QACX,4DAAM;QACR,4DAAM;QACN,mFAUkB;;QAClB,4EAKC;QACC,2FAA6C;QAC/C,4DAAM;QACR,4DAAM;QACR,4DAAM;;QA/dM,0DAAU;QAAV,yEAAU;QAEX,0DAAgB;QAAhB,0IAAgB;QASH,0DAAmC;QAAnC,oIAAmC;QAM/B,0DAA+B;QAA/B,8FAA+B;QAI/B,0DAA+B;QAA/B,8FAA+B;QAI/B,0DAA0B;QAA1B,yFAA0B;QAI1B,0DAAuB;QAAvB,sFAAuB;QAIvB,0DAA4B;QAA5B,2FAA4B;QAI5B,0DAAgC;QAAhC,+FAAgC;QAIhC,0DAAuB;QAAvB,sFAAuB;QAIvB,0DAAwB;QAAxB,uFAAwB;QAIxB,0DAA4B;QAA5B,2FAA4B;QAI5B,0DAA8B;QAA9B,6FAA8B;QAoBjD,0DAAmC;QAAnC,uGAAmC;QA2BR,0DAAc;QAAd,oFAAc;QAgBhB,0DAAc;QAAd,oFAAc;QAoBjC,0DAAmC;QAAnC,uGAAmC;QAOvB,0DAAqB;QAArB,qFAAqB;QAsIjC,0DAA+B;QAA/B,+FAA+B;QAKnB,0DAAgB;QAAhB,sFAAgB;QAwD9B,0DAA8C;QAA9C,kHAA8C;QAS9C,0DAAsB;QAAtB,sFAAsB;QAYpB,0DAA+B;QAA/B,+FAA+B;QAKrB,0DAA+B;QAA/B,kIAA+B;QA4BzB,0DAAkC;QAAlC,qIAAkC;QAqBpD,0DAAuC;QAAvC,4GAAuC;QAQvC,0DAAoB;QAApB,qFAAoB;QAQP,0DAAoB;QAApB,qFAAoB;QAQC,0DAAgB;QAAhB,0FAAgB;QAYrD,0DAA4B;QAA5B,qGAA4B;QAKW,0DAEvC;QAFuC,6FAEvC;QAIJ,0DAA2B;QAA3B,wFAA2B;;;;;;;;;;;;;;;;;;;;;;ACrf1B,MAAM,sBAAsB;IACjC,YACU,KAAkB,EAClB,IAAwB,EACxB,KAAkB;QAFlB,UAAK,GAAL,KAAK,CAAa;QAClB,SAAI,GAAJ,IAAI,CAAoB;QACxB,UAAK,GAAL,KAAK,CAAa;IACzB,CAAC;IAEI,SAAS,CAAC,IAAe;QAC/B,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC;QACrB,GAAG,CAAC,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC,KAAK,EAAE,CAAC;QAC3C,GAAG,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC,KAAK,EAAE,CAAC;QAC1C,OAAO,GAAG,CAAC;IACb,CAAC;IAED,WAAW,CAAC,GAAc,EAAE,IAAmB;QAC7C,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;QAE1B,IAAI,GAAG,GAAG,YAAY,CAAC;QACvB,yBAAyB;QACzB,wBAAwB;QACxB,IAAI;QACJ,IAAI,IAAI,KAAK,MAAM,EAAE;YACnB,GAAG,GAAG,aAAa,CAAC;SACrB;QACD,OAAO,IAAI,CAAC,KAAK,CAAC,eAAe,CAC/B,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,GAAG,GAAG,EAC7B,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CACpB,CAAC;IACJ,CAAC;;4FA5BU,sBAAsB;yGAAtB,sBAAsB,WAAtB,sBAAsB,mBAFrB,MAAM;;;;;;;;;;;;;ACJpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAqC;;;;AAK9B,MAAM,kBAAkB;IAC7B,YACU,KAAkB,EAClB,IAAwB,EACxB,KAAkB;QAFlB,UAAK,GAAL,KAAK,CAAa;QAClB,SAAI,GAAJ,IAAI,CAAoB;QACxB,UAAK,GAAL,KAAK,CAAa;IACzB,CAAC;IAEJ,eAAe,CAAI,OAAY;QAC7B,OAAO,IAAI,CAAC,KAAK,CAAC,cAAc,CAC9B,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,GAAG,uBAAuB,GAAG,OAAO,CAC5D,CAAC;IACJ,CAAC;IAED,mBAAmB,CAAI,MAAW,EAAE,WAAgB,EAAE,OAAY;QAChE,MAAM,IAAI,GAAG,EAAC,SAAS,EAAC,MAAM,EAAC,cAAc,EAAC,WAAW,EAAC,UAAU,EAAE,OAAO,EAAC,CAAC;QAC/E,OAAO,IAAI,CAAC,KAAK,CAAC,eAAe,CAC/B,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,GAAG,8BAA8B,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAC/E,CAAC;IACJ,CAAC;IAED,mBAAmB,CAAI,OAAe;QACpC,IAAI,IAAI,GAAG;YACT,QAAQ,EAAE,OAAO;SAClB,CAAC;QACF,OAAO,IAAI,CAAC,KAAK,CAAC,eAAe,CAC/B,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,GAAG,wCAAwC,EAClE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CACrB,CAAC;IACJ,CAAC;IAED,mBAAmB,CAAI,OAAe;QACpC,OAAO,IAAI,CAAC,KAAK;aACd,cAAc,CACb,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,GAAG,2BAA2B,GAAG,OAAO,CAChE;aACA,IAAI,CAAC,0DAAG,CAAC,CAAC,IAAS,EAAE,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;IAC1C,CAAC;IAED,kBAAkB;QAChB,OAAO,IAAI,CAAC,KAAK,CAAC,eAAe,CAC/B,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,GAAG,oBAAoB,EAC9C,IAAI,CAAC,SAAS,CAAC,EAAE,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC,KAAK,EAAE,EAAE,CAAC,CACzD,CAAC;IACJ,CAAC;IAED,YAAY,CAAC,OAAe,EAAE,WAAmB;QAC/C,IAAI,GAAG,GAAG;YACR,YAAY,EAAE,WAAW;YACzB,QAAQ,EAAE,OAAO;YACjB,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC,KAAK,EAAE;SACtC,CAAC;QACF,OAAO,IAAI,CAAC,KAAK,CAAC,eAAe,CAC/B,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,GAAG,2BAA2B,EACrD,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CACpB,CAAC;IACJ,CAAC;IAED,eAAe;IACf,gBAAgB;QACd,OAAO,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC;IACvC,CAAC;IAED,iBAAiB,CAAC,IAAY;QAC5B,OAAO,IAAI,CAAC,KAAK,CAAC,eAAe,CAC/B,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,GAAG,sBAAsB,EAChD,IAAI,CAAC,SAAS,CAAC,EAAE,YAAY,EAAE,IAAI,EAAE,CAAC,CACvC,CAAC;IACJ,CAAC;IAED,WAAW;QACT,OAAO,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC;IACvC,CAAC;IACD,iBAAiB,CAAC,OAAe,EAAE,WAAmB;QACpD,OAAO,IAAI,CAAC,KAAK,CAAC,eAAe,CAC/B,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,GAAG,0BAA0B,EACpD,IAAI,CAAC,SAAS,CAAC,EAAE,QAAQ,EAAE,OAAO,EAAE,YAAY,EAAE,WAAW,EAAE,CAAC,CACjE,CAAC;IACJ,CAAC;IACD,sBAAsB,CAAC,OAAe,EAAE,OAAe;QACrD,OAAO,IAAI,CAAC,KAAK,CAAC,eAAe,CAC/B,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,GAAG,oBAAoB,EAC9C,IAAI,CAAC,SAAS,CAAC,EAAE,QAAQ,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,GAAG,CAAC,CACzD,CAAC;IACJ,CAAC;;oFAnFU,kBAAkB;qGAAlB,kBAAkB,WAAlB,kBAAkB,mBAFjB,MAAM;;;;;;;;;;;;;ACNpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgH;AAChB;AACR;AACA;AACN;AACd;AAE7D,MAAM,UAAU,GAAW;IAChC;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,gFAAc;QACzB,QAAQ,EAAE;YACR;gBACE,IAAI,EAAE,EAAE;gBACR,SAAS,EAAE,8FAAkB;aAC9B;YACD;gBACE,IAAI,EAAE,QAAQ;gBACd,SAAS,EAAE,oGAAoB;aAChC;YACD;gBACE,IAAI,EAAE,MAAM;gBACZ,SAAS,EAAE,oGAAoB;aAChC;YACD;gBACE,IAAI,EAAE,MAAM;gBACZ,SAAS,EAAE,oGAAoB;aAChC;YACD;gBACE,IAAI,EAAE,KAAK;gBACX,SAAS,EAAE,oGAAoB;aAChC;YACD;gBACE,IAAI,EAAE,WAAW;gBACjB,SAAS,EAAE,4HAAyB;aACrC,EAAE;gBACD,IAAI,EAAE,yCAAyC;gBAC/C,SAAS,EAAE,4GAAsB;aAClC;SACF;KACF;CACF,CAAC;;;;;;;;;;;;;;;;;ACnCK,MAAM,mBAAmB;IAE9B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;sFALU,mBAAmB;mGAAnB,mBAAmB;QCPhC,0EAAwC;QAAC,kEAAM;QAAA,4DAAO;;;;;;;;;;;;;;ACCtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoE;AACK;;;;;;;;;;;;;;ICyB/D,iFAAoE;IAClE,uDACF;IAAA,4DAAa;;;IAFmC,+EAAmB;IACjE,0DACF;IADE,wFACF;;ADjBH,MAAM,eAAe;IAiD1B,YACkC,UAAe,EACvC,KAAkB,EAClB,aAA2B,EAC3B,QAAwB,EACxB,UAAwC;QAJhB,eAAU,GAAV,UAAU,CAAK;QACvC,UAAK,GAAL,KAAK,CAAa;QAClB,kBAAa,GAAb,aAAa,CAAc;QAC3B,aAAQ,GAAR,QAAQ,CAAgB;QACxB,eAAU,GAAV,UAAU,CAA8B;QArDlD,iBAAY,GAAG,IAAI,wDAAS,CAAC,EAAE,CAAC,CAAC;QACjC,YAAO,GAAG,EAAE,CAAC;QACb,mBAAc,GAAe;YAC3B;gBACE,IAAI,EAAE,QAAQ;gBACd,IAAI,EAAE,CAAC;aACR;YACD;gBACE,IAAI,EAAE,WAAW;gBACjB,IAAI,EAAE,CAAC;aACR;YACD;gBACE,IAAI,EAAE,WAAW;gBACjB,IAAI,EAAE,CAAC;aACR;YACD;gBACE,IAAI,EAAE,WAAW;gBACjB,IAAI,EAAE,CAAC;aACR;YACD;gBACE,IAAI,EAAE,WAAW;gBACjB,IAAI,EAAE,CAAC;aACR;YACD;gBACE,IAAI,EAAE,WAAW;gBACjB,IAAI,EAAE,CAAC;aACR;YACD;gBACE,IAAI,EAAE,WAAW;gBACjB,IAAI,EAAE,CAAC;aACR;YACD;gBACE,IAAI,EAAE,WAAW;gBACjB,IAAI,EAAE,CAAC;aACR;YACD;gBACE,IAAI,EAAE,WAAW;gBACjB,IAAI,EAAE,CAAC;aACR;YACD;gBACE,IAAI,EAAE,WAAW;gBACjB,IAAI,EAAE,EAAE;aACT;YACD;gBACE,IAAI,EAAE,YAAY;gBAClB,IAAI,EAAE,EAAE;aACT;SACF,CAAC;IAOC,CAAC;IAEJ,QAAQ;QACN,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC;QACvC,IAAI,CAAC,YAAY,CAAC,UAAU,CAC1B,OAAO,EACP,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC,CAC3C,CAAC;QACF,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,gBAAgB,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC,CAAC,CAAC;QACpE,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,mBAAmB,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC,CAAC,CAAC;IACzE,CAAC;IAED,QAAQ;QACN,IAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,cAAc,EAAC;YACxC,IAAG,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,iBAAiB,EAAC;gBAC5C,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,+BAA+B,CAAC;gBACtD,OAAO;aACR;SACF;QACD,IAAI,GAAG,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC;QAClC,GAAG,CAAC,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC;QAC5B,GAAG,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC,KAAK,EAAE,CAAC;QAC1C,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;YAC1D,IAAI,IAAI,CAAC,UAAU,EAAE;gBACnB,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBACpC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;aACzB;iBAAM;gBACL,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBAClC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;aACzB;QACH,CAAC,CAAC,CAAC;IACL,CAAC;;8EAtFU,eAAe,kEAkDhB,wEAAe;+FAlDd,eAAe;QCZ5B,yEAIC;QACC,kEAAa;QACb,yEAA4C;QAAA,mEAAQ;QAAA,4DAAM;QAC1D,kEAA+D;QACjE,4DAAM;QACN,yEAAoD;QAClD,0EAA6D;QAC3D,yEAAkD;QAChD,+EAAuB;QAAA,uEAAY;QAAA,4DAAY;QAC/C,qFAAiD;QAC/C,uEAA0C;QAC5C,4DAAiB;QACnB,4DAAM;QACN,0EAAkD;QAChD,gFAAuB;QAAA,sFAA0B;QAAA,4DAAY;QAC7D,qFAAiD;QAC/C,uEAAmD;QACrD,4DAAiB;QACnB,4DAAM;QACN,0EAAkD;QAChD,gFAAuB;QAAA,sFAA0B;QAAA,4DAAY;QAC7D,qFAAiD;QAC/C,kFAAgD;QAC9C,4HAEa;QACf,4DAAa;QACf,4DAAiB;QACnB,4DAAM;QACR,4DAAO;QACT,4DAAM;QACN,2EAA+C;QAC7C,8EAA8F;QAApD,wIAAS,cAAU,IAAC;QAAgC,+DAAG;QAAA,4DAAS;QAC1G,8EAAyD;QACvD,oEACF;QAAA,4DAAS;QACX,4DAAM;;QA9BE,0DAA0B;QAA1B,uFAA0B;QAiBK,2DAAiB;QAAjB,uFAAiB;QAS9C,0DAAiC;QAAjC,8FAAiC;;;;;;;;;;;;;;;;;;;;;ICpC3C,uEAA4B;IAAA,8DAAG;IAAA,4DAAO;;;IACtC,uEAA4B;IAAA,+DAAI;IAAA,4DAAO;;ACQhC,MAAM,iBAAiB;IAG5B;QAFU,WAAM,GAAG,CAAC,CAAC;IAEN,CAAC;IAEhB,QAAQ,KAAU,CAAC;IAEnB,MAAM,CAAC,MAA2B;QAChC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC;IACxC,CAAC;IAED,OAAO,CAAC,MAA2B;QACjC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC;QACtC,OAAO,KAAK,CAAC;IACf,CAAC;;kFAdU,iBAAiB;iGAAjB,iBAAiB;QDT9B,+GAAsC;QACtC,+GAAuC;;QAD/B,kFAAkB;QAClB,0DAAkB;QAAlB,kFAAkB;;;;;;;;;;;;;;AEQ1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKsC;AAEqC;AACL;AACyB;AAC6B;;;;;;;;;;;;;;;;;;;;ICQtH,0EAIC;IACC,6EAAkD;IAA1B,mUAAyB;IAC/C,2EAA6B;IAAC,+EAAmB;IAAA,4DAAO;IAC1D,4DAAS;IACX,4DAAM;;;;IAMJ,wEAKC;IAHC,yaAAgC;IAGjC,4DAAI;;;IAVP,0EAIC;IACC,yHAKK;IACL,yEAAgB;IAAA,uDAAe;IAAA,4DAAM;IACrC,0EAAgB;IAAA,+DAAI;IAAA,4DAAM;IAC5B,4DAAM;;;;IAPD,0DAAqB;IAArB,wFAAqB;IAKR,0DAAe;IAAf,8EAAe;;;;IAajC,0EAOC;IADC,2UAAkC;IAElC,+EAAqC;IAAA,6EAAkB;IAAA,4DAAW;IACpE,4DAAM;;;;IAQJ,wEAKC;IAHC,wbAA0C;IAG3C,4DAAI;;;;;IAZP,0EAMC;IACC,yHAKK;IACL,0EAME;IAHA,yXAAuC;IAHzC,4DAME;IACF,oEAAG;IAAA,uDAA+B;IAAA,4DAAI;IACxC,4DAAM;;;;IAlBJ,0IAAc;IAKX,0DAAqB;IAArB,wFAAqB;IAStB,0DAA6C;IAA7C,uPAA6C;IAG5C,0DAA+B;IAA/B,4HAA+B;;;IA6BlC,0EAIC;IACC,yEAAgB;IAAA,uDAAe;IAAA,4DAAM;IACrC,0EAAgB;IAAA,+DAAI;IAAA,4DAAM;IAC5B,4DAAM;;;IAFY,0DAAe;IAAf,8EAAe;;;IA5BrC,yEAKC;IACC,0EAAqC;IACnC,qEAKE;IACF,wEAAc;IAAA,uDAAuB;IAAA,4DAAI;IAC3C,4DAAM;IACN,6EAA2C;IAC3C,0EAMC;IACC,6HAOM;IACR,4DAAM;IACR,4DAAM;;;IAxBA,0DAAmC;IAAnC,4NAAmC;IAKvB,0DAAuB;IAAvB,sFAAuB;IAYlB,0DAAe;IAAf,4GAAe;;;;;IAmBlC,0EAMC;IADC,yWAA4B;IAE5B,yEAAgB;IAAA,uDAAe;IAAA,4DAAM;IACrC,0EAAgB;IAAA,+DAAI;IAAA,4DAAM;IAC5B,4DAAM;;;;IALJ,0KAA6C;IAG7B,0DAAe;IAAf,8EAAe;;;;IAcjC,6EAMC;IADC,yUAA0B;IAE1B,6EACF;IAAA,4DAAS;;;;IAgCf,0EAAqD;IACnD,yEAAgB;IAAA,8EAAmB;IAAA,4DAAM;IACzC,qFAAoB;IAClB,0EAAqE;IACnE,4EAAW;IAAC,yEAAa;IAAA,4DAAY;IACrC,qFAAqC;IACnC,4EAAsD;IAAnC,qWAAuB;IAA1C,4DAAsD;IACxD,4DAAiB;IACnB,4DAAM;IACR,4DAAqB;IACrB,qFAAoB;IAClB,8EAAgE;IAAxC,6UAAwB;IAC9C,iEACF;IAAA,4DAAS;IACX,4DAAqB;IACvB,4DAAM;;;IATqB,0DAAuB;IAAvB,qFAAuB;;ADpL7C,MAAM,yBAAyB;IAkKpC,YACU,SAAkC,EAClC,MAAsB,EACtB,SAAmB,EACnB,QAAwB,EACxB,UAAqB,EACrB,OAAsB,EACtB,OAAe,EACf,aAA2B;QAP3B,cAAS,GAAT,SAAS,CAAyB;QAClC,WAAM,GAAN,MAAM,CAAgB;QACtB,cAAS,GAAT,SAAS,CAAU;QACnB,aAAQ,GAAR,QAAQ,CAAgB;QACxB,eAAU,GAAV,UAAU,CAAW;QACrB,YAAO,GAAP,OAAO,CAAe;QACtB,YAAO,GAAP,OAAO,CAAQ;QACf,kBAAa,GAAb,aAAa,CAAc;QAzKhB,WAAM,GAAqB,EAAsB,CAAC;QACvE,SAAI,GAAsB,OAAO,CAAC;QAClC,YAAO,GAAG,EAAE,CAAC;QACb,SAAI,GAAG,EAAE,CAAC;QACV,WAAM,GAAG,EAAE,CAAC;QACZ,aAAQ,GAAG,EAAE,CAAC;QACd,cAAS,GAAG,EAAE,CAAC;QACf,aAAQ,GAAQ,EAAE,CAAC;QACnB,cAAS,GAAQ,EAAE,CAAC;QACpB,kBAAa,GAAe,EAAE,CAAC;QAC/B,0BAAqB,GAAe,EAAE,CAAC;QACvC,eAAU,GAAe,EAAE,CAAC;QAC5B,gBAAW,GAAG;YACZ,EAAE,IAAI,EAAE,GAAG,EAAE,cAAc,EAAE,EAAE,EAAE;YACjC,EAAE,IAAI,EAAE,GAAG,EAAE,cAAc,EAAE,EAAE,EAAE;SAClC,CAAC;QACF,YAAO,GAAe,EAAE,CAAC;QACzB,cAAS,GAAgB,EAAiB,CAAC;QAC3C,cAAS,GAAG,EAAE,CAAC;QACf,iBAAY,GAAG;YACb;gBACE,KAAK,EAAE,MAAM;gBACb,KAAK,EAAE,GAAG;gBACV,UAAU,EAAE,EAAE;gBACd,aAAa,EAAE,EAAE;gBACjB,OAAO,EAAE,CAAC,MAAW,EAAE,EAAE,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,KAAK,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;gBACnE,SAAS,EAAE,CAAC,MAAW,EAAE,EAAE;oBACzB,IAAI,MAAM,CAAC,IAAI,CAAC,QAAQ,KAAK,KAAK,EAAE;wBAClC,OAAO,EAAE,YAAY,EAAE,KAAK,EAAE,CAAC;qBAChC;oBACD,OAAO,EAAE,CAAC;gBACZ,CAAC;aACF;YACD,EAAE,KAAK,EAAE,gBAAgB,EAAE,UAAU,EAAE,MAAM,EAAE;YAC/C,EAAE,KAAK,EAAE,KAAK,EAAE,UAAU,EAAE,KAAK,EAAE;YACnC;gBACE,UAAU,EAAE,OAAO;gBACnB,YAAY,EAAE,wBAAwB;gBACtC,KAAK,EAAE,sBAAsB;gBAC7B,SAAS,EAAE;oBACT,OAAO,EAAE,QAAQ;iBAClB;aAKF;YACD;gBACE,UAAU,EAAE,cAAc;gBAC1B,KAAK,EAAE,MAAM;gBACb,KAAK,EAAE,OAAO;aACf;YACD;gBACE,UAAU,EAAE,MAAM;gBAClB,KAAK,EAAE,aAAa;gBACpB,YAAY,EAAE,sBAAsB;gBACpC,WAAW,EAAE,CAAC,MAA2B,EAAE,EAAE;oBAC3C,OAAO,MAAM,CAAC,IAAI,CAAC,WAAW,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC;gBACxD,CAAC;aACF;YACD;gBACE,UAAU,EAAE,UAAU;gBACtB,KAAK,EAAE,QAAQ;gBACf,YAAY,EAAE,qBAAqB;aACpC;YACD;gBACE,UAAU,EAAE,eAAe;gBAC3B,KAAK,EAAE,WAAW;gBAClB,WAAW,EAAE,CAAC,MAA2B,EAAE,EAAE;oBAC3C,OAAO,MAAM,CAAC,IAAI,CAAC,WAAW,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC;gBACtE,CAAC;aACF;YACD;gBACE,UAAU,EAAE,yBAAyB;gBACrC,KAAK,EAAE,OAAO;gBACd,YAAY,EAAE,CAAC,MAA2B,EAAE,EAAE;oBAC5C,OAAO,MAAM,CAAC,IAAI,CAAC,WAAW,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC;gBAC7D,CAAC;aACF;YACD,qDAAqD;YAErD;gBACE,UAAU,EAAE,QAAQ;gBACpB,KAAK,EAAE,QAAQ;aAChB;YACD;gBACE,UAAU,EAAE,WAAW;gBACvB,KAAK,EAAE,UAAU;gBACjB,YAAY,EAAE,4BAA4B;aAC3C;SACF,CAAC;QACF,wBAAmB,GAAG;YACpB;gBACE,QAAQ,EAAE,KAAK;gBACf,IAAI,EAAE,eAAe;gBACrB,QAAQ,EAAE,GAAG;gBACb,UAAU,EAAE,IAAI;aACjB;YACD;gBACE,QAAQ,EAAE,KAAK;gBACf,IAAI,EAAE,kBAAkB;gBACxB,QAAQ,EAAE,GAAG;gBACb,UAAU,EAAE,IAAI;aACjB;YACD;gBACE,QAAQ,EAAE,KAAK;gBACf,IAAI,EAAE,WAAW;gBACjB,QAAQ,EAAE,GAAG;gBACb,UAAU,EAAE,IAAI;gBAChB,UAAU,EAAG,GAAG;aACjB;YACD;gBACE,QAAQ,EAAE,KAAK;gBACf,IAAI,EAAE,WAAW;gBACjB,QAAQ,EAAE,GAAG;gBACb,UAAU,EAAE,IAAI;aACjB;SACF,CAAC;QACF,wBAAmB,GAAG;YACpB,sBAAsB,EAAE,mFAAsB;YAC9C,0BAA0B,EAAE,+HAA0B;YACtD,oBAAoB,EAAE,kGAAiB;YACvC,mBAAmB,EAAE,6EAAgB;YACrC,mBAAmB,EAAE,sFAAmB;SACzC,CAAC;QACF,eAAU,GAAG;YACX,EAAE,KAAK,EAAE,WAAW,EAAE,UAAU,EAAE,8BAA8B,EAAE;YAClE,EAAE,KAAK,EAAE,cAAc,EAAE,UAAU,EAAE,kBAAkB,EAAE;YACzD,EAAE,KAAK,EAAE,YAAY,EAAE,UAAU,EAAE,WAAW,EAAE;YAChD,EAAE,KAAK,EAAE,WAAW,EAAE,UAAU,EAAE,kBAAkB,EAAE;YACtD;gBACE,KAAK,EAAE,YAAY;gBACnB,UAAU,EAAE,8CAA8C;aAC3D;SACF,CAAC;QACF,gBAAW,GAAgB;YACzB,WAAW,EAAE,CAAC,GAAmB,EAAE,EAAE;gBACnC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;YACxB,CAAC;YACD,OAAO,EAAC,IAAI;YACZ,SAAS,EAAE,EAAE;SACd,CAAC;QACF,kBAAa,GAAG;YACd,QAAQ,EAAE,IAAI;YACd,SAAS,EAAE,WAAW;YACtB,SAAS,EAAE;gBACT,aAAa,EAAE,QAAQ;gBACvB,aAAa,EAAE,QAAQ;gBACvB,iBAAiB,EAAE,QAAQ;gBAC3B,OAAO,EAAE,MAAM;gBACf,OAAO,EAAE,UAAU;aACpB;SACF,CAAC;QACF,kBAAa,GAAgB;YAC3B,SAAS,EAAE,EAAE;YACb,OAAO,EAAC,IAAI;YACZ,WAAW,EAAE,CAAC,GAAmB,EAAE,EAAE;gBACnC,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC;gBACrB,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;YACxB,CAAC;SACF,CAAC;IAUC,CAAC;IAEJ,QAAQ;QACN,IAAI,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;YAC1C,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC;SACrB;aAAM;YACL,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC;SACrB;QACD,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,MAAc,EAAE,EAAE;YAC9C,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,EAAE,CAAC;YACzB,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;YACxB,IAAI,CAAC,mBAAmB,EAAE,CAAC;YAC3B,IAAI,CAAC,aAAa,EAAE,CAAC;YACrB,IAAI,CAAC,iBAAiB,EAAE,CAAC;YACzB,IAAI,CAAC,qBAAqB,EAAE,CAAC;QAC/B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,uBAAuB,CAAC,MAA2B;QACjD,IAAI,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;QACvB,IAAI,GAAG,GAAG;YACR;gBACE,KAAK,EAAE;oBACL;wBACE,MAAM,EAAE,IAAI,CAAC,MAAM;wBACnB,GAAG,EAAE,IAAI,CAAC,MAAM;wBAChB,KAAK,EAAE,IAAI,CAAC,KAAK;wBACjB,SAAS,EAAE,IAAI,CAAC,SAAS;wBACzB,UAAU,EAAE,IAAI,CAAC,aAAa;wBAC9B,WAAW,EAAE,IAAI,CAAC,QAAQ;wBAC1B,QAAQ,EAAE,IAAI,CAAC,QAAQ;wBACvB,YAAY,EAAE,IAAI,CAAC,YAAY;wBAC/B,IAAI,EAAE,IAAI,CAAC,EAAE;qBACd;iBACF;aACF;YACD;gBACE,IAAI,EAAE;oBACJ;wBACE,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI;wBACxB,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI;wBACxB,UAAU,EAAE,IAAI,CAAC,QAAQ,CAAC,UAAU;wBACpC,YAAY,EAAE,IAAI,CAAC,QAAQ,CAAC,YAAY;qBACzC;iBACF;aACF;YACD,EAAE,QAAQ,EAAE,IAAI,CAAC,OAAO,EAAE;SAC3B,CAAC;QAEF,IAAI,CAAC,aAAa,CAAC,0BAA0B,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;YACpE,IAAI,IAAI,CAAC,UAAU,IAAI,GAAG,EAAE;gBAC1B,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;gBACnC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;aAClC;iBAAM;gBACL,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;aAClC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,OAAO;QACL,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAC3B,IAAI,CAAC,aAAa,EAAE,CAAC;QACrB,IAAI,CAAC,iBAAiB,EAAE,CAAC;QACzB,IAAI,CAAC,qBAAqB,EAAE,CAAC;IAC/B,CAAC;IAED,IAAI;QACF,IAAI,KAAK,GAAG,IAAI,CAAC,IAAI,IAAI,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC;QACrD,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;IAC/C,CAAC;IACD,kBAAkB,CAAC,EAAO,IAAG,CAAC;IAE9B,sBAAsB;QACpB,IAAI,CAAC,UAAU;aACZ,IAAI,CAAC,iFAAkB,EAAE;YACxB,KAAK,EAAE,KAAK;YACZ,IAAI,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE;SACjD,CAAC;aACD,WAAW,EAAE;aACb,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;YAClB,IAAI,IAAI,EAAE;gBACR,IAAI,CAAC,OAAO,EAAE,CAAC;aAChB;QACH,CAAC,CAAC,CAAC;IACP,CAAC;IACD,WAAW,CAAC,GAAmB;QAC7B,GAAG,CAAC,GAAG,CAAC,gBAAgB,EAAE,CAAC;IAC7B,CAAC;IAED,aAAa;QACX,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;YACvE,IAAI,IAAI,CAAC,UAAU,IAAI,GAAG,EAAE;gBAC1B,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,UAAU,CAAC;aACtC;iBAAM;gBACL,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;aACzB;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,iBAAiB;QACf,IAAI,CAAC,SAAS;aACX,iBAAiB,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,IAAI,CAAC;aAC1C,SAAS,CAAC,CAAC,IAAS,EAAE,EAAE;YACvB,IAAI,IAAI,CAAC,UAAU,EAAE;gBACnB,IAAI,CAAC,UAAU,GAAG,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,MAAM,CAAC;gBAC/B,IAAI,CAAC,YAAY,CAAC,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,MAAM,CAAC,CAAC,EAAE,CAAC;aACpC;iBAAM;gBACL,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;aACtB;QACH,CAAC,CAAC,CAAC;IACP,CAAC;IACD,YAAY,CAAC,IAAS;QACpB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,MAAM,GAAG,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,IAAI,CAAC;QACzB,IAAI,CAAC,QAAQ,GAAG,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,IAAI,CAAC;QAC3B,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;YAChB,OAAO;SACR;QACD,IAAI,CAAC,SAAS;aACX,YAAY,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC;aAClD,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;;YAClB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAS,EAAE,KAAa,EAAE,EAAE;gBAC5D,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;gBAC3B,IAAI,CAAC,EAAE,GAAE,IAAI,CAAC,IAAI,CAAC;gBACnB,IAAI,CAAC,IAAI,GAAG,KAAK,GAAG,CAAC,CAAC;gBACtB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;gBACpC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,IAAI,IAAI,OAAO,CAAC;gBACzC,OAAO,IAAI,CAAC;YACd,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;YACtD,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YACvC,gBAAI,CAAC,SAAS,0CAAE,GAAG,0CAAE,UAAU,GAAG;QACpC,CAAC,CAAC,CAAC;IACP,CAAC;IAED,iBAAiB,CAAC,EAAO;QACvB,IAAI,CAAC,OAAO,GAAG,CAAC,EAAE,CAAC,CAAC;IACtB,CAAC;IACD,gBAAgB,CAAC,IAAS,EAAE,GAAW;QACrC,IAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC,QAAQ,GAAG,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,YAAY,CAAC;QAC1D,IAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,SAAS,GAAG,GAAG,GAAG,IAAI,CAAC;QAC1D,IAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC,QAAQ,GAAG,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,UAAU,CAAC;QACxD,IAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC,UAAU,GAAG,GAAG,CAAC;QAC7C,IAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC,QAAQ,GAAG,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,UAAU,CAAC;IAC1D,CAAC;IAED,mBAAmB;QACjB,IAAI,CAAC,SAAS;aACX,mBAAmB,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,IAAI,CAAC;aAC5C,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;YAClB,IAAI,IAAI,CAAC,UAAU,IAAI,GAAG,EAAE;gBAC1B,IAAI,CAAC,SAAS,GAAG,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,MAAM,CAAC,CAAC,CAAC,CAAC;aAClC;iBAAM;gBACL,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;aACrB;QACH,CAAC,CAAC,CAAC;IACP,CAAC;IACD,cAAc;QACZ,IAAI,CAAC,SAAS;aACX,cAAc,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,QAAQ,CAAC;aACxD,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;YAClB,IAAI,IAAI,CAAC,UAAU,IAAI,GAAG,EAAE;gBAC1B,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;gBACnC,IAAI,CAAC,OAAO,EAAE,CAAC;aAChB;iBAAM;gBACL,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;aACpC;QACH,CAAC,CAAC,CAAC;IACP,CAAC;IAED,gBAAgB,CAAC,IAAS;QACxB,IAAI,CAAC,OAAO;aACT,sBAAsB,CAAC;YACtB,KAAK,EAAE,6BAA6B;YACpC,OAAO,EAAE,kCAAkC;YAC3C,KAAK,EAAE,KAAK;SACb,CAAC;aACD,WAAW,EAAE;aACb,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;YAClB,IAAI,IAAI,EAAE;gBACR,IAAI,CAAC,SAAS;qBACX,gBAAgB,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,IAAI,EAAE,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,IAAI,CAAC;qBACtD,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;oBAClB,IAAI,IAAI,CAAC,UAAU,IAAI,GAAG,EAAE;wBAC1B,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;wBACpC,IAAI,CAAC,OAAO,EAAE,CAAC;qBAChB;yBAAM;wBACL,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;qBACrC;gBACH,CAAC,CAAC,CAAC;aACN;QACH,CAAC,CAAC,CAAC;IACP,CAAC;IAED,qBAAqB;QACnB,IAAI,CAAC,SAAS,CAAC,qBAAqB,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,SAAS,CACrE,CAAC,IAAI,EAAE,EAAE;YACP,IAAI,IAAI,CAAC,UAAU,IAAI,GAAG,EAAE;gBAC1B,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,MAAM,CAAC;aAC1C;iBAAM;gBACL,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,OAAO,CAAC,CAAC;aACpC;QACH,CAAC,EACD,CAAC,KAAK,EAAE,EAAE;YACR,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,OAAO,CAAC,CAAC;QACtC,CAAC,CACF,CAAC;IACJ,CAAC;IAED,YAAY;QACV,IAAI,CAAC,SAAS;aACX,YAAY,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC;aACrD,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;YAClB,IAAI,IAAI,CAAC,UAAU,IAAI,GAAG,EAAE;gBAC1B,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBACpC,IAAI,CAAC,OAAO,EAAE,CAAC;aAChB;iBAAM;gBACL,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;aACrC;QACH,CAAC,CAAC,CAAC;IACP,CAAC;IAED,qBAAqB,CAAC,SAAc;QAClC,IAAI,CAAC,OAAO;aACT,sBAAsB,CAAC;YACtB,KAAK,EAAE,kCAAkC;YACzC,OAAO,EAAE,kCAAkC;YAC3C,KAAK,EAAE,KAAK;SACb,CAAC;aACD,WAAW,EAAE;aACb,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;YAClB,IAAI,IAAI,EAAE;gBACR,IAAI,CAAC,SAAS;qBACX,qBAAqB,CACpB,IAAI,CAAC,OAAO,EACZ,IAAI,CAAC,IAAI,EACT,SAAS,CAAC,YAAY,CACvB;qBACA,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;oBAClB,IAAI,IAAI,CAAC,UAAU,IAAI,GAAG,EAAE;wBAC1B,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;wBACnC,IAAI,CAAC,OAAO,EAAE,CAAC;qBAChB;yBAAM;wBACL,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;qBACpC;gBACH,CAAC,CAAC,CAAC;aACN;QACH,CAAC,CAAC,CAAC;IACP,CAAC;IAED,aAAa;QACX,IAAI,CAAC,UAAU;aACZ,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC;aACjB,WAAW,EAAE;aACb,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;YAClB,IAAI,IAAI,EAAE;gBACR,IAAI,CAAC,OAAO,EAAE,CAAC;aAChB;QACH,CAAC,CAAC,CAAC;IACP,CAAC;;kGA9aU,yBAAyB;yGAAzB,yBAAyB;;;;;;QC3BtC,yEAAuD;QACrD,yEAAyD;QACvD,yEAAoE;QAClE,8EACG;QAAA,0EAA8C;QAAxC,+IAAS,UAAM,IAAC;QACrB,uEACF;QAAA,4DAAO;QAAA,4DACR;QACD,uEACG;QAAA,uDACyB;QAAA,4DAC3B;QACH,4DAAM;QACN,yEAA2B;QAC3B,yEAAuC;QACrC,uEAAK;QAAA,2EAAiB;QAAA,uEAAW;QAAA,4DAAO;QAAC,wDAA0B;QAAA,4DAAM;QACzE,6EAAoD;QAClD,wDACF;QAAA,4DAAS;QACT,6EAAoD;QAClD,wDACF;QAAA,4DAAS;QACT,6EAAoD;QAClD,wDACF;QAAA,4DAAS;QACX,4DAAM;QACN,0EAA6D;QAC3D,uHAQM;QACN,wHAaM;QACR,4DAAM;QACR,4DAAM;QACN,2EAA6D;QAC3D,0EAAgB;QAAA,iFAAqB;QAAA,4DAAM;QAC3C,2EAKC;QACC,wHASM;QACN,wHAqBM;QACR,4DAAM;QACR,4DAAM;QACN,2EAA6D;QAC3D,0EAAgB;QAAA,6EAAiB;QAAA,4DAAM;QACvC,wHAgCM;QACR,4DAAM;QACN,2EAA6D;QAC3D,0EAAgB;QAAA,wEAAY;QAAA,4DAAM;QAClC,2EAAgE;QAC9D,2EAMC;QACC,wHASM;QACR,4DAAM;QACN,2EAKC;QACC,iFAAsB;QAAA,sEAAU;QAAA,4DAAY;QAC5C,sFAAqC;QACnC,6EAAyC;QAAlC,gMAAsB;QAA7B,4DAAyC;QAC3C,4DAAiB;QACjB,8HAQS;QACX,4DAAM;QACN,kFAUkB;QACpB,4DAAM;QACR,4DAAM;QACN,2EAA6D;QAC3D,0EAAgB;QAAA,oFAAwB;QAAA,4DAAM;QAC9C,2EAA2B;QACzB,kFAQkB;QACpB,4DAAM;QACR,4DAAM;QACR,4DAAM;QAEN,qNAiBc;;QAhNL,0DACyB;QADzB,uLACyB;QAKa,0DAA0B;QAA1B,iIAA0B;QAEjE,0DACF;QADE,oJACF;QAEE,0DACF;QADE,yIACF;QAEE,0DACF;QADE,4IACF;QAIG,0DAAqB;QAArB,qFAAqB;QAUL,0DAAa;QAAb,mFAAa;QAwB7B,0DAAqB;QAArB,qFAAqB;QAYA,0DAAgB;QAAhB,sFAAgB;QAyBzB,0DAAwB;QAAxB,8FAAwB;QA2ClB,0DAAa;QAAb,mFAAa;QAiBvB,0DAAsB;QAAtB,iFAAsB;QAG5B,0DAAqB;QAArB,qFAAqB;QAUxB,0DAA6B;QAA7B,0FAA6B;QAgB7B,0DAA2B;QAA3B,wFAA2B;;;;;;;;;;;;;;AC5LnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,8EAA8E;AACvG;AACA;;AAEO;AACP;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;;AAEO;AACP;AACA,gDAAgD,OAAO;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA,4DAA4D,cAAc;AAC1E;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;;AAEO;AACP,mCAAmC,oCAAoC;AACvE;;AAEO;AACP;AACA;;AAEO;AACP,2BAA2B,+DAA+D,gBAAgB,EAAE,EAAE;AAC9G;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,qFAAqF;AACpH;AACA,KAAK;AACL;;AAEO;AACP,aAAa,6BAA6B,0BAA0B,aAAa,EAAE,qBAAqB;AACxG,gBAAgB,qDAAqD,oEAAoE,aAAa,EAAE;AACxJ,sBAAsB,sBAAsB,qBAAqB,GAAG;AACpE;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC,kCAAkC,SAAS;AAC3C,kCAAkC,WAAW,UAAU;AACvD,yCAAyC,cAAc;AACvD;AACA,6GAA6G,OAAO,UAAU;AAC9H,gFAAgF,iBAAiB,OAAO;AACxG,wDAAwD,gBAAgB,QAAQ,OAAO;AACvF,8CAA8C,gBAAgB,gBAAgB,OAAO;AACrF;AACA,iCAAiC;AACjC;AACA;AACA,SAAS,YAAY,aAAa,OAAO,EAAE,UAAU,WAAW;AAChE,mCAAmC,SAAS;AAC5C;AACA;;AAEO;AACP;AACA,kCAAkC,oCAAoC,aAAa,EAAE,EAAE;AACvF,CAAC;AACD;AACA;AACA,CAAC;;AAEM;AACP;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,MAAM,gBAAgB;AACzC;AACA;AACA;AACA;AACA,iBAAiB,sBAAsB;AACvC;AACA;AACA;;AAEA;AACO;AACP,4BAA4B,sBAAsB;AAClD;AACA;AACA;;AAEA;AACO;AACP,iDAAiD,QAAQ;AACzD,wCAAwC,QAAQ;AAChD,wDAAwD,QAAQ;AAChE;AACA;AACA;;AAEO;AACP,4EAA4E,OAAO;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;AACA,iBAAiB,sFAAsF,aAAa,EAAE;AACtH,sBAAsB,gCAAgC,qCAAqC,0CAA0C,EAAE,EAAE,GAAG;AAC5I,2BAA2B,MAAM,eAAe,EAAE,YAAY,oBAAoB,EAAE;AACpF,sBAAsB,oGAAoG;AAC1H,6BAA6B,uBAAuB;AACpD,4BAA4B,wBAAwB;AACpD,2BAA2B,yDAAyD;AACpF;;AAEO;AACP;AACA,iBAAiB,4CAA4C,SAAS,EAAE,qDAAqD,aAAa,EAAE;AAC5I,yBAAyB,6BAA6B,oBAAoB,gDAAgD,gBAAgB,EAAE,KAAK;AACjJ;;AAEO;AACP;AACA;AACA,2GAA2G,sFAAsF,aAAa,EAAE;AAChN,sBAAsB,8BAA8B,gDAAgD,uDAAuD,EAAE,EAAE,GAAG;AAClK,4CAA4C,sCAAsC,UAAU,oBAAoB,EAAE,EAAE,UAAU;AAC9H;;AAEO;AACP,gCAAgC,uCAAuC,aAAa,EAAE,EAAE,OAAO,kBAAkB;AACjH;AACA;;AAEA;AACA,yCAAyC,6BAA6B;AACtE,CAAC;AACD;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP,4CAA4C;AAC5C;;AAEO;AACP;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;ACvOO,MAAM,YAAY;IACvB,YAAoB,IAAiB,EAAU,GAAuB;QAAlD,SAAI,GAAJ,IAAI,CAAa;QAAU,QAAG,GAAH,GAAG,CAAoB;IAAG,CAAC;IAC1E,cAAc;QACZ,OAAO,IAAI,CAAC,IAAI,CAAC,cAAc,CAC7B,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,GAAG,mBAAmB,CAC7C,CAAC;IACJ,CAAC;IAED,cAAc,CAAC,SAAc;QAC3B,OAAO,IAAI,CAAC,IAAI,CAAC,cAAc,CAC7B,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,GAAG,+BAA+B,GAAG,SAAS,CACrE,CAAC;IACJ,CAAC;IAED,YAAY,CAAC,OAAe;QAC1B,OAAO,IAAI,CAAC,IAAI,CAAC,eAAe,CAC9B,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,GAAG,qBAAqB,EAC9C,IAAI,CAAC,SAAS,CAAC,EAAE,QAAQ,EAAE,OAAO,EAAE,CAAC,CACtC,CAAC;IACJ,CAAC;IAED,eAAe,CAAC,GAAQ;QACtB,OAAO,IAAI,CAAC,IAAI,CAAC,eAAe,CAC9B,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,GAAG,cAAc,EACvC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CACpB,CAAC;IACJ,CAAC;IAED,wBAAwB,CACtB,OAAe,EACf,WAAmB;QAEnB,OAAO,IAAI,CAAC,IAAI,CAAC,eAAe,CAC9B,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,GAAG,iBAAiB,EAC1C,IAAI,CAAC,SAAS,CAAC,EAAE,QAAQ,EAAE,OAAO,EAAE,YAAY,EAAE,WAAW,EAAE,CAAC,CACjE,CAAC;IACJ,CAAC;IACD,QAAQ,CAAC,GAAQ;QACf,OAAO,IAAI,CAAC,IAAI,CAAC,eAAe,CAC9B,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,GAAG,8BAA8B,EACvD,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CACpB,CAAC;IACJ,CAAC;IAED,gBAAgB,CAAC,GAAQ;QACvB,OAAO,IAAI,CAAC,IAAI,CAAC,eAAe,CAC9B,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,GAAG,4BAA4B,EACrD,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CACpB,CAAC;IACJ,CAAC;IACD,UAAU,CAAC,GAAQ;QACjB,OAAO,IAAI,CAAC,IAAI,CAAC,eAAe,CAC9B,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,GAAG,qBAAqB,EAC9C,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CACpB,CAAC;IACJ,CAAC;IACD,eAAe,CAAC,GAAQ;QACtB,OAAO,IAAI,CAAC,IAAI,CAAC,eAAe,CAC9B,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,GAAG,+CAA+C,EACxE,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CACpB,CAAC;IACJ,CAAC;IACD,MAAM,CAAC,GAAQ;QACb,OAAO,IAAI,CAAC,IAAI,CAAC,eAAe,CAC9B,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,GAAG,qBAAqB,EAC9C,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CACpB,CAAC;IACJ,CAAC;IACD,OAAO,CAAC,GAAQ;QACd,OAAO,IAAI,CAAC,IAAI,CAAC,eAAe,CAC9B,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,GAAG,mBAAmB,EAC5C,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CACpB,CAAC;IACJ,CAAC;IACD,eAAe,CAAC,GAAQ;QACtB,OAAO,IAAI,CAAC,IAAI,CAAC,eAAe,CAC9B,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,GAAG,4BAA4B,EACrD,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CACpB,CAAC;IACJ,CAAC;IACD,OAAO,CAAC,GAAQ;QACd,OAAO,IAAI,CAAC,IAAI,CAAC,eAAe,CAC9B,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,GAAG,yBAAyB,EAClD,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CACpB,CAAC;IACJ,CAAC;IACD,QAAQ,CAAC,GAAQ;QACf,OAAO,IAAI,CAAC,IAAI,CAAC,eAAe,CAC9B,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,GAAG,yBAAyB,EAClD,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CACpB,CAAC;IACJ,CAAC;IACD,UAAU,CAAC,GAAQ;QACjB,OAAO,IAAI,CAAC,IAAI,CAAC,eAAe,CAC9B,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,GAAG,iCAAiC,EAC1D,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CACpB,CAAC;IACJ,CAAC;IAED,WAAW,CAAC,GAAQ;QAClB,OAAO,IAAI,CAAC,IAAI,CAAC,eAAe,CAC9B,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,GAAG,2BAA2B,EACpD,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CACpB,CAAC;IACJ,CAAC;IAED,iBAAiB,CAAC,GAAQ;QACxB,OAAO,IAAI,CAAC,IAAI,CAAC,eAAe,CAC9B,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,GAAG,2BAA2B,EACpD,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CACpB,CAAC;IACJ,CAAC;IAED,gBAAgB,CACd,OAAe,EACf,QAAgB,EAChB,MAAc;QAEd,OAAO,IAAI,CAAC,IAAI,CAAC,eAAe,CAC9B,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,GAAG,YAAY,EACrC,IAAI,CAAC,SAAS,CAAC,EAAE,QAAQ,EAAE,OAAO,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC,CACpE,CAAC;IACJ,CAAC;IAED,0BAA0B,CAAC,GAAQ;QACjC,OAAO,IAAI,CAAC,IAAI,CAAC,eAAe,CAC9B,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,GAAG,gCAAgC,EACzD,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CACpB,CAAC;IACJ,CAAC;;wEAjIU,YAAY;+FAAZ,YAAY,WAAZ,YAAY,mBAFX,MAAM;;;;;;;;;;;;;ACHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIkC;;;;;;;;;;;;ICelB,4EAAkD;IAChD,uDACF;IAAA,4DAAS;;;IAFyB,2EAAe;IAC/C,0DACF;IADE,2FACF;;;;IAMZ,0EAAgE;IAE5D,4EAAuD;IACrD,4EAAqG;IAAxD,iTAAmB,CAAC,KAAE;IAAnE,4DAAqG;IAAA,qEAEvG;IAAA,4DAAQ;IACR,4EAAuD;IACrD,4EAAoF;IAAvC,iTAAmB,CAAC,KAAE;IAAnE,4DAAoF;IAAA,yEACtF;IAAA,4DAAQ;IACV,4DAAM;;IANkE,0DAAgB;IAAhB,yEAAgB;;;;;;IAY1F,0EACkE;IAAlE,oWAAmC;IACjC,sEAAK;IAAA,uDAAa;IAAA,4DAAM;IACxB,sEAAK;IAAA,+DAAI;IAAA,4DAAM;IACjB,sEAC+E;IAAA,4DAAM;;;;IALnD,+KAAyD;IAEpF,0DAAa;IAAb,6EAAa;IAEK,0DAAuD;IAAvD,2KAAuD;;ADhC7E,MAAM,kBAAkB;IAS7B,YACkC,UAAe,EACxC,UAA4C,EAC3C,aAA2B,EAC3B,QAAwB,EACxB,mBAAuC;;QAJf,eAAU,GAAV,UAAU,CAAK;QACxC,eAAU,GAAV,UAAU,CAAkC;QAC3C,kBAAa,GAAb,aAAa,CAAc;QAC3B,aAAQ,GAAR,QAAQ,CAAgB;QACxB,wBAAmB,GAAnB,mBAAmB,CAAoB;QAbxC,SAAI,GAAG,EAAE,CAAC;QACV,YAAO,GAAG,EAAE,CAAC;QACb,YAAO,GAAG,EAAE,CAAC;QACtB,WAAM,GAAQ,EAAE,CAAC;QACjB,iBAAY,GAAQ,EAAE,CAAC;QACvB,iBAAY,GAAG,EAAE,CAAC;QAClB,kBAAa,GAAQ,IAAI,CAAC;QAC1B,YAAO,GAAQ,EAAE,CAAC;QAQhB,IAAI,CAAC,IAAI,SAAG,UAAU,aAAV,UAAU,uBAAV,UAAU,CAAE,IAAI,mCAAI,EAAE,CAAC;QACnC,IAAI,CAAC,OAAO,SAAG,UAAU,aAAV,UAAU,uBAAV,UAAU,CAAE,OAAO,mCAAI,EAAE,CAAC;QACzC,IAAI,CAAC,OAAO,SAAG,UAAU,aAAV,UAAU,uBAAV,UAAU,CAAE,OAAO,mCAAI,EAAE,CAAC;IAC3C,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,gBAAgB,EAAE,CAAC;IAC1B,CAAC;IACD,gBAAgB;QACd,IAAI,CAAC,mBAAmB,CAAC,kBAAkB,EAAE,CAAC,SAAS,CACrD,CAAC,IAAS,EAAE,EAAE;YACZ,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QAC5B,CAAC,EACD,CAAC,KAAK,EAAE,EAAE;YACR,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;YACjB,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,uBAAuB,CAAC,CAAC;QAC/C,CAAC,CACF,CAAC;IACJ,CAAC;IACD,mBAAmB,CAAC,IAAS;QAC3B,IAAI,IAAI,CAAC,QAAQ,EAAE;YACjB,IAAI,OAAO,GAAG,CAAC,CAAC;YAChB,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,IAAS,EAAE,EAAE;gBACjC,IAAI,IAAI,CAAC,QAAQ,EAAE;oBACjB,OAAO,EAAE,CAAC;iBACX;YACH,CAAC,CAAC,CAAC;YACH,IAAI,OAAO,GAAG,CAAC,EAAE;gBACf,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;aACvB;iBAAM;aACN;SACF;aAAM;YACL,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;SACtB;IACH,CAAC;IACD,SAAS,CAAC,IAAS;QACjB,IAAI,IAAI,EAAE;YACR,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;YAC1B,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,IAAS,EAAE,EAAE;gBACjC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACvB,CAAC,CAAC,CAAC;SACJ;aAAM;YACL,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;YAC3B,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,IAAS,EAAE,EAAE;gBACjC,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;YACxB,CAAC,CAAC,CAAC;SACJ;IACH,CAAC;IACD,MAAM,CAAC,EAAO;QACZ,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC;QACpC,IAAI,IAAI,CAAC,OAAO;YAAE,OAAO;QAEzB,IAAI,GAAG,GAAG;YACR,YAAY,EAAE,IAAI,CAAC,IAAI;YACvB,QAAQ,EAAE,IAAI,CAAC,OAAO;YACtB,GAAG,EAAE,EAAE,CAAC,MAAM,CAAC,KAAK;SACrB,CAAC;QACF,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,SAAS,CACvC,CAAC,IAAS,EAAE,EAAE;YACZ,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC;YAC3B,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;QACpB,CAAC,EACD,CAAC,KAAK,EAAE,EAAE;YACR,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;YAClB,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,uBAAuB,CAAC,CAAC;QAC/C,CAAC,CACF,CAAC;IACJ,CAAC;IACD,GAAG;;QACD,IACE,CAAC,IAAI,CAAC,OAAO;YACb,iBAAI,CAAC,OAAO,0CAAE,MAAM,CAAC,CAAC,CAAM,EAAE,EAAE,CAAC,CAAC,CAAC,QAAQ,2CAAG,MAAM,KAAI,CAAC,EACzD;YACA,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,0BAA0B,CAAC,CAAC;YAClD,OAAO;SACR;QACD,IAAI,GAAG,GAAG;YACR,QAAQ,EAAE,IAAI,CAAC,OAAO;YACtB,YAAY,EAAE,IAAI,CAAC,YAAY;YAC/B,YAAY,EAAE,IAAI,CAAC,IAAI;YACvB,KAAK,EAAE,IAAI,CAAC,OAAO;gBACjB,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC;gBAChB,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAM,EAAE,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAM,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC;SACxE,CAAC;QAEF,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,SAAS,CACvC,CAAC,IAAS,EAAE,EAAE;YACZ,IAAI,IAAI,CAAC,UAAU,IAAI,GAAG,EAAE;gBAC1B,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBACpC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;aAC1B;iBAAM;gBACL,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBACpC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;aAC1B;QACH,CAAC,EACD,CAAC,KAAK,EAAE,EAAE;YACR,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QACvC,CAAC,CACF,CAAC;IACJ,CAAC;;oFAnHU,kBAAkB,kEAUnB,wEAAe;kGAVd,kBAAkB;QChB/B,yEAIC;QACD,kEAAa;QACb,kEAA+D;QAC/D,4DAAM;QACN,yEAAqD;QACjD,yEAGC;QACG,yEAGC;QACG,0EAAuB;QAAC,2EAAe;QAAA,4DAAO;QAC9C,0EAAkB;QAAC,0GAA8C;QAAA,4DAAO;QACxE,6EAAqE;QAA1B,mJAAU,kBAAc,IAAC;QAChE,6EAAmB;QAAA,qFAAyB;QAAA,4DAAS;QACrD,sHAES;QACX,4DAAS;QACf,4DAAM;QAEN,8EAAuE;QAAhC,2IAAS,SAAK,IAAC;QAAkB,iEAAI;QAAA,4DAAS;QACzF,4DAAM;QACN,iHASQ;QACN,2EAIC;QACH,iHAKqF;QACrF,4DAAM;QAGV,4DAAM;;QAhCiC,2DAAS;QAAT,+EAAS;QAQI,0DAAc;QAAd,8EAAc;QAexC,0DAAU;QAAV,gFAAU;;;;;;;;;;;;;;AC3CpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIkC;AAG6B;;;;;;;;;;;;;;IC0B3D,0EACkE;IAAlE,oWAAmC;IACjC,sEAAK;IAAA,uDAAa;IAAA,4DAAM;IACxB,sEAAK;IAAA,+DAAI;IAAA,4DAAM;IACjB,sEAC+E;IAAA,4DAAM;;;;IALnD,+KAAyD;IAEpF,0DAAa;IAAb,6EAAa;IAEK,0DAAuD;IAAvD,2KAAuD;;ADrB7E,MAAM,kBAAkB;IAK7B,YACU,OAAkB,EACM,UAAe,EACvC,KAAkB,EAClB,aAA2B,EAC3B,QAAwB,EACxB,UAA2C,EAC3C,kBAAqC;QANrC,YAAO,GAAP,OAAO,CAAW;QACM,eAAU,GAAV,UAAU,CAAK;QACvC,UAAK,GAAL,KAAK,CAAa;QAClB,kBAAa,GAAb,aAAa,CAAc;QAC3B,aAAQ,GAAR,QAAQ,CAAgB;QACxB,eAAU,GAAV,UAAU,CAAiC;QAC3C,uBAAkB,GAAlB,kBAAkB,CAAmB;QAX/C,iBAAY,GAAQ,EAAE,CAAC;QACvB,kBAAa,GAAQ,IAAI,CAAC;QAC1B,YAAO,GAAQ,EAAE,CAAC;IAUf,CAAC;IAEJ,QAAQ;QACN,IAAI,GAAG,GAAG;YACR,QAAQ,EAAE,IAAI,CAAC,UAAU,CAAC,GAAG;SAC9B,CAAC;QACF,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,CAAC,IAAS,EAAE,EAAE;YAC9D,IAAI,IAAI,CAAC,UAAU,IAAI,GAAG,EAAE;gBAC1B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC;gBAC3B,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,IAAS,EAAE,KAAU,EAAE,EAAE;oBAC7C,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;gBACvB,CAAC,CAAC,CAAC;gBACH,uCAAuC;gBACvC,4BAA4B;aAC7B;iBAAM;gBACL,uCAAuC;gBACvC,4BAA4B;aAC7B;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IACD,mBAAmB,CAAC,IAAS;QAC3B,IAAI,IAAI,CAAC,QAAQ,EAAE;YACjB,IAAI,OAAO,GAAG,CAAC,CAAC;YAChB,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,IAAS,EAAE,EAAE;gBACjC,IAAI,IAAI,CAAC,QAAQ,EAAE;oBACjB,OAAO,EAAE,CAAC;iBACX;YACH,CAAC,CAAC,CAAC;YACH,IAAI,OAAO,GAAG,CAAC,EAAE;gBACf,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;aACvB;iBAAM;aACN;SACF;aAAM;YACL,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;SACtB;IACH,CAAC;IACD,SAAS,CAAC,IAAS;QACjB,IAAI,IAAI,EAAE;YACR,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;YAC1B,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,IAAS,EAAE,EAAE;gBACjC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACvB,CAAC,CAAC,CAAC;SACJ;aAAM;YACL,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;SAC5B;IACH,CAAC;IACD,QAAQ;QACN,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IAC3B,CAAC;IACD,QAAQ;QACN,IAAI,QAAQ,GAAQ,EAAE,CAAC;QACvB,IAAI,IAAI,CAAC,aAAa,IAAI,IAAI,EAAE;YAC9B,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,OAAY,EAAE,EAAE;gBACpC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;YAC9B,CAAC,CAAC,CAAC;SACJ;aAAM;YACL,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,OAAY,EAAE,EAAE;gBACpC,IAAI,OAAO,CAAC,QAAQ,IAAI,KAAK;oBAAE,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;YAC7D,CAAC,CAAC,CAAC;SACJ;QACD,IAAI,IAAI,CAAC,UAAU,CAAC,UAAU,EAAE;YAC9B,IAAI,GAAG,GAAG;gBACR,QAAQ,EAAE,IAAI,CAAC,UAAU,CAAC,GAAG;gBAC7B,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC,KAAK,EAAE;gBACrC,KAAK,EAAE,QAAQ;gBACf,UAAU,EAAE,IAAI,CAAC,UAAU,CAAC,UAAU;gBACtC,GAAG,EAAE,IAAI,CAAC,UAAU,CAAC,GAAG;gBACxB,QAAQ,EAAE,IAAI,CAAC,UAAU,CAAC,QAAQ;gBAClC,WAAW,EAAE,IAAI,CAAC,UAAU,CAAC,WAAW;gBACxC,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC,KAAK;gBAC5B,YAAY,EAAE,IAAI,CAAC,UAAU,CAAC,YAAY;gBAC1C,MAAM,EAAE,IAAI,CAAC,UAAU,CAAC,MAAM;aAC/B,CAAC;YAEF,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,CAAC,IAAS,EAAE,EAAE;gBAC1D,IAAI,IAAI,CAAC,UAAU,IAAI,GAAG,EAAE;oBAC1B,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;oBACnC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;iBAC1B;qBAAM;oBACL,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;oBACnC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;iBAC1B;YACH,CAAC,CAAC,CAAC;SACJ;aAAM;YACL,IAAI,GAAG,GAAG;gBACR,QAAQ,EAAE,IAAI,CAAC,UAAU,CAAC,GAAG;gBAC7B,YAAY,EAAE,IAAI,CAAC,UAAU,CAAC,GAAG;gBACjC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC,KAAK,EAAE;gBACrC,KAAK,EAAE,QAAQ;gBACf,MAAM,EAAE,IAAI,CAAC,UAAU,CAAC,MAAM;aAC/B,CAAC;YAEF,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,CAAC,IAAS,EAAE,EAAE;gBACvD,IAAI,IAAI,CAAC,UAAU,IAAI,GAAG,EAAE;oBAC1B,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;oBACnC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,EAAE,KAAK,EAAE,SAAS,EAAE,CAAC,CAAC;iBAC7C;qBAAM;oBACL,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;oBACnC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;iBAC1B;YACH,CAAC,CAAC,CAAC;SACJ;IACH,CAAC;IACD,cAAc;QACZ,IAAI,CAAC,OAAO;aACT,IAAI,CAAC,0EAAe,EAAE;YACrB,MAAM,EAAE,KAAK;YACb,KAAK,EAAE,KAAK;YACZ,IAAI,EAAE;gBACJ,QAAQ,EAAE,IAAI;aACf;SACF,CAAC;aACD,WAAW,EAAE;aACb,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;YAClB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QACpB,CAAC,CAAC,CAAC;IACP,CAAC;;oFAjIU,kBAAkB,uMAOnB,wEAAe;kGAPd,kBAAkB;QCjB/B,yEAA8F;QAC1F,yEAAiC;QAAC,+EAAmB;QAAA,4DAAM;QAC3D,kEAA+D;QACnE,4DAAM;QACN,yEAAoD;QAChD,yEAAoF;QAChF,yEAID;QACD,uEAAoH;QAAvC,qIAAS,oBAAgB,IAAC;QACrG,oEAAgD;QAClD,4DAAI;QACJ,0EAA4B;QAAA,kHAAsD;QAAA,4DAAO;QAG3F,4DAAM;QACN,0EAAoB;QAChB,6EAAwD;QAAA,sFACpD;QAAA,4DAAQ;QACZ,6EAAuD;QACrD,6EAAqG;QAAxD,0IAAS,cAAU,CAAC,CAAC,IAAC;QAAnE,4DAAqG;QAAA,sEAEvG;QAAA,4DAAQ;QACR,6EAAuD;QACrD,6EAAoF;QAAvC,0IAAS,cAAU,CAAC,CAAC,IAAC;QAAnE,4DAAoF;QAAA,0EACtF;QAAA,4DAAQ;QACV,4DAAM;QACN,2EAIC;QACH,iHAKqF;QACrF,4DAAM;QACN,4DAAM;QACV,4DAAM;QACN,2EAA+C;QAC3C,8EAAuE;QAA/D,2IAAS,cAAU,IAAC;QAA2C,+DAAG;QAAA,4DAAS;QACnF,8EAA2E;QAAxD,2IAAS,cAAU,IAAE;QAAmC,kEAAM;QAAA,4DAAS;QAC5F,4DAAM;;QAxBsE,2DAAgB;QAAhB,yEAAgB;QAYpE,0DAAU;QAAV,gFAAU;;;;;;;;;;;;;;;;;;;;ACvB7B,MAAM,uBAAuB;IAClC,YACU,KAAkB,EAClB,IAAwB,EACxB,QAAwB;QAFxB,UAAK,GAAL,KAAK,CAAa;QAClB,SAAI,GAAJ,IAAI,CAAoB;QACxB,aAAQ,GAAR,QAAQ,CAAgB;IAC/B,CAAC;IAEJ,aAAa,CAAC,OAAe,EAAE,IAAY;QACzC,OAAO,IAAI,CAAC,KAAK,CAAC,cAAc,CAC9B,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;YACrB,qCAAqC;YACrC,OAAO;YACP,gBAAgB;YAChB,IAAI,CACP,CAAC;IACJ,CAAC;IAED,iBAAiB,CAAC,OAAe,EAAE,IAAY,EAAE,MAAW;QAC1D,MAAM,IAAI,GAAG,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC;QAC5B,OAAO,IAAI,CAAC,KAAK,CAAC,eAAe,CAC/B,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;YACrB,mBAAmB,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAC5C,CAAC;IACJ,CAAC;IAED,iBAAiB,CAAC,OAAe,EAAE,IAAY;QAC7C,OAAO,IAAI,CAAC,KAAK,CAAC,cAAc,CAC9B,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;YACrB,6BAA6B;YAC7B,OAAO;YACP,gBAAgB;YAChB,IAAI,CACP,CAAC;IACJ,CAAC;IAED,YAAY,CAAC,OAAe,EAAE,IAAY,EAAE,MAAc;QACxD,OAAO,IAAI,CAAC,KAAK,CAAC,eAAe,CAC/B,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,GAAG,8BAA8B,EACxD,IAAI,CAAC,SAAS,CAAC,EAAE,OAAO,EAAE,MAAM,EAAE,YAAY,EAAE,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAE,CAAC,CAC3E,CAAC;IACJ,CAAC;IAED,SAAS,CAAC,EAAO;QACf,OAAO,IAAI,CAAC,KAAK,CAAC,eAAe,CAC/B,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,GAAG,qBAAqB,EAC/C,IAAI,CAAC,SAAS,CAAC,EAAC,QAAQ,EAAG,EAAE,EAAC,CAAC,CAChC,CAAC;IACJ,CAAC;IAED,mBAAmB,CAAC,OAAe,EAAE,IAAY;QAC/C,OAAO,IAAI,CAAC,KAAK,CAAC,eAAe,CAC/B,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,GAAG,qBAAqB,EAC/C,IAAI,CAAC,SAAS,CAAC,EAAE,QAAQ,EAAE,OAAO,EAAE,YAAY,EAAE,IAAI,EAAE,CAAC,CAC1D,CAAC;IACJ,CAAC;IAED,gBAAgB,CAAC,IAAS,EAAE,YAAiB,EAAE,QAAa,EAAE,IAAS;QACrE,MAAM,IAAI,GAAG,EAAC,IAAI,EAAE,YAAY,EAAE,QAAQ,EAAE,IAAI,EAAC,CAAC;QAClD,OAAO,IAAI,CAAC,KAAK,CAAC,eAAe,CAC/B,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,GAAG,kBAAkB,EAC5C,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CACrB,CAAC;IACJ,CAAC;IAED,gBAAgB,CACd,OAAe,EACf,QAAgB,EAChB,MAAc;QAEd,OAAO,IAAI,CAAC,KAAK,CAAC,eAAe,CAC/B,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,GAAG,YAAY,EACtC,IAAI,CAAC,SAAS,CAAC,EAAE,QAAQ,EAAE,OAAO,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC,CACpE,CAAC;IACJ,CAAC;IAED,qBAAqB,CACnB,OAAe,EACf,IAAY,EACZ,IAAY;QAEZ,OAAO,IAAI,CAAC,KAAK,CAAC,eAAe,CAC/B,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,GAAG,4BAA4B,EACtD,IAAI,CAAC,SAAS,CAAC;YACb,QAAQ,EAAE,OAAO;YACjB,YAAY,EAAE,IAAI;YAClB,YAAY,EAAE,IAAI;SACnB,CAAC,CACH,CAAC;IACJ,CAAC;IACD,0BAA0B,CAAC,OAAe,EAAE,IAAY,EAAE,IAAY,EAAE,IAAY;QAElF,OAAO,IAAI,CAAC,KAAK,CAAC,eAAe,CAC/B,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,GAAG,4BAA4B,EACtD,IAAI,CAAC,SAAS,CAAC;YACb,QAAQ,EAAE,OAAO;YACjB,YAAY,EAAE,IAAI;YAClB,YAAY,EAAE,IAAI;YAClB,OAAO,EAAE,IAAI;SACd,CAAC,CACH,CAAC;IACJ,CAAC;IAED,qBAAqB,CAAC,OAAe,EAAE,IAAY;QACjD,OAAO,IAAI,CAAC,KAAK,CAAC,eAAe,CAC/B,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,GAAG,kCAAkC,EAC5D,IAAI,CAAC,SAAS,CAAC,EAAE,QAAQ,EAAE,OAAO,EAAE,YAAY,EAAE,IAAI,EAAE,CAAC,CAC1D,CAAC;IACJ,CAAC;IAED,cAAc,CACZ,OAAe,EACf,MAAc,EACd,QAAgB;QAEhB,OAAO,IAAI,CAAC,KAAK,CAAC,eAAe,CAC/B,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,GAAG,iBAAiB,EAC3C,IAAI,CAAC,SAAS,CAAC;YACb,OAAO,EAAE,MAAM;YACf,QAAQ,EAAE,OAAO;YACjB,SAAS,EAAE,QAAQ;SACpB,CAAC,CACH,CAAC;IACJ,CAAC;IAED,YAAY,CAAC,OAAe,EAAE,IAAY,EAAE,KAAa;QACvD,OAAO,IAAI,CAAC,KAAK,CAAC,eAAe,CAC/B,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,GAAG,mBAAmB,EAC7C,IAAI,CAAC,SAAS,CAAC,EAAE,QAAQ,EAAE,OAAO,EAAE,IAAI,EAAE,KAAK,EAAE,YAAY,EAAE,IAAI,EAAE,CAAC,CACvE,CAAC;IACJ,CAAC;;8FAjIU,uBAAuB;0GAAvB,uBAAuB,WAAvB,uBAAuB,mBAFtB,MAAM;;;;;;;;;;;;;;;;;;;ACHb,MAAM,cAAc;IACzB,gBAAe,CAAC;IAEhB,QAAQ,KAAI,CAAC;;4EAHF,cAAc;8FAAd,cAAc;QCN3B,2EAA+B;;;;;;;;;;;;;;;;;;;;;;;;ACUxB,MAAM,0BAA0B;IAKrC,YAAoB,mBAAuC;QAAvC,wBAAmB,GAAnB,mBAAmB,CAAoB;QAF3D,aAAQ,GAAG,KAAK,CAAC;QACjB,UAAK,GAAW,CAAC,CAAC;IAC4C,CAAC;IAE/D,QAAQ,KAAU,CAAC;IAEnB,MAAM,CAAC,MAA2B;;QAChC,IAAI,UAAU,SAAG,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,IAAI,0CAAE,UAAU,CAAC;QAC1C,IAAI,CAAC,QAAQ,SAAG,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,IAAI,0CAAE,cAAc,CAAC;QAC7C,IAAI,UAAU,EAAE;YACd,IAAI,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC;YAC5B,QAAQ,IAAI,EAAE;gBACZ,KAAK,eAAe;oBAClB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,mBAAmB,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC;oBACtE,MAAM;gBACR,KAAK,WAAW;oBACd,IAAI,QAAQ,GAAG,IAAI,CAAC,mBAAmB,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;oBAC5D,IAAI,WAAW,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;oBAC9C,IAAI,UAAU,GAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC;oBAC/C,IAAI,SAAS,GAAG,IAAI,CAAC,mBAAmB,CAAC,YAAY,CACnD,QAAQ,EACR,WAAW,EACX,UAAU,CACX,CAAC;oBACF,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,mBAAmB,CAAC,cAAc,CAClD,QAAQ,EACR,WAAW,EACX,SAAS,CACV,CAAC;oBACF,MAAM;gBACR;oBACE,IAAI,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE;wBAC1B,IAAI,QAAQ,GAAG,IAAI,CAAC,mBAAmB,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;wBAC5D,IAAI,WAAW,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;wBAC9C,IAAI,UAAU,GAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC;wBAC/C,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,mBAAmB,CAAC,YAAY,CAChD,QAAQ,EACR,WAAW,EACX,UAAU,CACX,CAAC;qBACH;yBAAM;wBACL,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;qBAC3B;oBACD,MAAM;aACT;SACF;aAAM;YACL,IAAI,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;YACtC,IAAI,QAAQ,GAAG,UAAU,OAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,mCAAI,CAAC,CAAC,CAAC;YACrD,IAAI,QAAQ,GAAG,UAAU,OAAC,MAAM,CAAC,IAAI,CAAC,MAAM,mCAAI,CAAC,CAAC,CAAC;YACnD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,mBAAmB,CAAC,qBAAqB,CACzD,KAAK,EACL,QAAQ,EACR,QAAQ,CACT,CAAC;SACH;QACD,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,YAAM,CAAC,MAAM,0CAAE,KAAK,EAAY,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;QACvE,2BAA2B;IAC7B,CAAC;IAED,cAAc,CAAC,MAA2B;QACxC,OAAO,UAAU,CACf,MAAM,CAAC,GAAG,CAAC,QAAQ,CAAC,UAAU,EAAE,MAAM,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,CAClE,CAAC;IACJ,CAAC;IAED,gBAAgB,CAAC,MAA2B;;QAC1C,OAAO,UAAU,OAAC,MAAM,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,mCAAI,CAAC,CAAC,CAAC;IAC3E,CAAC;IACD,OAAO,CAAC,MAA2B;QACjC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QACpB,OAAO,IAAI,CAAC;IACd,CAAC;IAED,YAAY,CAAC,MAA2B;;QACtC,IAAI,KAAK,GACP,MAAM,CAAC,IAAI,CAAC,WAAW,KAAK,CAAC;YAC3B,CAAC,OAAC,MAAM,CAAC,IAAI,CAAC,KAAK,mCAAI,CAAC,CACxB,CAAC,OAAC,MAAM,CAAC,IAAI,CAAC,SAAS,mCAAI,CAAC,CAAC;QACjC,OAAO,UAAU,CAAC,KAAK,CAAC,CAAC;IAC3B,CAAC;;oGAlFU,0BAA0B;0GAA1B,0BAA0B;QCVvC,0EAAyC;QACvC,uEAAM;QAAC,uDAA6B;;QAAA,4DAAO;QAE7C,4DAAO;;QAFE,0DAA6B;QAA7B,8JAA6B;;;;;;;;;;;;;;ACDtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+C;AAES;AACG;AACA;AACQ;AACZ;AACI;AACZ;AACA;AACW;AACO;AACuB;AACN;AACd;AACb;AACV;AAC2C;AACQ;AACnC;AACN;AACW;AACX;;;AAyBhD,MAAM,WAAW;;sEAAX,WAAW;2FAAX,WAAW;+FArBb;YACP,4DAAY;YACZ,wEAAe;YACf,oEAAa;YACb,qEAAgB;YAChB,8EAAiB;YACjB,wEAAe;YACf,uEAAU;YACV,+EAAkB;YAClB,wEAAe;YACf,4DAAY;YACZ,uEAAc;YACd,4DAAY,CAAC,QAAQ,CAAC,0DAAU,CAAC;YACjC,2EAAgB;YAChB,uEAAc;YACd,2DAAW;YACX,qEAAa;YACb,mEAAmB;SACpB;oIAGU,WAAW,mBAtBP,+FAAkB,EAAE,iFAAc,EAAC,qGAAoB,EAAE,6GAAsB,EAAE,qGAAoB,aAElH,4DAAY;QACZ,wEAAe;QACf,oEAAa;QACb,qEAAgB;QAChB,8EAAiB;QACjB,wEAAe;QACf,uEAAU;QACV,+EAAkB;QAClB,wEAAe;QACf,4DAAY;QACZ,uEAAc,gEAEd,2EAAgB;QAChB,uEAAc;QACd,2DAAW;QACX,qEAAa;QACb,mEAAmB","file":"default~moodboard-src-lib-moodboard-module~order-src-lib-order-module~quote-src-lib-quote-module~sho~6a476ef7.js","sourcesContent":["import { Component, Inject, Input, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { ToasterService, UserService } from 'projects/core/src/public-api';\r\nimport { AddProductService } from '../addproduct/add-product.service';\r\nimport { QuoteService } from '../../../quote.service';\r\n\r\n@Component({\r\n  selector: 'lib-add-fp',\r\n  templateUrl: './add-fp.component.html',\r\n  styleUrls: ['./add-fp.component.scss'],\r\n})\r\nexport class AddFPComponent implements OnInit {\r\n  @Input() quoteId = '';\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public dialogData: any,\r\n    private _user: UserService,\r\n    private _quoteService: QuoteService,\r\n    private _toaster: ToasterService,\r\n    private _dialogRef: MatDialogRef<AddFPComponent>,\r\n    private _addProductService: AddProductService,\r\n  ) {}\r\n  selectedFloorPlan = '';\r\n  floorPlanTypes: Array<any> = [\r\n    {\r\n      name: 'Studio',\r\n      sgid: 1,\r\n    },\r\n    {\r\n      name: '1 Bedroom',\r\n      sgid: 2,\r\n    },\r\n    {\r\n      name: '2 Bedroom',\r\n      sgid: 3,\r\n    },\r\n    {\r\n      name: '3 Bedroom',\r\n      sgid: 4,\r\n    },\r\n    {\r\n      name: '4 Bedroom',\r\n      sgid: 5,\r\n    },\r\n    {\r\n      name: '5 Bedroom',\r\n      sgid: 6,\r\n    },\r\n    {\r\n      name: '6 Bedroom',\r\n      sgid: 7,\r\n    },\r\n    {\r\n      name: '7 Bedroom',\r\n      sgid: 8,\r\n    },\r\n    {\r\n      name: '8 Bedroom',\r\n      sgid: 9,\r\n    },\r\n    {\r\n      name: '9 Bedroom',\r\n      sgid: 10,\r\n    },\r\n    {\r\n      name: '10 Bedroom',\r\n      sgid: 11,\r\n    },\r\n  ];\r\n  floorPlanFormGroup = new FormGroup({});\r\n  ngOnInit(): void {\r\n    this.quoteId = this.dialogData.quoteId;\r\n    this.floorPlanFormGroup.addControl(\r\n      'floorplan_name',\r\n      new FormControl('', [Validators.required])\r\n    );\r\n    this.floorPlanFormGroup.addControl(\r\n      'floorplan_type_id',\r\n      new FormControl('', [Validators.required])\r\n    );\r\n    this.floorPlanFormGroup.addControl(\r\n      'units',\r\n      new FormControl('', [Validators.required])\r\n    );\r\n\r\n  }\r\n  onCancel(){\r\n    this._dialogRef.close(0);\r\n  }\r\n  onSubmit() {\r\n    let obj = this.floorPlanFormGroup.value;\r\n    obj.quote_id = this.quoteId;\r\n    obj.userid = this._user.getUser().getId();\r\n    this._quoteService.createFloorPlan(obj).subscribe((resp) => {\r\n      if (resp.statusCode == 200) {\r\n        this._toaster.success(resp.message);\r\n        this._dialogRef.close(1);\r\n        this._dialogRef.close({event : 'success'})\r\n      } else {\r\n        this._toaster.success(resp.message);\r\n        this._dialogRef.close(0);\r\n      }\r\n    });\r\n  }\r\n}\r\n","<div\r\n  fxLayout=\"row\"\r\n  style=\"width: 100%; cursor: pointer\"\r\n  fxLayoutAlign=\"space-between start\"\r\n>\r\n  <div style=\"margin-bottom: 2rem\">Create a floor plan</div>\r\n  <i class=\"fa fa-times\" mat-dialog-close aria-hidden=\"true\"></i>\r\n</div>\r\n<div style=\"margin-bottom: 2rem\" mat-dialog-content>\r\n  <form\r\n    [formGroup]=\"floorPlanFormGroup\"\r\n    fxLayout=\"column\"\r\n    fxLayoutGap=\"2rem\"\r\n    action=\"\"\r\n  >\r\n    <div fxLayout=\"row\" fxLayoutGap=\"2rem\" fxLayoutAlign=\"start\">\r\n      <mat-label style=\"width: 50%\">Floor Plan Name*</mat-label>\r\n      <mat-form-field appearance=\"outline\">\r\n        <input formControlName=\"floorplan_name\" matInput />\r\n      </mat-form-field>\r\n    </div>\r\n    <div fxLayout=\"row\" fxLayoutGap=\"2rem\" fxLayoutAlign=\"start\">\r\n      <mat-label style=\"width: 50%\">Floor Plan Type*</mat-label>\r\n      <mat-form-field appearance=\"outline\">\r\n        <mat-select formControlName=\"floorplan_type_id\">\r\n          <mat-option *ngFor=\"let type of floorPlanTypes\" [value]=\"type.sgid\">\r\n            {{ type.name }}\r\n          </mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n    </div>\r\n    <div fxLayout=\"row\" fxLayoutGap=\"2rem\" fxLayoutAlign=\"start\">\r\n      <mat-label style=\"width: 50%\">No of Units*</mat-label>\r\n      <mat-form-field appearance=\"outline\">\r\n        <input formControlName=\"units\" matInput />\r\n      </mat-form-field>\r\n    </div>\r\n  </form>\r\n</div>\r\n<div mat-dialog-actions fxLayoutAlign=\"center\">\r\n  <button\r\n    class=\"round\"\r\n    (click)=\"onSubmit()\"\r\n    [disabled]=\"floorPlanFormGroup.invalid\"\r\n    mat-flat-button\r\n    color=\"accent\"\r\n  >\r\n    ADD\r\n  </button>\r\n  <button class=\"round\" mat-flat-button (click)=\"onCancel()\" color=\"primary\">\r\n    CANCEL\r\n  </button>\r\n</div>\r\n","import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { GridOptions, GridReadyEvent, ICellRendererParams } from 'ag-grid-community';\r\nimport {\r\n  ImageRendererComponent,\r\n  UserService,\r\n} from 'projects/core/src/public-api';\r\nimport { Observable } from 'rxjs';\r\nimport { quoteRoute } from '../../quote-routing';\r\nimport { QuoteListService } from './quote-list.service';\r\n\r\n@Component({\r\n  selector: 'lib-quote-list',\r\n  templateUrl: './quote-list.component.html',\r\n  styleUrls: ['./quote-list.component.scss'],\r\n})\r\nexport class QuoteListComponent implements OnInit {\r\n  quoteInfo = {\r\n    bannerIconImg: 'assets/dashboard/images/quote.svg',\r\n    bannerIconImgTxt: 'Quote Icon',\r\n    bannerImg: 'assets/quote/images/quote_banner.jpg',\r\n    bannerImgTxt: 'Quote Banner Image',\r\n    bannerBottomTxt:\r\n      'Get an estimated cost for a particular moodboard, piece or project.',\r\n    text: 'Quote',\r\n  };\r\n  projectName :any = ''\r\n\r\n  columnDefs = [\r\n    { field: 'sgid', headerName: 'Quote Number' },\r\n    { field: 'name', headerName: 'Customer name' },\r\n    { field: 'company_name', headerName: 'Company Name' },\r\n    { field: 'project_name', headerName: 'Project Name' },\r\n    {\r\n      field: 'created_at',\r\n      headerName: 'Quote Created Date',\r\n      valueFormatter : (params:ICellRendererParams)=>{\r\n        return params?.data?.created_at?.split(' ')[0];\r\n      }\r\n    },\r\n    {\r\n      field: 'is_order',\r\n      headerName: 'Order Submitted',\r\n      onCellClicked: (params: any) => {\r\n        console.log(params);\r\n      },\r\n    },\r\n  ];\r\n\r\n  defaultColDef = {\r\n    wrapText: true,\r\n    cellClass: 'grid-cell',\r\n    cellStyle: {\r\n      'line-height': 'normal',\r\n      'align-items': 'center',\r\n      'justify-content': 'center',\r\n      display: 'flex',\r\n      padding: '0 0.5rem',\r\n    },\r\n  };\r\n\r\n  rowData: Observable<any[]> = new Observable();\r\n  gridOptions: GridOptions = {\r\n    onRowClicked: (param) => this.onRowClicked(param),\r\n    // headerHeight: 100\r\n    rowHeight: 50,\r\n    onGridReady: (api: GridReadyEvent) => this.onGridReady(api),\r\n  };\r\n\r\n  selectedButton: 'allQuote' | 'myQuote' = 'allQuote';\r\n  frameworkComponents = {\r\n    ImageRendererComponent: ImageRendererComponent,\r\n  };\r\n  projectList : any= []\r\n  selectedProject :any = \"\";\r\n  constructor(\r\n    private _quoteListService: QuoteListService,\r\n    private _router: Router,\r\n    private _userService: UserService ,\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.getProjectList()\r\n  }\r\n  onGridReady(api: GridReadyEvent) {\r\n    this.getQuoteList()\r\n    api.api.sizeColumnsToFit();\r\n  }\r\n\r\n  onRowClicked(param: any) {\r\n    let quoteId = param?.data?.sgid;\r\n    if (param?.data?.order_status && quoteId) {\r\n      this._router.navigate(['order', quoteId]);\r\n    } else if (quoteId) {\r\n      this._router.navigate(['quote', quoteId]);\r\n    }\r\n  }\r\n\r\n  getQuoteList() {\r\n    //this.getProjectList();\r\n    this.rowData = this._quoteListService.getQuoteList(\r\n      this._userService.getUser().getId(),\r\n      this.selectedButton == 'myQuote'?'my':'',\r\n      'quotes',\r\n      this.selectedProject\r\n    );\r\n  }\r\n  myQuote(){\r\n    this.selectedButton = 'myQuote';\r\n    this.getQuoteList()\r\n  }\r\n  allQuote(){\r\n    this.selectedButton ='allQuote';\r\n    this.getQuoteList();\r\n  }\r\n\r\n  onTabChanged(ev: any){\r\n    if(ev.index == 0) {\r\n      this.allQuote();\r\n    }\r\n    if(ev.index == 1) {\r\n      this.myQuote();\r\n    }\r\n  }\r\n\r\n  getProjectList(){\r\n    let userId =  this._userService.getUser().getId();\r\n    this._quoteListService.getProjectList(this.selectedButton == 'myQuote'? 'my':'all',userId).subscribe((response:any) => {\r\n      this.projectList = response.quoteProject;\r\n    });    \r\n  }\r\n\r\n  createQuote() {\r\n    this._router.navigate(['quote/create']);\r\n  }\r\n\r\n  projectFilter(value: any){\r\n    this.selectedProject = value?.target.value;\r\n    this.getQuoteList();\r\n  }\r\n}\r\n","<div class=\"quotes\" fxLayout=\"column\" fxLayoutAlign=\" stretch\">\r\n  <app-banner\r\n    [iconSrc]=\"quoteInfo.bannerIconImg\"\r\n    [iconAltTxt]=\"quoteInfo.bannerIconImgTxt\"\r\n    [leftTxt]=\"quoteInfo.text\"\r\n    [src]=\"quoteInfo.bannerImg\"\r\n    [altTxt]=\"quoteInfo.bannerImgTxt\"\r\n    [bottomTxt]=\"quoteInfo.bannerBottomTxt\"\r\n  ></app-banner>\r\n\r\n  <div\r\n    class=\"quotes-create\"\r\n    fxLayout=\"row\"\r\n    fxLayoutAlign=\"center center\"\r\n    fxLayoutGap=\"2rem\"\r\n  >\r\n    <button mat-raised-button (click)=\"createQuote()\">\r\n      <mat-icon inline=\"true\">add_circle_outline</mat-icon>\r\n    </button>\r\n    <span class=\"quotes-create-text\">CREATE A NEW QUOTE</span>\r\n    <!-- <mat-form-field class=\"select\">\r\n      <mat-label>Select a Project</mat-label>\r\n      <mat-select (selectionChange)=\"projectFilter($event.value)\" >\r\n        <mat-option  *ngFor=\"let project of projectList\" [value]=\"project.project_name\">{{project.project_name}}</mat-option>\r\n      </mat-select>\r\n    </mat-form-field> -->\r\n  </div>\r\n  <!-- <div\r\n    class=\"quotes-filter\"\r\n    fxLayout=\"row\"\r\n    fxLayoutAlign=\"center center\"\r\n    fxLayoutGap=\"2rem\"\r\n  >\r\n    <button [style.background]=\"selectedButton==='myQuote'?'#F3F3F3':''\" mat-flat-button [color]=\"selectedButton==='allQuote' ?'accent':''\" (click)=\"allQuote()\">ALL QUOTES</button>\r\n    <button [style.background]=\"selectedButton==='allQuote'?'#F3F3F3':''\" mat-flat-button [color]=\"selectedButton==='myQuote'?'accent':''\" (click)=\"myQuote()\">MY QUOTES</button>\r\n  </div> -->\r\n\r\n  <mat-tab-group color=\"accent\" class=\"tabs\" mat-align-tabs=\"center\" style=\"background-color: #F8F8F8;padding-top: 2rem;\r\n  margin-top: 1rem;\" (selectedTabChange)=\"onTabChanged($event);\" #tabsReference>\r\n    <mat-tab label=\"ALL QUOTES\" >\r\n      <div fxLayout=\"row\"  fxLayoutAlign=\"center center\" >\r\n        <select (change)=\"projectFilter($event)\" [(ngModel)]=\"this.selectedProject\">\r\n          <option value=\"\">Select a Project</option>\r\n          <option *ngFor=\"let project of projectList\" [value]=\"project.project_name\">{{project.project_name}}</option>\r\n        </select>\r\n      </div>\r\n      <ag-grid-angular\r\n      [defaultColDef]=\"defaultColDef\"\r\n        style=\"height: 500px;\"\r\n        [gridOptions]=\"gridOptions\"\r\n        class=\"ag-theme-alpine quotes-table\"\r\n        [rowData]=\"rowData | async\"\r\n        [columnDefs]=\"columnDefs\"\r\n      >\r\n      </ag-grid-angular>\r\n    </mat-tab>\r\n    <mat-tab label=\"MY QUOTES\">\r\n      <div fxLayout=\"row\"  fxLayoutAlign=\"center center\" >\r\n        <select (change)=\"projectFilter($event)\" [(ngModel)]=\"this.selectedProject\">\r\n          <option value=\"\">Select a Project</option>\r\n          <option *ngFor=\"let project of projectList\" [value]=\"project.project_name\">{{project.project_name}}</option>\r\n        </select>\r\n      </div>\r\n      <ag-grid-angular\r\n      [defaultColDef]=\"defaultColDef\"\r\n        style=\"height: 500px;\"\r\n        [gridOptions]=\"gridOptions\"\r\n        class=\"ag-theme-alpine quotes-table\"\r\n        [rowData]=\"rowData | async\"\r\n        [columnDefs]=\"columnDefs\"\r\n      >\r\n      </ag-grid-angular>\r\n    </mat-tab>\r\n  </mat-tab-group>\r\n  <!-- <ag-grid-angular\r\n  [defaultColDef]=\"defaultColDef\"\r\n    style=\"height: 500px;\"\r\n    [gridOptions]=\"gridOptions\"\r\n    class=\"ag-theme-alpine quotes-table\"\r\n    [rowData]=\"rowData | async\"\r\n    [columnDefs]=\"columnDefs\"\r\n  >\r\n  </ag-grid-angular> -->\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { EnvironmentService, HttpService, UserService } from 'projects/core/src/public-api';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AddProductService {\r\n\r\n  constructor(    \r\n      private _http: HttpService,\r\n      private _env: EnvironmentService,\r\n      private _user: UserService\r\n    ) { }\r\n    getFPList(id: any): Observable<any> {\r\n      let url = 'getFloorplanDetails';\r\n      return this._http.sendPOSTRequest(\r\n        this._env.getEndPoint() + url,\r\n        JSON.stringify({\"quote_id\" : id})\r\n      );\r\n    }\r\n    getFPTypeList(): Observable<any> {\r\n      let url = 'getFloorplanType';\r\n      return this._http.sendGETRequest(\r\n        this._env.getEndPoint() + url\r\n      );\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { EnvironmentService } from 'projects/core/src/lib/services/environment.service';\r\nimport { HttpService } from 'projects/core/src/public-api';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class QuoteListService {\r\n  constructor(private http: HttpService, private env: EnvironmentService) {}\r\n\r\n  getQuoteList<T>(\r\n    userId: number,\r\n    type?: string,\r\n    sourceType?: string,\r\n    projectName: string = ''\r\n  ): Observable<T> {\r\n    let url =\r\n      'load/customer/quotes?user_id=' +\r\n      userId +\r\n      '&source_type=' +\r\n      type +\r\n      '&type=' +\r\n      sourceType +\r\n      '&project_name=' +\r\n      projectName;\r\n    return this.http.sendGETRequest(this.env.getEndPoint() + url).pipe(\r\n      map((data: any) => {\r\n        return data.quote;\r\n      })\r\n    );\r\n  }\r\n\r\n  getProjectList(sourceType: string, userId: number) {\r\n    return this.http.sendGETRequest(\r\n      this.env.getEndPoint() +\r\n        'getQuoteProjectFilter?project_name=' +\r\n        '&source_type=' +\r\n        sourceType +\r\n        '&userid=' +\r\n        userId\r\n    );\r\n  }\r\n}\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { ActivatedRoute, Params, Router } from '@angular/router';\r\nimport html2canvas from 'html2canvas';\r\nimport jsPDF from 'jspdf';\r\nimport autoTable from 'jspdf-autotable';\r\nimport {\r\n  ToasterService,\r\n  UserService,\r\n  CoreService,\r\n  PdfService,\r\n  PaymentComponent,\r\n} from 'projects/core/src/public-api';\r\nimport { QuoteHeaderComponent } from 'projects/quote/src/public-api';\r\nimport { QuoteDetailService } from '../quote/quote-detail.service';\r\n\r\n@Component({\r\n  selector: 'lib-quote-detail',\r\n  templateUrl: './quote-detail.component.html',\r\n  styleUrls: ['./quote-detail.component.scss'],\r\n})\r\nexport class QuoteDetailComponent implements OnInit {\r\n  quoteId: number = 0;\r\n  @ViewChild('quoteHeader') quoteHeader: QuoteHeaderComponent =\r\n    {} as QuoteHeaderComponent;\r\n  constructor(\r\n    private _route: ActivatedRoute,\r\n    private _quoteDetailService: QuoteDetailService,\r\n    private _toaster: ToasterService,\r\n    private _dialog: MatDialog,\r\n    private _user: UserService,\r\n    private _core: CoreService,\r\n    private _pdf: PdfService,\r\n    private _router: Router\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this._route.params.subscribe((params: Params) => {\r\n      this.quoteId = params.id;\r\n    });\r\n  }\r\n\r\n  saveQuote() {\r\n    let quoteData: Array<any> = [];\r\n    let quoteDetails = this.quoteHeader.quoteDetails;\r\n    let pinnedRowData = this.quoteHeader.pinnedBottomRowData;\r\n    let agGrid = this.quoteHeader.agGrid;\r\n    agGrid?.api?.forEachNode((rowNode) => {\r\n      let node = rowNode.data;\r\n      let obj: any = {\r\n        sgid: node?.sgid,\r\n        button_type: node?.button_type,\r\n        quote_id: quoteDetails.sgid,\r\n        sub_total: pinnedRowData[0].is_total,\r\n        old_month: node.old_month,\r\n        monthly_rent: quoteDetails.monthly_rent,\r\n        delivery_fee: quoteDetails.delivery_fee,\r\n        pickup_fee: quoteDetails.pickup_fee,\r\n        tax: pinnedRowData[2].is_total,\r\n        net_total: quoteDetails.net_total,\r\n        qty: node.is_qty,\r\n        discount: node.discount || 0,\r\n        quote_discount: quoteDetails.discount || 0,\r\n        quote_discount_price: quoteDetails.discount_price || 0,\r\n        percentage_discount: node.percentage_discount || 0,\r\n        months: node.months,\r\n        total: node.is_total,\r\n        price: node.price,\r\n        buy_price: node.buy_price,\r\n        sale_price: node.price,\r\n        apply_b2b_discount: node.b2b_discount || 0,\r\n      };\r\n      quoteData.push(obj);\r\n    });\r\n    this._quoteDetailService.updateQuote(quoteData).subscribe(\r\n      (data) => {\r\n        this._toaster.success('Quote Saved Successfully');\r\n      },\r\n      (error) => {\r\n        this._toaster.error(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  continueToPayment() {\r\n    this._dialog\r\n      .open(PaymentComponent, {\r\n        height: '15rem',\r\n        data: { quoteId: this.quoteHeader?.quoteDetails?.sgid },\r\n      })\r\n      .afterClosed()\r\n      .subscribe(\r\n        (data) => {\r\n          data['quote_id'] = this.quoteHeader?.quoteDetails?.sgid;\r\n          data['sgid'] = this._user.getUser().getId();\r\n          this._quoteDetailService.createOrder(data).subscribe(\r\n            (resp:any) => {\r\n              if(resp.statusCode == 200){\r\n                this._toaster.success(resp.result);\r\n                this._router.navigate([\r\n                  'order',\r\n                  this.quoteHeader?.quoteDetails?.sgid,\r\n                ]);\r\n              } else {\r\n                this._toaster.success(resp.result);\r\n              }\r\n            },\r\n            (error) => {\r\n              this._toaster.success(error)\r\n            }\r\n          );\r\n        },\r\n        (error) => {}\r\n      );\r\n  }\r\n\r\n  async generatePdf() {\r\n    let data = this._pdf.getAgGridRowsAndColumns(this.quoteHeader.agGrid);\r\n    data.columns.shift()\r\n    data.columns.unshift('S.NO')\r\n    let img = document.getElementsByClassName('header-img')[0] as any;\r\n    const block_total = await html2canvas(img);\r\n    const block_canvas = block_total.toDataURL('image/png');\r\n    let imagesObs = this._pdf.getAllTableBase64Images(data?.rows as [], 3);\r\n    imagesObs.subscribe((images: any) => {\r\n      let doc = new jsPDF();\r\n      const pdf_font = this._pdf.addFont();\r\n      const pdf_font_bold = this._pdf.addBoldFont();\r\n      doc.addFileToVFS(pdf_font.name,pdf_font.value);\r\n      doc.addFileToVFS(pdf_font_bold.name,pdf_font_bold.value);\r\n     \r\n      doc.addFont(\"Poppins.ttf\", \"Poppins\", \"normal\");\r\n      doc.addFont(\"Poppins-Bold.ttf\", \"Poppins-Bold\", \"bold\");\r\n      // doc.setFont('Poppins','normal');\r\n      doc.setFont('Poppins-Bold','bold');\r\n      doc.setFontSize(12);\r\n      doc.addImage(block_canvas, 'PNG', 8, 5, 40, 10);\r\n      doc.text('Quote Information', 8, 25);\r\n      let info = [\r\n        ['Project Name:', this.quoteHeader.quoteDetails.project_name, 'Address', this.quoteHeader.quoteDetails.address],\r\n        ['Company Name:', this.quoteHeader.quoteDetails.company_name, 'Quote :', this.quoteHeader.quoteDetails.sgid],\r\n        ['Contact No:', this.quoteHeader.quoteDetails.contactno, 'State:', this.quoteHeader.quoteDetails.is_state_name],\r\n        ['Customer Name:', this.quoteHeader.quoteDetails.name, 'Email:', this.quoteHeader.quoteDetails.email],\r\n        ['City:', this.quoteHeader.quoteDetails.city_name, 'Zipcode:', this.quoteHeader.quoteDetails.zipcode],\r\n      ];\r\n      autoTable(doc, {\r\n        ...this._pdf.getInformationTableUserOptions(),\r\n        startY:30,\r\n        body: info,\r\n        styles: { fontSize: 8 },\r\n        columnStyles: {\r\n          0: { cellWidth: 30 , font:'Poppins-Bold',fontStyle: 'bold'},\r\n          1: { cellWidth: 25 , font:'Poppins' , fontStyle: 'normal'},\r\n          2: { cellWidth: 17 , font:'Poppins-Bold',fontStyle: 'bold'},\r\n          3: { font:'Poppins' , fontStyle: 'normal'},\r\n        }\r\n        \r\n      });\r\n//      doc.addPage();\r\n      doc.text('Quote Summary', 7, 77);\r\n      autoTable(doc, {\r\n        ...this._pdf.getSummaryTableUserOptions(),\r\n        startY:82,\r\n        rowPageBreak: 'avoid',\r\n      //   margin: {\r\n      //     top: 10,\r\n      //     bottom: 10,\r\n      //     left: 1,\r\n      //     right: 1,\r\n      // },\r\n      columnStyles: {\r\n          0: { cellWidth: 11 },\r\n          1: { cellWidth: 20 },\r\n          2: { cellWidth: 18 },\r\n          3: { cellWidth: 20 },\r\n          4: { cellWidth: 30 },\r\n          5: { cellWidth: 15 },\r\n          6: { cellWidth: 14 },\r\n          7: { cellWidth: 20 },\r\n          8: { cellWidth: 20 },\r\n          11: { cellWidth: 12 },\r\n          12: { cellWidth: 18 },\r\n        },\r\n        columns: data.columns,\r\n        body: data?.rows?.map((r: any) => {\r\n          if (!parseInt(r[0])) {\r\n            let temp = [];\r\n            temp.push({ content: r[0], colSpan: r.length - 1 });\r\n            temp.push(r[r.length - 1]);\r\n            r = temp;\r\n          }\r\n          return r;\r\n        }),\r\n        willDrawCell: (data:any) => {\r\n          if (data.section === 'body' && data.column.index === 3) {\r\n            data.cell.raw = '';\r\n            data.cell.text = '';\r\n            data.cell.styles.halign = 'center';\r\n            data.cell.styles.valign = 'middle';\r\n          }\r\n          if (data.section === 'body' && data.column.index === 10) {\r\n            data.cell.text = `$${data.cell.text}`;\r\n          }\r\n        },\r\n        didDrawCell: (data:any) => {\r\n          if (data.section === 'body' && data.column.index === 3) {\r\n            var base64Img = 'data:image/jpeg;base64,' + images[data.row.index];\r\n            doc.addImage(\r\n              base64Img,\r\n              'JPEG',\r\n              data.cell.x + 1,\r\n              data.cell.y + 1,\r\n              18,\r\n              18\r\n            );\r\n            data.cell.styles.halign = 'center';\r\n            data.cell.styles.valign = 'middle'\r\n          }\r\n        },\r\n      });\r\n      doc.save('quote.pdf');\r\n    });\r\n  }\r\n}\r\n","<div>\r\n    <lib-quote-header fxFill #quoteHeader [quoteId]=\"quoteId\">\r\n      <ng-container actions>\r\n        <button mat-flat-button color=\"accent\" class=\"round\" (click)=\"saveQuote()\">\r\n          SAVE QUOTE\r\n        </button>\r\n        <button\r\n          mat-flat-button\r\n          color=\"accent\" class=\"round\"\r\n          *ngIf=\"quoteHeader.editQuote\"\r\n          (click)=\"generatePdf()\"\r\n        >\r\n          GENERATE PDF\r\n        </button>\r\n        <span fxFlex></span>\r\n        <button\r\n          mat-flat-button\r\n          color=\"accent\"\r\n          class=\"green-btn round\"\r\n          *ngIf=\"quoteHeader.editQuote\"\r\n          (click)=\"continueToPayment()\"\r\n        >\r\n          CONTINUE TO PAYMENT\r\n        </button>\r\n      </ng-container>\r\n    </lib-quote-header>\r\n  </div>\r\n  <table id=\"my-table\"></table>\r\n  ","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { ToasterService, UserService } from 'projects/core/src/public-api';\r\nimport { QuoteService } from '../../../quote.service';\r\nimport { QuoteHeaderService } from '../quote-header/quote-header.service';\r\nimport { SelectFpComponent } from '../select-fp/select-fp.component';\r\nimport { SelectFpuComponent } from '../select-fpu/select-fpu.component';\r\n\r\n@Component({\r\n  selector: 'lib-add-moodboard-quote',\r\n  templateUrl: './add-moodboard-quote.component.html',\r\n  styleUrls: ['./add-moodboard-quote.component.scss']\r\n})\r\nexport class AddMoodboardQuoteComponent implements OnInit {\r\n\r\n  moodboardList: any;\r\n  selectedMoodboard: any = ''\r\n\r\n  constructor(private _quoteHeaderService: QuoteHeaderService,\r\n    @Inject(MAT_DIALOG_DATA) public dialogData: any,\r\n    private _user: UserService, private _quoteService: QuoteService,\r\n    private _toaster: ToasterService,\r\n    private _dialogRef: MatDialog,\r\n    public dialogRef: MatDialogRef<any>) { }\r\n\r\n  ngOnInit() {\r\n    this.getMoodBoards();\r\n  }\r\n\r\n  getMoodBoards() {\r\n    this._quoteHeaderService.getMoodBoardByUser().subscribe(\r\n      (data: any) => {\r\n        this.moodboardList = data.result;\r\n      },\r\n      (error) => {\r\n        this.moodboardList = [];\r\n      }\r\n    );\r\n  }\r\n\r\n  add(type: any) {\r\n    if (type == '') {\r\n      let obj = {\r\n        quote_id: this.dialogData.quoteId,\r\n        moodboard_id: this.selectedMoodboard,\r\n        user_id: this._user.getUser().getId()\r\n      };\r\n      this._quoteService.addQuoteMoodboard(obj).subscribe((resp: any) => {\r\n        if (resp.statusCode == 200) {\r\n          this._toaster.success(resp.message);\r\n          this.dialogRef.close({ event: 'defaultunit' });\r\n        } else {\r\n          this._toaster.success(resp.message);\r\n          this._dialogRef.closeAll();\r\n        }\r\n      });\r\n    }\r\n    if (type == 'fp') {\r\n      this._dialogRef\r\n        .open(SelectFpComponent, {\r\n          height: '70%',\r\n          width: '70%',\r\n          data: {\r\n            isDialog: true,\r\n            qid: this.dialogData.quoteId,\r\n            mid: this.selectedMoodboard\r\n          },\r\n        })\r\n        .afterClosed()\r\n        .subscribe((data) => {\r\n          console.log(data);\r\n          if (data && data.event == 'success') {\r\n            this.dialogRef.close({ event: 'floorPlan' });\r\n          }\r\n        });\r\n    }\r\n    if (type == 'fpu') {\r\n      this._dialogRef\r\n        .open(SelectFpuComponent, {\r\n          height: '80%',\r\n          width: '50%',\r\n          data: {\r\n            isDialog: true,\r\n            qid: this.dialogData.quoteId,\r\n            mid: this.selectedMoodboard\r\n          },\r\n        })\r\n        .afterClosed()\r\n        .subscribe((data) => {\r\n          console.log(data);\r\n          if (data && data.event == 'success') {\r\n            this.dialogRef.close({ event: 'floorPlanUnit' });\r\n          }\r\n\r\n        });\r\n    }\r\n\r\n  }\r\n\r\n  closeModal() {\r\n    this._dialogRef.closeAll()\r\n  }\r\n}\r\n","<div class=\"moodboard\">\r\n    <div fxLayoutGap=\"2rem\" fxLayout=\"column\" fxLayoutAlign=\" stretch\">\r\n        <div fxLayout=\"row\" fxFlex=\"100\" fxLayoutGap=\"1rem\" fxLayoutAlign=\"space-between center\">\r\n            <div>\r\n                <h2>LET'S GET STARTED</h2>\r\n            </div>\r\n            <button type=\"button\" class=\"close\" (click)=\"closeModal()\" data-dismiss=\"modal\">\r\n                &times;\r\n            </button>\r\n        </div>\r\n    </div>\r\n    <div fxLayoutGap=\"2rem\" fxLayout=\"column\" fxLayoutAlign=\" stretch\">\r\n        <div fxLayout=\"column\" fxLayoutGap=\"1rem\">\r\n            <h2>Select a Moodboard to be added to this quote.</h2>\r\n            <select fxFlex=\"50\" [(ngModel)]=\"selectedMoodboard\">\r\n                <option value=''>No Moodboard</option>\r\n                <option *ngFor = \"let moodboard of moodboardList\" [value]=\"moodboard.sgid\">{{moodboard.boardname}}</option>\r\n            </select>\r\n        </div>\r\n    </div>\r\n    <div fxLayout=\"column\" fxLayoutGap=\"2rem\" style=\"margin-top:3rem !important\">\r\n        <h2>Where would you like to add this Moodboard in the Quote?</h2>\r\n        <div fxLayout=\"row\" style=\"width: 98%; background: #F4F4F4;padding: 22px; margin: 2%;\"\r\n            fxLayoutAlign=\"space-between start\">\r\n            <div fxLayout=\"row\" style=\"width: 100%;\" fxLayoutAlign=\"space-between center\">\r\n                <div fxLayout=\"column\" fxLayoutGap=\"1rem\">\r\n                    <h2> Add to Default Unit </h2>\r\n                    <p> Add this Moodboard directly to a quote </p>\r\n                </div>\r\n                <button mat-flat-button fxFlex=\"30\" [disabled]=\"selectedMoodboard == ''\" color=\"accent\" class=\"btn-txt round\" (click)=\"add('')\"> + ADD </button>\r\n            </div>\r\n        </div>\r\n        <div fxLayout=\"row\" style=\"width: 98%; background: #F4F4F4;padding: 22px; margin: 2%;\"\r\n            fxLayoutAlign=\"space-between start\">\r\n            <div fxLayout=\"row\" style=\"width: 100%;\" fxLayoutAlign=\"space-between center\">\r\n                <div fxLayout=\"column\" fxLayoutGap=\"1rem\">\r\n                    <h2> Add to a Floor Plan\r\n                    </h2>\r\n                    <!-- <p> Add this Moodboard to a\r\n                    </p> -->\r\n                </div>\r\n                <button mat-flat-button fxFlex=\"30\" [disabled]=\"selectedMoodboard == ''\" class=\"btn-txt round\" color=\"accent\" (click)=\"add('fp')\"> + ADD </button>\r\n            </div>\r\n        </div>\r\n        <div fxLayout=\"row\" style=\"width: 98%; background: #F4F4F4;padding: 22px; margin: 2%;\"\r\n            fxLayoutAlign=\"space-between start\">\r\n            <div fxLayout=\"row\" style=\"width: 100%;\" fxLayoutAlign=\"space-between center\">\r\n                <div fxLayout=\"column\" fxLayoutGap=\"1rem\">\r\n                    <h2> Add to Unit(s)\r\n                    </h2>\r\n                    <!-- <p> Add this Moodboard to a\r\n                    </p> -->\r\n                </div>\r\n                <button mat-raised-button fxFlex=\"30\" [disabled]=\"selectedMoodboard == ''\" type=\"button\" color=\"accent\" class=\"round\" (click)=\"add('fpu')\"> + ADD </button>\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n</div>","import { Location } from '@angular/common';\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { ToasterService } from 'projects/core/src/lib/services/toaster.service';\r\nimport { UserService } from 'projects/core/src/public-api';\r\nimport {\r\n  QuoteCreateFormComponent,\r\n  QuoteFormType,\r\n} from '../../common/components/quote-create-form/quote-create-form.component';\r\nimport { QuoteCreateService } from './quote-create.service';\r\n\r\n@Component({\r\n  selector: 'lib-quote-create',\r\n  templateUrl: './quote-create.component.html',\r\n  styleUrls: ['./quote-create.component.scss'],\r\n})\r\nexport class QuoteCreateComponent implements OnInit {\r\n  customerName: string = '';\r\n  subTitle =\r\n    'Get an estimated cost for a particular moodboard, piece or project.';\r\n  submitButtonText = 'CREATE';\r\n  type: QuoteFormType = 'CREATE';\r\n\r\n  @ViewChild('quoteFormComp') quoteFormComp: QuoteCreateFormComponent =\r\n    {} as QuoteCreateFormComponent;\r\n  constructor(private _router: Router, private _toaster: ToasterService, private _location: Location) {\r\n    let stateObject = _router.getCurrentNavigation()?.extras.state;\r\n    this.customerName = stateObject?.customerName;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if (!this.customerName) {\r\n      this._router.navigate(['quote/create']);\r\n    }\r\n    if (this._router.url.includes('copy')) {\r\n      this.type = 'COPY';\r\n      this.subTitle = 'Copying Quote named -';\r\n    } else if (this._router.url.includes('edit')) {\r\n      this.subTitle = 'Editing Quote named -';\r\n      this.type = 'EDIT';\r\n      this.submitButtonText = 'UPDATE';\r\n    }\r\n  }\r\n\r\n  onSubmit(quote: any) {\r\n    // this._toaster.success('Quote Created');\r\n    if(this.type == 'COPY') this._location.back();\r\n    this._router.navigate(['quote', quote.sgid],{state:{initDialog:true}});\r\n  }\r\n\r\n  onCancel() {\r\n    // this._location.back();\r\n  }\r\n}\r\n","<!-- <app-create-form-header\r\n  [iconPath]=\"'assets/order/images/order-icon.png'\"\r\n  text=\"QUOTE\"\r\n  [subTitle]=\"subTitle\"\r\n>\r\n  <span subtitle>\r\n    <b *ngIf=\"customerName\">{{ \" \" + customerName }}</b>\r\n  </span>\r\n</app-create-form-header> -->\r\n<lib-quote-create-form\r\n  class=\"table\"\r\n  [type]=\"type\"\r\n  [submitButtonText]=\"submitButtonText\"\r\n  #quoteFormComp\r\n  (onSubmit)=\"onSubmit($event)\"\r\n  (onCancel)=\"onCancel()\"\r\n></lib-quote-create-form>\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { ToasterService, UserService } from 'projects/core/src/public-api';\r\nimport { QuoteService } from './../../../quote.service';\r\nimport { AddFPComponent } from '../add-fp/add-fp.component';\r\nimport { AddProductService } from '../addproduct/add-product.service';\r\n\r\n@Component({\r\n  selector: 'lib-select-fp',\r\n  templateUrl: './select-fp.component.html',\r\n  styleUrls: ['./select-fp.component.scss']\r\n})\r\nexport class SelectFpComponent implements OnInit {\r\n  fplist : any = [];\r\n  fpuList: any = [];\r\n  selectedFpid: any = '';\r\n  isSelectedAll: any = true;\r\n  constructor( \r\n    private _dialog: MatDialog,\r\n    @Inject(MAT_DIALOG_DATA) public dialogData: any,\r\n    private _user: UserService,\r\n    private _quoteService: QuoteService,\r\n    private _toaster: ToasterService,\r\n    private _dialogRef: MatDialogRef<SelectFpComponent>,\r\n    private _addProductService: AddProductService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getFpList()\r\n  }\r\n\r\n  getFpList() {\r\n    this._addProductService.getFPList(this.dialogData.qid).subscribe(\r\n      (data) => {\r\n        this.fplist = data.result;\r\n      },\r\n      (error) => {\r\n        this._toaster.error(error);\r\n      }\r\n    );\r\n  }\r\n  onCancel(){\r\n    this._dialogRef.close(0);\r\n  }\r\n  getFpu(ev: any){\r\n    this.selectedFpid = ev.target.value;\r\n    let obj= {\r\n      quote_id: this.dialogData.qid,\r\n      floorplan_id: this.selectedFpid\r\n    };\r\n    this._quoteService.getFpus(obj).subscribe((resp:any ) => {\r\n      if (resp.statusCode == 200) {\r\n        this.fpuList = resp.result;\r\n        this.fpuList.forEach((elem: any, index: any) => {\r\n          elem.isActive = true;\r\n        });\r\n        // this._toaster.success(resp.message);\r\n       // this._dialogRef.close(1);\r\n      } else {\r\n       // this._toaster.success(resp.message);\r\n       // this._dialogRef.close(0);\r\n      }\r\n    });\r\n\r\n  }\r\n  selectUnitsForPlans(unit: any) {\r\n    if (unit.isActive) {\r\n      let checker = 0;\r\n      this.fpuList.forEach((elem: any) => {\r\n        if (elem.isActive) {\r\n          checker++;\r\n        }\r\n      });\r\n      if (checker > 1) {\r\n        unit.isActive = false;\r\n      } else {\r\n      }\r\n\r\n    } else {\r\n      unit.isActive = true;\r\n    }\r\n  }\r\n  isAllUnit(bool: any) {\r\n    if (bool) {\r\n      this.isSelectedAll = true;\r\n      this.fpuList.forEach((elem: any) => {\r\n        elem.isActive = true;\r\n\r\n      });\r\n    } else {\r\n      this.isSelectedAll = false;\r\n    }\r\n  }\r\n  onCreateNewFP(){\r\n    this._dialog\r\n    .open(AddFPComponent, {\r\n      height: '70%',\r\n      width: '70%',\r\n      data: {\r\n        isDialog: true,\r\n        quoteId: this.dialogData.qid,\r\n      },\r\n    })\r\n    .afterClosed()\r\n    .subscribe((data) => {\r\n      console.log(data);\r\n      if(data && data.event) {\r\n        this.getFpList()\r\n      }\r\n      \r\n    });\r\n\r\n  }\r\n  onSubmit(){\r\n    let unitList: any = [];\r\n    if(this.isSelectedAll == true){\r\n      this.fpuList.forEach((element: any) => {\r\n        unitList.push(element.sgid);\r\n      });\r\n    } else {\r\n      this.fpuList.forEach((element: any) => {\r\n        if(element.isActive == false) unitList.push(element.sgid);\r\n      });\r\n    }\r\n    if(this.dialogData.product_id){\r\n      let obj = {\r\n        quote_id: this.dialogData.qid,\r\n        floorplan_id: this.selectedFpid,\r\n        user_id: this._user.getUser().getId(),\r\n        units : unitList,\r\n        product_id: this.dialogData.product_id,\r\n        sku:this.dialogData.sku,\r\n        quantity: this.dialogData.quantity,\r\n        button_type: this.dialogData.button_type,\r\n        month: this.dialogData.month,\r\n        warehouse_id: this.dialogData.warehouse_id,\r\n        source: this.dialogData.source\r\n      };\r\n      this._quoteService.addFPQuote(obj).subscribe((resp: any) => {\r\n        if (resp.statusCode == 200) {\r\n          this._toaster.success(resp.result);\r\n          this._dialogRef.close({ event : \"success\"});\r\n        } else {\r\n          this._toaster.success(resp.result);\r\n          this._dialogRef.close(0);\r\n        }\r\n      });\r\n    } else {\r\n\r\n      let obj = {\r\n        quote_id: this.dialogData.qid,\r\n        moodboard_id: this.dialogData.mid,\r\n        user_id: this._user.getUser().getId(),\r\n        floorplan_id : this.selectedFpid,\r\n        units : unitList,\r\n        source:this.dialogData.source\r\n        };\r\n        this._quoteService.addFPMB(obj).subscribe((resp: any) => {\r\n          if (resp.statusCode == 200) {\r\n            this._toaster.success(resp.result);\r\n            this._dialogRef.close(1);\r\n          } else {\r\n            this._toaster.success(resp.result);\r\n            this._dialogRef.close(0);\r\n          }\r\n        });    \r\n      }  \r\n   }\r\n}\r\n","<div fxLayout=\"row\" style=\"width: 100%;cursor: pointer;\" fxLayoutAlign=\"space-between start\" >\r\n    <div style=\"margin-bottom: 2rem\"> Add/Select Floor Plan </div>\r\n    <i class=\"fa fa-times\" mat-dialog-close aria-hidden=\"true\"></i>\r\n</div>\r\n<div style=\"margin-bottom: 2rem\" mat-dialog-content>\r\n  <div   fxLayout=\"column\" style=\"width: 100%; \" fxLayoutAlign=\"space-between start\" >\r\n    <div   fxLayout=\"row\"\r\n      style=\"width: 100%; margin: 2%; \"\r\n      fxLayoutAlign=\"center\"\r\n      class=\"txt\"\r\n    >\r\n      Add this moodboard to an existing floor plan or create a new floor plan.\r\n    </div>\r\n    <div fxLayout=\"row\"\r\n    style=\"width: 100%; margin: 2%;\"\r\n    fxLayoutAlign=\"center\">\r\n      <div fxFlex=\"100\" fxLayout=\"column\" fxLayoutAlign=\" center\">\r\n        <div fxFlex=\"100\" fxLayout=\"row\" fxLayoutAlign=\"center\" style=\"padding: 0px; margin: 0 0 0 -15px;\">\r\n          <a mat-button style=\"padding: 0px 10px 0px 9px; margin: -4px -5px -5px 0px;\" (click)=\"onCreateNewFP()\" class=\"add\">\r\n            <img src=\"assets/quote/images/SVG-Icons-06.svg\">\r\n          </a>\r\n            <select style=\"width: 100%;\" (change)=\"getFpu($event)\">\r\n              <option [value]=''>Choose existing floor plan</option>\r\n              <option *ngFor=\"let fp of fplist\" [value]=\"fp.sgid\">\r\n                {{ fp.floorname }}\r\n              </option>\r\n            </select>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div *ngIf=\"fpuList.length <= 0\"   fxLayout=\"row\"\r\n      style=\"width: 98%; background: #F4F4F4;padding: 44px; margin: 2%;\"\r\n      fxLayoutAlign=\"space-between start\"\r\n      class=\"nofptxt\"\r\n      >Select a floor plan to view the units\r\n    </div>  \r\n    <div *ngIf=\"fpuList.length > 0\"   fxLayout=\"column\"\r\n      style=\"width: 98%; background: #F4F4F4; margin: 2%;\"\r\n      fxLayoutAlign=\"space-between start\"\r\n      class=\"nofptxt d-flex  justify-content-center p-2 my-3\"\r\n      >\r\n      <div fxLayout=\"row\">\r\n        <label class=\"form-check-label\" style=\"padding: 10px;\"> \r\n          <input type=\"radio\" class=\"form-check-input\" (click)='isAllUnit(1)' [checked]='true' name=\"optradio\">All\r\n          Units\r\n        </label>\r\n        <label style=\"padding: 10px;\" class=\"form-check-label\">\r\n          <input type=\"radio\" class=\"form-check-input\" (click)='isAllUnit(0)' name=\"optradio\">Selected Unit\r\n        </label>\r\n      </div>\r\n      <div fxLayout=\"row wrap\"\r\n        style=\"width: 98%; background: #F4F4F4; margin: 2%;\"\r\n        fxLayoutAlign=\"space-between start\"\r\n        class=\"nofptxt d-flex  justify-content-center p-2 my-3\"\r\n        >\r\n      <div *ngFor='let unit of fpuList' [ngClass]=\"{'allow-click': isSelectedAll ? true : false}\"\r\n      (click)='selectUnitsForPlans(unit)' class=\"unit-box  add-unit-mb\">\r\n        <div>{{unit.unit}}</div> \r\n        <div>unit</div>\r\n      <span aria-hidden=\"true\" [ngClass]=\"{'fa-check':(unit.isActive) ? true : false}\"\r\n        class=\"px-2 pb-1 cross-close fa \" style=\"padding: 4px; color: green;\"></span></div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<div mat-dialog-actions fxLayoutAlign=\"center\">\r\n  <button (click)=\"onSubmit()\" class=\"btn-add\" mat-button color=\"accent\">ADD</button>\r\n  <button mat-button (click)=\"onCancel();\" class=\"btn-cancel\"color=\"primary\">CANCEL</button>\r\n</div>\r\n  ","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { ToasterService, UserService } from 'projects/core/src/public-api';\r\nimport { QuoteService } from '../../../quote.service';\r\nimport { AddFPUComponent } from '../add-fpu/add-fpu.component';\r\nimport { SelectFpComponent } from '../select-fp/select-fp.component';\r\nimport { SelectFpuComponent } from '../select-fpu/select-fpu.component';\r\n\r\n@Component({\r\n  selector: 'lib-addproduct',\r\n  templateUrl: './addproduct.component.html',\r\n  styleUrls: ['./addproduct.component.scss']\r\n})\r\nexport class AddproductComponent implements OnInit {\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public dialogData: any,\r\n    public _dialogRef: MatDialogRef<AddproductComponent>,\r\n    private _dialog: MatDialog,\r\n    private _user: UserService,\r\n    private _quoteService: QuoteService,\r\n    private _toaster: ToasterService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n  add(type: any){\r\n    if(type == '') {\r\n      if(this.dialogData.product_id) {\r\n        let obj = {\r\n          quote_id: this.dialogData.quoteId,\r\n          product_id: this.dialogData.product_id,\r\n          sku:this.dialogData.sku,\r\n          quantity: this.dialogData.quantity,\r\n          button_type: this.dialogData.button_type,\r\n          month: this.dialogData.months,\r\n          warehouse_id: this.dialogData.warehouse_id,\r\n          user_id: this.dialogData.user_id,\r\n          floorplan_id:null,\r\n          units:null,\r\n          moodboard_id:null,\r\n        };\r\n        this._quoteService.addProductQuote(obj).subscribe((resp: any) => {\r\n          if (resp.statusCode == 200) {\r\n            this._toaster.success(resp.message);\r\n            this._dialogRef.close(1);\r\n          } else {\r\n            this._toaster.success(resp.message);\r\n            this._dialogRef.close(0);\r\n          }\r\n        });  \r\n\r\n       } else {\r\n        let obj =  {\r\n          quote_id :this.dialogData.quoteId,\r\n          moodboard_id: this.dialogData.mbid,\r\n          user_id: this._user.getUser().getId()\r\n          };\r\n          this._quoteService.addMBQuote(obj).subscribe((resp: any) => {\r\n            if (resp.statusCode == 200) {\r\n              this._toaster.success(resp.message);\r\n              this._dialogRef.close(1);\r\n            } else {\r\n              this._toaster.success(resp.message);\r\n              this._dialogRef.close(0);\r\n            }\r\n          });  \r\n      }\r\n     \r\n    }\r\n    if(type == 'fp') {\r\n      this._dialog\r\n      .open(SelectFpComponent, {\r\n        height: '70%',\r\n        width: '70%',\r\n        data: {\r\n          isDialog: true,\r\n          qid: this.dialogData.quoteId,\r\n          mid: this.dialogData.mbid,\r\n          product_id: this.dialogData.product_id,\r\n          sku:this.dialogData.sku,\r\n          quantity: this.dialogData.quantity,\r\n          button_type: this.dialogData.button_type,\r\n          month: this.dialogData.months,\r\n          warehouse_id: this.dialogData.warehouse_id,\r\n          user_id: this.dialogData.user_id,\r\n        }\r\n\r\n      })\r\n      .afterClosed()\r\n      .subscribe((data) => {\r\n        console.log(data);\r\n      });\r\n    }\r\n    if(type == 'fpu') {\r\n      this._dialog\r\n      .open(SelectFpuComponent, {\r\n        height: '80%',\r\n        width: '50%',\r\n        data: {\r\n          isDialog: true,\r\n          qid: this.dialogData.quoteId,\r\n          mid: this.dialogData.mbid,\r\n          product_id: this.dialogData.product_id,\r\n          sku:this.dialogData.sku,\r\n          quantity: this.dialogData.quantity,\r\n          button_type: this.dialogData.button_type,\r\n          month: this.dialogData.months,\r\n          warehouse_id: this.dialogData.warehouse_id,\r\n          user_id: this.dialogData.user_id,\r\n\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((data) => {\r\n        console.log(data);\r\n      });\r\n    }\r\n    this._dialogRef.close();\r\n  }\r\n\r\n}\r\n","<div\r\n  fxLayout=\"row\"\r\n  style=\"width: 100%; cursor: pointer\"\r\n  fxLayoutAlign=\"space-between start\"\r\n>\r\n  <span></span>\r\n  <div class=\"h1\" style=\"margin-bottom: 1rem\">\r\n    Where would you like to add this Product?\r\n  </div>\r\n  <i class=\"fa fa-times\" mat-dialog-close aria-hidden=\"true\"></i>\r\n</div>\r\n<div style=\"margin-bottom: 1rem\" mat-dialog-content>\r\n  <div\r\n    fxLayout=\"row\"\r\n    style=\"width: 98%; background: #f4f4f4; padding: 22px; margin: 2%\"\r\n    fxLayoutAlign=\"space-between start\"\r\n  >\r\n    <div\r\n      fxLayout=\"column\"\r\n      style=\"width: 100%\"\r\n      fxLayoutAlign=\"space-between start\"\r\n    >\r\n      <span class=\"titeltxt\"> Add to Default Unit </span>\r\n    </div>\r\n    <button mat-flat-button color=\"accent\" (click)=\"add('')\" class=\"btn-txt\">\r\n      + ADD\r\n    </button>\r\n  </div>\r\n  <div\r\n    fxLayout=\"row\"\r\n    style=\"width: 98%; background: #f4f4f4; padding: 22px; margin: 2%\"\r\n    fxLayoutAlign=\"space-between start\"\r\n  >\r\n    <div\r\n      fxLayout=\"column\"\r\n      style=\"width: 100%\"\r\n      fxLayoutAlign=\"space-between start\"\r\n    >\r\n      <span class=\"titeltxt\"> Add to a Floor Plan </span>\r\n    </div>\r\n    <button mat-flat-button class=\"btn-txt\" (click)=\"add('fp')\" color=\"accent\">\r\n      + ADD\r\n    </button>\r\n  </div>\r\n  <div\r\n    fxLayout=\"row\"\r\n    style=\"width: 98%; background: #f4f4f4; padding: 22px; margin: 2%\"\r\n    fxLayoutAlign=\"space-between start\"\r\n  >\r\n    <div\r\n      fxLayout=\"column\"\r\n      style=\"width: 100%\"\r\n      fxLayoutAlign=\"space-between start\"\r\n    >\r\n      <span class=\"titeltxt\"> Add to Unit(s) </span>\r\n    </div>\r\n    <button mat-flat-button class=\"btn-txt\" (click)=\"add('fpu')\" color=\"accent\">\r\n      + ADD\r\n    </button>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { ActivatedRoute, Params, Router } from '@angular/router';\r\nimport {\r\n  GridOptions,\r\n  GridReadyEvent,\r\n  ICellRendererParams,\r\n} from 'ag-grid-community';\r\nimport {\r\n  CoreService,\r\n  CounterComponent,\r\n  DialogService,\r\n  ImageRendererComponent,\r\n  ToasterService,\r\n  UserService,\r\n} from 'projects/core/src/public-api';\r\nimport { ItemTypeComponent } from '../../common/components/item-type/item-type.component';\r\nimport { TotalCellRendererComponent } from '../../common/components/total-cell-renderer/total-cell-renderer.component';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { FloorPlanDetailsService } from '../../common/components/floor-plan-details/floor-plan-details.service';\r\nimport { MoodboardComponent } from '../../common/components/moodboard/moodboard.component';\r\nimport { QuoteHeaderService } from '../../common/components/quote-header/quote-header.service';\r\nimport { Location } from '@angular/common';\r\nimport { AddFPComponent } from '../../common/components/add-fp/add-fp.component';\r\nimport { QuoteService } from '../../quote.service';\r\n\r\n@Component({\r\n  selector: 'app-floor-plan-unit',\r\n  templateUrl: './floor-plan-unit.component.html',\r\n  styleUrls: ['./floor-plan-unit.component.scss'],\r\n})\r\nexport class FloorPlanUnitComponent implements OnInit {\r\n  page: 'ORDER' | 'QUOTE' = 'QUOTE';\r\n  quoteId = '';\r\n  unit_id = '';\r\n  unit = '';\r\n  unitInfo: any = '';\r\n  selectedFpid: any = '';\r\n  fplist: any = [];\r\n  agGrid: GridReadyEvent = {} as GridReadyEvent;\r\n  rowData: Observable<any[]> = new Observable();\r\n  fpDetails: any = {};\r\n  fpId = '';\r\n  moodboardList: Array<any> = [];\r\n  unitName = '';\r\n  hideFloorPlanAssign = false;\r\n\r\n  pinnedBottomRowData = [\r\n    {\r\n      subTotal: 'abc',\r\n      sgid: 'SUB TOTAL ($)',\r\n      is_total: '0',\r\n      isExtraRow: true,\r\n    },\r\n    {\r\n      subTotal: 'abc',\r\n      sgid: 'DELIVERY FEE ($)',\r\n      is_total: '0',\r\n      isExtraRow: true,\r\n    },\r\n    {\r\n      subTotal: 'abc',\r\n      sgid: 'TAXES ($)',\r\n      is_total: '0',\r\n      isExtraRow: true,\r\n      taxPercent :1\r\n    },\r\n    {\r\n      subTotal: 'abc',\r\n      sgid: 'TOTAL ($)',\r\n      is_total: '0',\r\n      isExtraRow: true,\r\n    },\r\n  ];\r\n\r\n  columnDefs = [\r\n    {\r\n      field: 'sgid',\r\n      width: 120,\r\n      headerName: '',\r\n      headerTooltip: '',\r\n      colSpan: (params: any) => (params.data.subTotal === 'abc' ? 10 : 1),\r\n      cellStyle: (params: any) => {\r\n        if (params.data.subTotal === 'abc') {\r\n          return { 'text-align': 'end' };\r\n        }\r\n        return '';\r\n      },\r\n    },\r\n    { field: 'warehouse_name', headerName: 'CITY' },\r\n    { field: 'sku', headerName: 'SKU' },\r\n    {\r\n      headerName: 'IMAGE',\r\n      cellRenderer: 'ImageRendererComponent',\r\n      field: 'product_images.small',\r\n      cellStyle: {\r\n        padding: '0.3rem',\r\n      },\r\n      // valueGetter: async (params:ICellRendererParams)=>{\r\n      // let x = await this._core.getBase64Image(params?.data?.product_images?.small).toPromise();\r\n      // return 'data:image/jpeg;base64' + x?.imageurl;\r\n      // }\r\n    },\r\n    {\r\n      headerName: 'PRODUCT NAME',\r\n      field: 'name',\r\n      width: '250px',\r\n    },\r\n    {\r\n      headerName: 'TYPE',\r\n      field: 'button_type',\r\n      cellRenderer: 'ItemTypeCellRenderer',\r\n      valueGetter: (params: ICellRendererParams) => {\r\n        return params.data.button_type === 0 ? 'Rent' : 'Buy';\r\n      },\r\n    },\r\n    {\r\n      headerName: 'QUANTITY',\r\n      field: 'is_qty',\r\n      cellRenderer: 'CounterCellRenderer',\r\n    },\r\n    {\r\n      headerName: 'BUY PRICE ($)',\r\n      field: 'buy_price',\r\n      valueGetter: (params: ICellRendererParams) => {\r\n        return params.data.button_type === 1 ? params.data.buy_price : 'NA';\r\n      },\r\n    },\r\n    {\r\n      headerName: 'RENTAL PRICE ($) /MONTH',\r\n      field: 'price',\r\n      cellRenderer: (params: ICellRendererParams) => {\r\n        return params.data.button_type === 0 ? params.value : 'NA';\r\n      },\r\n    },\r\n    // { headerName: 'DISCOUNT ($)', field: 'discount' },\r\n\r\n    {\r\n      headerName: 'MONTHS',\r\n      field: 'months',\r\n    },\r\n    {\r\n      headerName: 'TOTAL ($)',\r\n      field: 'is_total',\r\n      cellRenderer: 'TotalCellRendererComponent',\r\n    },\r\n  ];\r\n\r\n  frameworkComponents = {\r\n    ImageRendererComponent: ImageRendererComponent,\r\n    TotalCellRendererComponent: TotalCellRendererComponent,\r\n    ItemTypeCellRenderer: ItemTypeComponent,\r\n    CounterCellRenderer: CounterComponent,\r\n  };\r\n\r\n  defaultColDef = {\r\n    wrapText: true,\r\n    cellClass: 'grid-cell',\r\n    cellStyle: {\r\n      'line-height': 'normal',\r\n      'align-items': 'center',\r\n      'justify-content': 'center',\r\n      display: 'flex',\r\n      padding: '0 0.5rem',\r\n    },\r\n  };\r\n\r\n  gridOptions: GridOptions = {\r\n    onGridReady: (api: GridReadyEvent) => {\r\n      this.agGrid = api;\r\n      this.onGridReady(api);\r\n    },\r\n    context: this,\r\n    rowHeight: 100,\r\n    headerHeight: 100,\r\n    getRowHeight: (params: any) => {\r\n      return params?.data?.isExtraRow ? 50 : 100;\r\n    },\r\n  };\r\n\r\n  constructor(\r\n    private _quoteHeaderService: QuoteHeaderService,\r\n    private _route: ActivatedRoute,\r\n    private _router: Router,\r\n    private _dialog: MatDialog,\r\n    private _dialog_s: DialogService,\r\n    private _location: Location,\r\n    private _toaster: ToasterService,\r\n    private _fpSevice: FloorPlanDetailsService,\r\n    private _user: UserService,\r\n    private _core: CoreService,\r\n    private _quoteService: QuoteService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    if (this._router.url.indexOf('quote') >= 0) {\r\n      this.page = 'QUOTE';\r\n    } else {\r\n      this.page = 'ORDER';\r\n    }\r\n    this._route.params.subscribe((params: Params) => {\r\n      this.quoteId = params.id;\r\n      this.fpId = params.fpId === 'None' ? null : params.fpId;\r\n      this.unit_id = params.unit_id;\r\n      this.getFloorPlanDetails();\r\n      this.getMoodBoards();\r\n      this.getFPSummary();\r\n      this.getFpList();\r\n      // this.getFloorPlanUnits();\r\n      let x = new this.frameworkComponents.CounterCellRenderer(\r\n        this._user,\r\n        this._core\r\n      );\r\n      x.counterChange.subscribe((resp) => console.log('counter changed'));\r\n    });\r\n  }\r\n\r\n  counterFComponentUpdate(params: ICellRendererParams) {\r\n    let data = params.data;\r\n    let obj = [\r\n      {\r\n        items: [\r\n          {\r\n            months: data.months,\r\n            qty: data.is_qty,\r\n            price: data.price,\r\n            buy_price: data.buy_price,\r\n            sale_price: data.is_sale_price,\r\n            total_price: data.is_total,\r\n            discount: data.discount,\r\n            b2b_discount: data.b2b_discount,\r\n            sgid: data.id,\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        unit: [\r\n          {\r\n            sgid: this.unitInfo.sgid,\r\n            name: this.unitInfo.name,\r\n            pickup_fee: this.unitInfo.pickup_fee,\r\n            delivery_fee: this.unitInfo.delivery_fee,\r\n          },\r\n        ],\r\n      },\r\n      { quote_id: this.quoteId },\r\n    ];\r\n\r\n    this._quoteService.updateFloorPlanUnitProduct(obj).subscribe((resp) => {\r\n      if (resp.statusCode == 200) {\r\n        this._toaster.success(resp.result);\r\n        this.onGridReady(this.agGrid);\r\n      } else {\r\n        this._toaster.error(resp.result);\r\n      }\r\n    });\r\n  }\r\n  getFpList() {\r\n    this._fpSevice.getFPList(this.quoteId).subscribe(\r\n      (data) => {\r\n        this.fplist = data.result;\r\n      },\r\n      (error) => {\r\n        this._toaster.error(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  getSelectedFpu(ev: any) {\r\n    this.selectedFpid = ev.target.value;\r\n  }\r\n\r\n  removeMoodboardFromFP(moodboard: any) {\r\n    this._dialog_s\r\n      .openConformationDialog({\r\n        title: 'REMOVE MOODBOARD FROM FLOOR PLAN',\r\n        suTitle: 'Are you sure you want to delete?',\r\n        width: '50%',\r\n      })\r\n      .afterClosed()\r\n      .subscribe((data: any) => {\r\n        if (data) {\r\n          this._fpSevice\r\n            .removeMoodboardFromFPUnits(\r\n              this.quoteId,\r\n              this.fpId,\r\n              moodboard.moodboard_id,\r\n              this.unit_id\r\n            )\r\n            .subscribe((resp) => {\r\n              if (resp.statusCode === 200) {\r\n                this._toaster.success(resp.result);\r\n                this.refresh();\r\n              } else {\r\n                this._toaster.success(resp.result);\r\n              }\r\n            });\r\n        }\r\n      });\r\n  }\r\n\r\n  onCreateNewFP(): any {\r\n    this._dialog\r\n      .open(AddFPComponent, {\r\n        height: '70%',\r\n        width: '70%',\r\n        data: {\r\n          isDialog: true,\r\n          quoteId: this.quoteId,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((data) => {\r\n        console.log(data);\r\n        if (data && data.event) {\r\n          this.getFpList();\r\n        }\r\n      });\r\n  }\r\n\r\n  getFPSummary() {\r\n    this._fpSevice\r\n      .getFPSummary(this.quoteId, this.fpId, this.unit_id)\r\n      .subscribe((resp) => {\r\n        this.unitName = resp?.unit?.name;\r\n        this.unit = resp?.unit?.unit;\r\n        this.unitInfo = resp?.unit;\r\n        this.selectedFpid = resp?.unit?.floorplan_id;\r\n        this.selectedFpid = this.selectedFpid ? this.selectedFpid : 'None';\r\n        if (this.selectedFpid !== 'None') {\r\n          this.hideFloorPlanAssign = true;\r\n        }\r\n      });\r\n  }\r\n\r\n  onGridReady(evt: GridReadyEvent) {\r\n    this.agGrid = evt;\r\n    evt.api.sizeColumnsToFit();\r\n    this.rowData = this.getUnitQuoteSummary();\r\n  }\r\n\r\n  getUnitQuoteSummary<T>(): Observable<T> {\r\n    return this._quoteHeaderService\r\n      .getUnitQuoteSummary<T>(this.unit_id, this.fpId, this.quoteId)\r\n      .pipe(\r\n        map((x: any) => {\r\n          if (x.floorplan) {\r\n            this.updateBottomData(x.floorplan);\r\n          } else {\r\n            this.updateBottomData({\r\n              delivery_fee: 0,\r\n              tax_percentage: 0,\r\n              tax_amount: 0,\r\n            });\r\n          }\r\n          this.agGrid.api.redrawRows();\r\n          return x.result.map((item: any, index: number) => {\r\n            item.id= item.sgid;\r\n            item.sgid = index + 1;\r\n            item.userid = x?.floorplan?.userid;\r\n            item.order_status = this.page == 'ORDER';\r\n            return item;\r\n          });\r\n        })\r\n      );\r\n  }\r\n\r\n  updateBottomData(data: any) {\r\n    this.pinnedBottomRowData[1].is_total = data?.delivery_fee;\r\n    this.pinnedBottomRowData[2].sgid =\r\n      'TAXES (' + data?.tax_percentage + '%) ($)';\r\n    this.pinnedBottomRowData[2].is_total = data?.tax_amount;\r\n    this.pinnedBottomRowData[3].is_total = data?.tax_amount;\r\n    this.pinnedBottomRowData[2].taxPercent = data?.tax_percentage;\r\n  }\r\n\r\n  back() {\r\n    let route = this.page == 'ORDER' ? 'order' : 'quote';\r\n    this._router.navigate([route, this.quoteId]);\r\n  }\r\n\r\n  getFloorPlanDetails() {\r\n    this._fpSevice\r\n      .getFloorPlanDetails(this.quoteId, this.fpId)\r\n      .subscribe((resp) => {\r\n        if (resp.statusCode === 200) {\r\n          this.fpDetails = resp?.result[0];\r\n          // this.selectedFpid = resp?.result[0].sgid;\r\n        } else {\r\n          this.fpDetails = {};\r\n        }\r\n      });\r\n  }\r\n\r\n  addFloorPlan() {\r\n    if (this.selectedFpid && this.selectedFpid !== 'None') {\r\n      this._fpSevice\r\n        .addFloorPlanUnit(\r\n          this.unit,\r\n          this.selectedFpid,\r\n          this.quoteId,\r\n          this.unit_id\r\n        )\r\n        .subscribe((resp: any) => {\r\n          this._toaster.success(resp.message);\r\n          this._router.navigate([\r\n            'quote',\r\n            this.quoteId,\r\n            'floor-plan-unit',\r\n            this.selectedFpid,\r\n            'unit',\r\n            this.unit_id,\r\n          ]);\r\n        });\r\n    }\r\n  }\r\n\r\n  getMoodBoards() {\r\n    this._fpSevice\r\n      .getUnitMoodBoards(this.quoteId, this.fpId, this.unit_id)\r\n      .subscribe((data) => {\r\n        if (data.statusCode === 200) {\r\n          this.moodboardList = data.moodboard_list;\r\n        } else {\r\n          this.moodboardList = [];\r\n        }\r\n      });\r\n  }\r\n\r\n  openAddMoodboardDialog() {\r\n    this._dialog\r\n      .open(MoodboardComponent, {\r\n        width: '50%',\r\n        data: { quoteId: this.quoteId, fpId: this.fpId, unit_id: this.unit_id },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((data) => {\r\n        if (data) {\r\n          this.refresh();\r\n        }\r\n      });\r\n  }\r\n\r\n  changeUnitName() {\r\n    this._fpSevice\r\n      .changeUnitName(this.quoteId, this.unit_id, this.unitName)\r\n      .subscribe((data) => {\r\n        if (data.statusCode === 200) {\r\n          this._toaster.success(data.result);\r\n          this.refresh();\r\n        } else {\r\n          this._toaster.success(data.result);\r\n        }\r\n      });\r\n  }\r\n\r\n  refresh() {\r\n    this.getMoodBoards();\r\n    this.getFPSummary();\r\n    this.onGridReady(this.agGrid);\r\n    // this.getFloorPlanUnits();\r\n    // this.getMoodboardWithUnits();\r\n  }\r\n}\r\n","<div class=\"floor-plan\" fxLayout=\"column\" fxLayoutGap=\"1.5rem\">\r\n  <div class=\"floor-plan-col\" fxLayout=\"column\" fxLayoutGap=\"1rem\">\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"1rem\">\r\n      <mat-icon class=\"back pointer\"\r\n        ><span (click)=\"back()\" class=\"material-icons\">\r\n          arrow_back\r\n        </span></mat-icon\r\n      >\r\n      <span>Back to {{page=='QUOTE'?'Quote':'Order'}}/ {{ fpDetails?.floorname }}</span>\r\n    </div>\r\n    <mat-divider></mat-divider>\r\n\r\n    <div\r\n      class=\"floor-plan__container--input\"\r\n      fxLayout=\"row\"\r\n      fxLayoutAlign=\"start center\"\r\n      fxLayoutGap=\"2rem\"\r\n    >\r\n      <mat-label class=\"h3 form-label-width\">Unit Name:</mat-label>\r\n      <mat-form-field appearance=\"outline\" class=\"mt-1\" style=\"width: 250px\">\r\n        <input [(ngModel)]=\"unitName\" matInput />\r\n      </mat-form-field>\r\n      <button\r\n      *ngIf=\"page=='QUOTE'\"\r\n        class=\"round\"\r\n        mat-flat-button\r\n        color=\"primary\"\r\n        (click)=\"changeUnitName()\"\r\n      >\r\n        Change Unit Name\r\n      </button>\r\n    </div>\r\n\r\n    <div\r\n      class=\"floor-plan__container--input\"\r\n      fxLayout=\"row\"\r\n      fxLayoutAlign=\"start center\"\r\n      fxLayoutGap=\"2rem\"\r\n      *ngIf=\"!hideFloorPlanAssign\"\r\n    >\r\n      <mat-label class=\"h3 form-label-width\"\r\n        >Add/Select a Floor Plan:</mat-label\r\n      >\r\n      <div class=\"add-to-md-button\">\r\n        <img src=\"assets/shop/addButton.svg\" class=\"pointer\" (click)=\"onCreateNewFP()\"/>\r\n      </div>\r\n      <select class=\"grey\" style=\"width: 190px\" [(ngModel)]=\"selectedFpid\" (change)=\"getSelectedFpu($event)\">\r\n        <option value=\"None\">None Selected</option>\r\n        <option *ngFor=\"let fp of fplist\" [value]=\"fp.sgid\">\r\n          {{ fp.floorname }}\r\n        </option>\r\n      </select>\r\n      <button\r\n        class=\"round\"\r\n        mat-flat-button\r\n        color=\"primary\"\r\n        (click)=\"addFloorPlan()\"\r\n        style=\"width: 170px\"\r\n      >\r\n        Add\r\n      </button>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"floor-plan-col odd\" fxLayout=\"column\" fxLayoutGap=\"1rem\">\r\n    <div class=\"h2\">ADD/MANAGE MOODBOARDS</div>\r\n    <div\r\n      class=\"floor-plan__container\"\r\n      fxLayout=\"row wrap\"\r\n      fxLayoutAlign=\"start\"\r\n      fxLayoutGap=\"1rem\"\r\n    >\r\n      <div\r\n        fxFlex=\"10\"\r\n        *ngIf=\"page=='QUOTE'\"\r\n        class=\"floor-plan__container--item pointer\"\r\n        fxLayoutAlign=\"center center\"\r\n        fxLayout=\"column\"\r\n        (click)=\"openAddMoodboardDialog()\"\r\n      >\r\n        <mat-icon class=\"icon\" inline=\"true\">add_circle_outline</mat-icon>\r\n      </div>\r\n      <div\r\n        fxFlex=\"10\"\r\n        class=\"floor-plan__container--item\"\r\n        [ngClass]=\"{}\"\r\n        *ngFor=\"let moodboard of moodboardList\"\r\n        fxLayout=\"column\"\r\n      >\r\n      <i\r\n      *ngIf=\"page=='QUOTE'\"\r\n          (click)=\"removeMoodboardFromFP(moodboard)\"\r\n          class=\"fa fa-times icon\"\r\n          aria-hidden=\"true\"\r\n        ></i>\r\n        <img\r\n          height=\"110px\"\r\n          width=\"auto\"\r\n          [src]=\"moodboard?.unitmoodboards?.is_moodboard_images?.small\"\r\n          alt=\"Moodboard\"\r\n        />\r\n        <p>{{ moodboard?.unitmoodboards?.boardname }}</p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div fxLayout=\"column\" fxLayoutAlign=\" stretch\">\r\n    <div\r\n      class=\"floor-plan-summary\"\r\n      fxLayoutGap=\"1rem\"\r\n      fxLayout=\"column\"\r\n      fxLayoutAlign=\"start stretch\"\r\n    >\r\n      <div class=\"h2\">UNIT SUMMARY</div>\r\n      <ag-grid-angular\r\n        [gridOptions]=\"gridOptions\"\r\n        style=\"height: 600px; width: 100%\"\r\n        class=\"ag-theme-alpine quotes-table\"\r\n        [rowData]=\"rowData | async\"\r\n        [frameworkComponents]=\"frameworkComponents\"\r\n        [pinnedBottomRowData]=\"pinnedBottomRowData\"\r\n        [defaultColDef]=\"defaultColDef\"\r\n        [columnDefs]=\"columnDefs\"\r\n      >\r\n      </ag-grid-angular>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { QuoteHeaderComponent } from './components/quote-header/quote-header.component';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { CoreModule } from 'projects/core/src/public-api';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { AgGridModule } from 'ag-grid-angular';\r\nimport { TotalCellRendererComponent } from './components/total-cell-renderer/total-cell-renderer.component';\r\nimport { ItemTypeComponent } from './components/item-type/item-type.component';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { QuoteCreateFormComponent } from './components/quote-create-form/quote-create-form.component';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport {MatTabsModule} from '@angular/material/tabs';\r\nimport {MatCardModule} from '@angular/material/card';\r\n\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport {MatCheckboxModule} from '@angular/material/checkbox';\r\nimport { AddFPComponent } from './components/add-fp/add-fp.component';\r\nimport { AddFPUComponent } from './components/add-fpu/add-fpu.component';\r\nimport { AddproductComponent } from './components/addproduct/addproduct.component';\r\nimport { SelectFpComponent } from './components/select-fp/select-fp.component';\r\nimport { SelectFpuComponent } from './components/select-fpu/select-fpu.component';\r\nimport { AddMoodboardQuoteComponent } from './components/add-moodboard-quote/add-moodboard-quote.component';\r\nimport { FloorPlanDetailsComponent } from './components/floor-plan-details/floor-plan-details.component';\r\nimport { MoodboardComponent } from './components/moodboard/moodboard.component';\r\nimport { DeleteItemComponent } from './components/delete-item/delete-item.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    QuoteHeaderComponent,\r\n    TotalCellRendererComponent,\r\n    ItemTypeComponent,\r\n    QuoteCreateFormComponent,\r\n    AddFPComponent,\r\n    AddFPUComponent,\r\n    AddproductComponent,\r\n    SelectFpComponent,\r\n    SelectFpuComponent,\r\n    AddMoodboardQuoteComponent,\r\n    FloorPlanDetailsComponent,\r\n    MoodboardComponent,\r\n    DeleteItemComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    MatIconModule,\r\n    MatTabsModule,\r\n    MatCardModule,\r\n    MatButtonModule,\r\n    CoreModule,\r\n    FlexLayoutModule,\r\n    AgGridModule,\r\n    MatInputModule,\r\n    MatFormFieldModule,\r\n    MatDialogModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatSelectModule,\r\n    MatTabsModule,\r\n    MatDividerModule,\r\n    MatCheckboxModule\r\n  ],\r\n  exports: [\r\n    QuoteHeaderComponent,\r\n    QuoteCreateFormComponent,\r\n    ItemTypeComponent,\r\n    TotalCellRendererComponent,\r\n    DeleteItemComponent,\r\n    MoodboardComponent\r\n  ],\r\n})\r\nexport class QuoteCommonModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { EnvironmentService } from 'projects/core/src/lib/services/environment.service';\r\nimport { HttpService } from 'projects/core/src/public-api';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class QuoteDetailService {\r\n  constructor(private _http: HttpService, private _env: EnvironmentService) {}\r\n\r\n  updateQuote(json: Array<any>): Observable<any> {\r\n    return this._http.sendPOSTRequest(\r\n      this._env.getEndPoint() + 'save/quote/items',\r\n      JSON.stringify(json)\r\n    );\r\n  }\r\n\r\n  createOrder(params: any) {\r\n    return this._http.sendPOSTRequest(\r\n      this._env.getEndPoint() + 'create/order',\r\n      JSON.stringify(params)\r\n    );\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  EventEmitter,\r\n  Inject,\r\n  Input,\r\n  OnInit,\r\n  Output,\r\n} from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ToasterService } from 'projects/core/src/lib/services/toaster.service';\r\nimport { CoreService, UserService } from 'projects/core/src/public-api';\r\nimport { Location } from '@angular/common';\r\nimport { QuoteCreateFormService } from './quote-create-form.service';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { QuoteService } from '../../../quote.service';\r\n\r\nexport type QuoteFormType = 'CREATE' | 'EDIT' | 'COPY';\r\n@Component({\r\n  selector: 'lib-quote-create-form',\r\n  templateUrl: './quote-create-form.component.html',\r\n  styleUrls: ['./quote-create-form.component.scss'],\r\n})\r\nexport class QuoteCreateFormComponent implements OnInit {\r\n  @Input() quoteNumber: string = '';\r\n  @Input() phone: string = '';\r\n  @Input() customerName = '';\r\n  @Input() address = '';\r\n  @Input() email = '';\r\n  @Input() stateId: number = NaN;\r\n  @Input() companyName = '';\r\n  @Input() companyId = '';\r\n  @Input() city = '';\r\n  @Input() projectName = '';\r\n  @Input() projectId = '';\r\n  @Input() zipCode = '';\r\n  @Input() submitButtonText = 'CREATE';\r\n  @Output() onCancel = new EventEmitter();\r\n  @Output() onSubmit = new EventEmitter();\r\n  @Input() type: QuoteFormType = 'CREATE';\r\n  stateList: Array<any> = ['A', 'B'];\r\n  showPDropdown: any = false;\r\n  showDropdown: any = false;\r\n  quoteFromGroup: FormGroup = new FormGroup({});\r\n  dCompanyList: any = [];\r\n  companyList: any = [];\r\n  projectList: any = [];\r\n  selectedCompany: any = '';\r\n  selectedProject: any = '';\r\n  constructor(\r\n    private _coreService: CoreService,\r\n    private _router: Router,\r\n    private _toaster: ToasterService,\r\n    private _location: Location,\r\n    private _fromService: QuoteCreateFormService,\r\n    @Inject(MAT_DIALOG_DATA) public dialogData: any,\r\n    public _dialogRef: MatDialogRef<QuoteCreateFormComponent>,\r\n    public _user: UserService,\r\n    private _quoteService: QuoteService\r\n  ) {\r\n    let stateObject = _router.getCurrentNavigation()?.extras.state;\r\n    this.quoteNumber = stateObject?.quoteNumber;\r\n    this.phone = stateObject?.phone;\r\n    this.customerName = stateObject?.customerName;\r\n    this.address = stateObject?.address;\r\n    this.email = stateObject?.email;\r\n    this.stateId = stateObject?.state;\r\n    this.companyName = stateObject?.companyName;\r\n    this.city = stateObject?.city;\r\n    this.projectName = stateObject?.projectName;\r\n    this.zipCode = stateObject?.zipCode;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if (this.quoteNumber) {\r\n      this.quoteFromGroup.addControl(\r\n        'quote_id',\r\n        new FormControl(this.quoteNumber, Validators.required)\r\n      );\r\n    }\r\n\r\n    this.quoteFromGroup.addControl(\r\n      'contact_no',\r\n      new FormControl(this.phone, [\r\n        Validators.required,\r\n        Validators.pattern(\r\n          '^(1s?)?((([0-9]{3}))|[0-9]{3})[s-]?[\\0-9]{3}[s-]?[0-9]{4}$'\r\n        ),\r\n      ])\r\n    );\r\n    this.quoteFromGroup.addControl(\r\n      'name',\r\n      new FormControl(this.customerName, Validators.required)\r\n    );\r\n    this.quoteFromGroup.addControl(\r\n      'address',\r\n      new FormControl(this.address, Validators.required)\r\n    );\r\n    this.quoteFromGroup.addControl(\r\n      'email',\r\n      new FormControl(this.email, [\r\n        Validators.required,\r\n        Validators.pattern('^[a-z0-9._%+-]+@[a-z0-9.-]+.[a-z]{2,4}$'),\r\n      ])\r\n    );\r\n    this.quoteFromGroup.addControl(\r\n      'state_id',\r\n      new FormControl(this.stateId, [Validators.required])\r\n    );\r\n    this.quoteFromGroup.addControl(\r\n      'company_id',\r\n      new FormControl(this.companyId)\r\n    );\r\n    this.quoteFromGroup.addControl(\r\n      'companyName',\r\n      new FormControl(this.companyName ?? this._user.getUser().getCompanyName())\r\n    );\r\n    this.quoteFromGroup.addControl(\r\n      'city',\r\n      new FormControl(this.city, Validators.required)\r\n    );\r\n    this.quoteFromGroup.addControl(\r\n      'project_id',\r\n      new FormControl(this.projectId)\r\n    );\r\n    this.quoteFromGroup.addControl(\r\n      'project_name',\r\n      new FormControl(this.projectName)\r\n    );\r\n    this.quoteFromGroup.addControl(\r\n      'zipcode',\r\n      new FormControl(this.zipCode, [\r\n        Validators.required,\r\n        Validators.pattern('^[0-9]{5}(?:-[0-9]{5})?$'),\r\n      ])\r\n    );\r\n    this.getStateList();\r\n    this.getCompanyList();\r\n  }\r\n\r\n  getStateList() {\r\n    this._coreService.getStateList().subscribe((data) => {\r\n      this.stateList = data;\r\n      if (undefined == this.stateId)\r\n        this.quoteFromGroup.controls.state_id.patchValue(\r\n          this.stateList[0].sgid\r\n        );\r\n    });\r\n  }\r\n\r\n  getCompanyList() {\r\n    this._quoteService.getCompanyList().subscribe((data: any) => {\r\n      if (typeof data.result == 'string') {\r\n        this.companyList = [];\r\n        this.selectedCompany = '';\r\n        return;\r\n      }\r\n      // this.companyList = data.result.map((x: any) => x.company);\r\n      this.companyList = data.result;\r\n      let companyId = data.result.find(\r\n        (x: any) => x.company == this.selectedCompany\r\n      )?.sgid;\r\n      if (companyId) {\r\n        this.getProjectList(companyId, null);\r\n      }\r\n    });\r\n  }\r\n  selectProjectList(id: any, event: any) {\r\n    let projectId = event.target.value;\r\n    this.projectName = this.projectList.find(\r\n      (x: any) => x.sgid == projectId\r\n    ).project;\r\n    this.quoteFromGroup.controls.project_name.patchValue(this.projectName);\r\n  }\r\n  getProjectList(companyId: any, event: any) {\r\n    if (event !== null) companyId = event.target.value;\r\n    this._quoteService.getProjectList(companyId).subscribe((data: any) => {\r\n      if (typeof data.result == 'string') {\r\n        this.projectList = [];\r\n        this.selectedProject = '';\r\n      } else {\r\n        this.projectList = data.result; //.map((x: any)=> x.project);\r\n        this.selectedProject = this.projectList[0];\r\n        this.quoteFromGroup.controls.project_name.patchValue(\r\n          this.projectList[0].project\r\n        );\r\n      }\r\n    });\r\n  }\r\n  cancel() {\r\n    this.onCancel.emit();\r\n    if (this.dialogData.isDialog) {\r\n      this._dialogRef.close();\r\n    } else {\r\n      this._location.back();\r\n    }\r\n  }\r\n\r\n  submit() {\r\n    this._fromService.createQuote(this.quoteFromGroup, this.type).subscribe(\r\n      (data) => {\r\n        if (data.statusCode == 200) {\r\n          this.onSubmit.emit(data?.quote);\r\n          if (this.dialogData.isDialog) {\r\n            this._dialogRef.close();\r\n          }\r\n        }\r\n        this._toaster.success(data.message);\r\n      },\r\n      (error) => {\r\n        this._toaster.error(error);\r\n      }\r\n    );\r\n  }\r\n}\r\n","<div\r\n  fxFlex\r\n  class=\"quote-create__form\"\r\n  fxLayout=\"column\"\r\n  fxLayoutAlign=\"center center\"\r\n>\r\n<div  \r\n  fxLayout=\"row\"\r\n  fxFlex=\"100\"\r\n  style=\"width: 100%;\"\r\n  >\r\n<div          \r\n  fxFlex=\"95\"\r\n  fxLayout=\"row\"\r\n  fxLayoutAlign=\"center center\">\r\n<span class=\"quote-create__form--title\"> CREATE A NEW QUOTE</span>\r\n</div>\r\n<div          \r\n  fxFlex=\"5\"\r\n  fxLayout=\"row\"\r\n  fxLayoutAlign=\"row-reverse\">\r\n<span class=\"quote-create__form--title\" (click)=\"cancel();\" *ngIf=\"dialogData.isDialog == true\"> \r\n  <img src=\"assets/quote/images/close-22.svg\" height=\"22px\" width=\"22px\">\r\n</span>\r\n</div>\r\n</div>\r\n  <form\r\n    [formGroup]=\"quoteFromGroup\"\r\n    action=\"\"\r\n    class=\"quote-create__form--elements\"\r\n    fxLayout=\"row wrap\"\r\n    fxLayoutAlign=\"space-between stretch\"\r\n  >\r\n    <div\r\n      *ngIf=\"quoteNumber\"\r\n      fxFlex=\"45\"\r\n      fxLayout=\"column\"\r\n      fxLayoutAlign=\"stretch\"\r\n    >\r\n      <span class=\"label\">Quote Number <span class=\"asterisk\">*</span></span>\r\n      <input\r\n        [readonly]=\"quoteNumber\"\r\n        [ngClass]=\"{\r\n          'error-border': quoteFromGroup.get('quote_id')?.invalid,\r\n          'read-only': quoteNumber\r\n        }\"\r\n        type=\"text\"\r\n        formControlName=\"quote_id\"\r\n        placeholder=\"Enter Quote Number\"\r\n      />\r\n    </div>\r\n    <div fxFlex=\"45\" fxLayout=\"column\" fxLayoutAlign=\" stretch\">\r\n      <span class=\"label\">Customer Name<span class=\"asterisk\">*</span></span>\r\n      <input\r\n        [ngClass]=\"{\r\n          'error-border': quoteFromGroup.get('name')?.invalid\r\n        }\"\r\n        type=\"text\"\r\n        formControlName=\"name\"\r\n        placeholder=\"Enter Customer Name\"\r\n      />\r\n    </div>\r\n\r\n     <div fxFlex=\"45\" fxLayout=\"column\" fxLayoutAlign=\" stretch\">\r\n      <span class=\"label\">Company Name<span class=\"asterisk\">*</span>\r\n    </span>\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"stretch\" style=\"padding: 0px; margin: 0 0 0 -15px;\">\r\n    <a mat-button *ngIf=\"_user.getUser().isInternalUser()\" style=\"padding: 0px 10px 0px 9px; margin: -4px -5px -5px 0px;\" (click)=\"showDropdown=!showDropdown; showPDropdown=!showPDropdown\" class=\"add\">\r\n      <img src=\"assets/quote/images/SVG-Icons-06.svg\">\r\n    </a>\r\n    <a mat-button *ngIf=\"!_user.getUser().isInternalUser()\" style=\"padding: 0px 10px 0px 9px; margin: -4px -5px -5px 0px;\" class=\"add\">\r\n      <img src=\"assets/quote/images/SVG-Icons-06.svg\">\r\n    </a>\r\n    <input style=\"width: 100%;\" *ngIf=\"showDropdown\"\r\n        [readonly]=\"!_user.getUser().isInternalUser()\"\r\n        [ngClass]=\"{\r\n          'error-border': quoteFromGroup.get('companyName')?.invalid,\r\n          'read-only': !_user.getUser().isInternalUser()\r\n        }\"\r\n        type=\"text\"\r\n        formControlName=\"companyName\"\r\n        placeholder=\"Add Company Name\"\r\n      />\r\n      <select style=\"width: 100%;\" *ngIf=\"_user.getUser().isInternalUser() && !showDropdown\"\r\n      [ngClass]=\"{\r\n        'error-border': quoteFromGroup.get('company_id')?.invalid\r\n      }\"\r\n      formControlName=\"company_id\"\r\n      (change)=\"getProjectList('', $event)\"\r\n    >\r\n      <option  *ngFor=\"let cmp of companyList\" [value]=\"cmp.sgid\" >\r\n        {{ cmp.company }}\r\n      </option>\r\n    </select>\r\n  </div>\r\n    </div>\r\n    <div fxFlex=\"45\" fxLayout=\"column\" fxLayoutAlign=\" stretch\">\r\n      <span class=\"label\">Project Name<span class=\"asterisk\">*</span> </span>\r\n      <div fxFlex=\"100\" fxLayout=\"row\" fxLayoutAlign=\"stretch\" style=\"padding: 0px; margin: 0 0 0 -15px;\">\r\n        <a mat-button *ngIf=\"_user.getUser().isInternalUser()\" style=\"padding: 0px 10px 0px 9px; margin: -4px -5px -5px 0px;\" (click)=\"showPDropdown=!showPDropdown\" class=\"add\">\r\n          <img src=\"assets/quote/images/SVG-Icons-06.svg\">\r\n        </a>\r\n        <a *ngIf=\"!_user.getUser().isInternalUser()\" style=\"padding: 0px 10px 0px 9px; margin: -4px -5px -5px 0px;\" class=\"add\">\r\n          <img src=\"assets/quote/images/SVG-Icons-06.svg\">        </a>\r\n    \r\n      <input style=\"width: 100%;\" *ngIf=\"showPDropdown\"\r\n        [ngClass]=\"{\r\n          'error-border': quoteFromGroup.get('project_name')?.invalid\r\n        }\"\r\n        type=\"text\"\r\n        formControlName=\"project_name\"\r\n        placeholder=\"Add Project Name\"\r\n      />\r\n      <select style=\"width: 100%;\" *ngIf=\"_user.getUser().isInternalUser() && !showPDropdown \"\r\n      [ngClass]=\"{\r\n        'error-border': quoteFromGroup.get('project_id')?.invalid\r\n      }\"\r\n      formControlName=\"project_id\"\r\n      (change)=\"selectProjectList('', $event)\"\r\n    >\r\n      <option *ngFor=\"let prj of projectList\" [value]=\"prj.sgid\">\r\n        {{ prj.project }}\r\n      </option>\r\n    </select>\r\n</div>\r\n    </div>\r\n   \r\n    \r\n    <div fxFlex=\"45\" fxLayout=\"column\" fxLayoutAlign=\" stretch\">\r\n      <span class=\"label\">Email<span class=\"asterisk\">*</span></span>\r\n      <input\r\n        [ngClass]=\"{\r\n          'error-border': quoteFromGroup.get('email')?.invalid\r\n        }\"\r\n        type=\"text\"\r\n        formControlName=\"email\"\r\n        placeholder=\"Add on Email\"\r\n      />\r\n    </div>\r\n    <div fxFlex=\"45\" fxLayout=\"column\" fxLayoutAlign=\" stretch\">\r\n      <span class=\"label\">Phone<span class=\"asterisk\">*</span></span>\r\n      <input\r\n        [ngClass]=\"{\r\n          'error-border': quoteFromGroup.get('contact_no')?.invalid\r\n        }\"\r\n        type=\"text\"\r\n        placeholder=\"Add a Phone Number\"\r\n        formControlName=\"contact_no\"\r\n      />\r\n    </div>\r\n    <div fxFlex=\"45\" fxLayout=\"column\" fxLayoutAlign=\" stretch\">\r\n      <span class=\"label\">Address<span class=\"asterisk\">*</span></span>\r\n      <input\r\n        [ngClass]=\"{\r\n          'error-border': quoteFromGroup.get('address')?.invalid\r\n        }\"\r\n        type=\"text\"\r\n        formControlName=\"address\"\r\n        placeholder=\"Enter on Address\"\r\n      />\r\n    </div>\r\n    <div fxFlex=\"45\" fxLayout=\"column\" fxLayoutAlign=\" stretch\">\r\n      <span class=\"label\">State<span class=\"asterisk\">*</span></span>\r\n      <select\r\n        [ngClass]=\"{\r\n          'error-border': quoteFromGroup.get('state_id')?.invalid\r\n        }\"\r\n        formControlName=\"state_id\"\r\n      >\r\n        <option *ngFor=\"let state of stateList\" [value]=\"state.sgid\">\r\n          {{ state.name }}\r\n        </option>\r\n      </select>\r\n    </div>\r\n    \r\n    <div fxFlex=\"45\" fxLayout=\"column\" fxLayoutAlign=\" stretch\">\r\n      <span class=\"label\">City<span class=\"asterisk\">*</span></span>\r\n      <input\r\n        [readonly]=\"type === 'COPY'\"\r\n        [ngClass]=\"{\r\n          'error-border': quoteFromGroup.get('city')?.invalid,\r\n          'read-only': type === 'COPY'\r\n        }\"\r\n        type=\"text\"\r\n        formControlName=\"city\"\r\n        placeholder=\"Enter a City\"\r\n      />\r\n    </div>\r\n    \r\n    <div fxFlex=\"45\" fxLayout=\"column\" fxLayoutAlign=\" stretch\">\r\n      <span class=\"label\">Zip Code<span class=\"asterisk\">*</span></span>\r\n      <input\r\n        [readonly]=\"type === 'COPY'\"\r\n        [ngClass]=\"{\r\n          'error-border': quoteFromGroup.get('zipcode')?.invalid,\r\n          'read-only': type === 'COPY'\r\n        }\"\r\n        type=\"text\"\r\n        formControlName=\"zipcode\"\r\n        placeholder=\"Add a ZipCode\"\r\n      />\r\n    </div>\r\n  </form>\r\n  <div\r\n    class=\"quote-create__actions\"\r\n    fxLayout=\"row\"\r\n    fxLayoutAlign=\"center center\"\r\n    fxLayoutGap=\"2rem\"\r\n  >\r\n    <button\r\n      mat-raised-button\r\n      [disabled]=\"quoteFromGroup.invalid\"\r\n      class=\"btn btn-primary\"\r\n      (click)=\"submit()\"\r\n    >\r\n      {{ submitButtonText }}\r\n    </button>\r\n    <button\r\n    class=\"btn btn-cancel\"\r\n    mat-raised-button (click)=\"cancel()\">CANCEL</button>\r\n  </div>\r\n</div>\r\n","import {\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  OnInit,\r\n  Output,\r\n  TemplateRef,\r\n  ViewChild,\r\n} from '@angular/core';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\nimport {\r\n  GridOptions,\r\n  GridReadyEvent,\r\n  ICellRendererParams,\r\n} from 'ag-grid-community';\r\nimport { ToasterService } from 'projects/core/src/lib/services/toaster.service';\r\nimport {\r\n  CoreService,\r\n  CounterComponent,\r\n  ImageRendererComponent,\r\n  UserService,\r\n} from 'projects/core/src/public-api';\r\nimport { QuoteService } from './../../../quote.service';\r\nimport { Observable } from 'rxjs';\r\nimport { map, tap } from 'rxjs/operators';\r\nimport { AddFPComponent } from '../add-fp/add-fp.component';\r\nimport { AddFPUComponent } from '../add-fpu/add-fpu.component';\r\nimport { ItemTypeComponent } from '../item-type/item-type.component';\r\nimport { TotalCellRendererComponent } from '../total-cell-renderer/total-cell-renderer.component';\r\nimport { QuoteHeaderService } from './quote-header.service';\r\nimport { AddMoodboardQuoteComponent } from '../add-moodboard-quote/add-moodboard-quote.component';\r\nimport { FloorPlanDetailsComponent } from '../floor-plan-details/floor-plan-details.component';\r\nimport { SelectFpComponent } from '../select-fp/select-fp.component';\r\nimport { SelectFpuComponent } from '../select-fpu/select-fpu.component';\r\n\r\n@Component({\r\n  selector: 'lib-quote-header',\r\n  templateUrl: './quote-header.component.html',\r\n  styleUrls: ['./quote-header.component.scss'],\r\n})\r\nexport class QuoteHeaderComponent implements OnInit {\r\n  @Input() quoteId: number = 0;\r\n  @Input() text: 'QUOTE' | 'ORDER' = 'QUOTE';\r\n  @Input() iconPath: string = 'assets/quote/images/quote-icon.png';\r\n\r\n  @Output() onCopy = new EventEmitter();\r\n  @Output() onEdit = new EventEmitter();\r\n  @ViewChild('dialog') dialog: TemplateRef<any> = {} as TemplateRef<any>;\r\n  editQuote = false;\r\n\r\n  agGrid: GridReadyEvent = {} as GridReadyEvent;\r\n  quoteDetails: any = {};\r\n  moodboards: Array<any> = [];\r\n  selectedMoodboard: any = '';\r\n  moodboardList: Array<any> = [];\r\n  // Default unit\r\n  quoteMDList: Array<any> = [];\r\n  quoteIPList: Array<any> = [];\r\n  selectedQuoteMD: any = '';\r\n  moodboardItems: Array<any> = [];\r\n\r\n  // Floor Plan\r\n  floorPlanList: Array<any> = [];\r\n  selectedFloorPlan: any = '';\r\n  removeFloorPlanFlag = false;\r\n  // Floor plan unit\r\n  unitList: any = [];\r\n  removeUnitFlag = false;\r\n  routeIndex: number = 0;\r\n  pinnedBottomRowData = [\r\n    {\r\n      subTotal: 'abc',\r\n      sgid: 'SUB TOTAL ($)',\r\n      is_total: '0',\r\n      isExtraRow: true,\r\n    },\r\n    {\r\n      subTotal: 'abc',\r\n      sgid: 'DELIVERY FEE ($)',\r\n      is_total: '0',\r\n      isExtraRow: true,\r\n    },\r\n    {\r\n      subTotal: 'abc',\r\n      sgid: 'TAXES ($)',\r\n      is_total: '0',\r\n      isExtraRow: true,\r\n      taxPercent: 1\r\n    },\r\n    {\r\n      subTotal: 'abc',\r\n      sgid: 'TOTAL ($)',\r\n      is_total: '0',\r\n      isExtraRow: true,\r\n    },\r\n  ];\r\n\r\n  columnDefs = [\r\n    {\r\n      field: 'sgid',\r\n      width: 120,\r\n      headerName: '',\r\n      headerTooltip: '',\r\n      colSpan: (params: any) => (params.data.subTotal === 'abc' ? 10 : 1),\r\n      cellStyle: (params: any) => {\r\n        if (params.data.subTotal === 'abc') {\r\n          return { 'text-align': 'end' };\r\n        }\r\n        return '';\r\n      },\r\n    },\r\n    { field: 'warehouse_name', headerName: 'CITY' },\r\n    { field: 'sku', headerName: 'SKU' },\r\n    {\r\n      headerName: 'IMAGE',\r\n      cellRenderer: 'ImageRendererComponent',\r\n      field: 'product_images.small',\r\n      cellStyle: {\r\n        padding: '0.3rem',\r\n      },\r\n      // valueGetter: async (params:ICellRendererParams)=>{\r\n      // let x = await this._core.getBase64Image(params?.data?.product_images?.small).toPromise();\r\n      // return 'data:image/jpeg;base64' + x?.imageurl;\r\n      // }\r\n    },\r\n    {\r\n      headerName: 'PRODUCT NAME',\r\n      field: 'name',\r\n      width: '250px',\r\n    },\r\n    {\r\n      headerName: 'TYPE',\r\n      field: 'button_type',\r\n      cellRenderer: 'ItemTypeCellRenderer',\r\n      valueGetter: (params: ICellRendererParams) => {\r\n        return params.data.button_type === 0 ? 'Rent' : 'Buy';\r\n      },\r\n    },\r\n    {\r\n      headerName: 'QTY',\r\n      field: 'is_qty',\r\n      cellRenderer: 'CounterCellRenderer',\r\n    },\r\n    {\r\n      headerName: 'BUY PRICE ($)',\r\n      field: 'buy_price',\r\n      valueGetter: (params: ICellRendererParams) => {\r\n        return params.data.button_type === 1 ? params.data.buy_price : 'NA';\r\n      },\r\n    },\r\n    {\r\n      headerName: 'RENTAL PRICE ($) /MONTH',\r\n      field: 'price',\r\n      cellRenderer: (params: ICellRendererParams) => {\r\n        return params.data.button_type === 0 ? params.value : 'NA';\r\n      },\r\n    },\r\n    // { headerName: 'DISCOUNT ($)', field: 'discount' },\r\n\r\n    {\r\n      headerName: 'MONTHS',\r\n      field: 'months',\r\n    },\r\n    {\r\n      headerName: 'TOTAL ($)',\r\n      field: 'is_total',\r\n      cellRenderer: 'TotalCellRendererComponent',\r\n    },\r\n  ];\r\n\r\n  gridOptions: GridOptions = {\r\n    onGridReady: (api: GridReadyEvent) => {\r\n      this.agGrid = api;\r\n      this.onGridReady(api);\r\n    },\r\n    rowHeight: 100,\r\n    headerHeight: 100,\r\n    getRowHeight: (params: any) => {\r\n      return params?.data?.isExtraRow ? 50 : 100;\r\n    },\r\n  };\r\n  defaultColDef = {\r\n    wrapText: true,\r\n    cellClass: 'grid-cell',\r\n    cellStyle: {\r\n      'line-height': 'normal',\r\n      'align-items': 'center',\r\n      'justify-content': 'center',\r\n      display: 'flex',\r\n      padding: '0 0.5rem',\r\n    },\r\n  };\r\n  frameworkComponents = {\r\n    ImageRendererComponent: ImageRendererComponent,\r\n    TotalCellRendererComponent: TotalCellRendererComponent,\r\n    ItemTypeCellRenderer: ItemTypeComponent,\r\n    CounterCellRenderer: CounterComponent,\r\n  };\r\n  rowData: Observable<any[]> = new Observable();\r\n  state: any | null = null;\r\n  private dialogRef: MatDialogRef<any> | undefined = undefined;\r\n  constructor(\r\n    private _quoteHeaderService: QuoteHeaderService,\r\n    private _router: Router,\r\n    private _user: UserService,\r\n    private _core: CoreService,\r\n    private _matDialog: MatDialog,\r\n    private _toaster: ToasterService,\r\n    private _dialog: MatDialog,\r\n    private _quoteService: QuoteService\r\n  ) {\r\n    this.state = this._router.getCurrentNavigation()?.extras.state;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getQuoteInformation();\r\n    this.getMoodboardInQuote();\r\n    this.getFloorPlan();\r\n\r\n    this.routeIndex = this._router.url.indexOf('quote');\r\n    if (this.routeIndex == 1 && this.state?.initDialog) {\r\n      this.openDialog();\r\n    }\r\n  }\r\n  onGridReady(evt: GridReadyEvent) {\r\n    this.agGrid = evt;\r\n    evt.api.sizeColumnsToFit();\r\n    this.rowData = this.getQuoteSummary();\r\n  }\r\n\r\n  refresh() {\r\n    this.getMoodboardInQuote();\r\n    this.getFloorPlan();\r\n    this.getUnits();\r\n    this.onGridReady(this.agGrid);\r\n  }\r\n  getQuoteSummary<T>(): Observable<T> {\r\n    return this._quoteHeaderService.getQuoteSummary<T>(this.quoteId).pipe(\r\n      map((x: any) => {\r\n        if (x.quote_items.length > 0) {\r\n          this.updateBottomData(x.quote);\r\n        } else {\r\n          this.updateBottomData({\r\n            delivery_fee: 0,\r\n            tax_percentage: 0,\r\n            tax_amount: 0,\r\n          });\r\n        }\r\n        this.agGrid.api.redrawRows();\r\n        return x.quote_items.map((item: any, index: number) => {\r\n          item.order_status = x.quote.order_status;\r\n          item.sgid = index + 1;\r\n          return item;\r\n        });\r\n      })\r\n    );\r\n  }\r\n\r\n  getMoodboardInQuote() {\r\n    this._quoteHeaderService\r\n      .getMoodboardInQuote<Array<any>>(this.quoteId)\r\n      .subscribe((data: any) => {\r\n        if (typeof data === 'string') {\r\n          return;\r\n        }\r\n        this.moodboards = data;\r\n        this.quoteMDList = data.Moodboard_list;\r\n        this.quoteIPList = data.Indivisual_products.map((x: any) => {\r\n          x.isIndividual = true;\r\n          return x;\r\n        });\r\n      });\r\n  }\r\n\r\n  getQuoteInformation() {\r\n    let userId = this._user.getUser().getId();\r\n    let companyId = this._user.getUser().getCompanyId();\r\n    this._quoteHeaderService\r\n      .getQuoteInformation(this.quoteId)\r\n      .subscribe((data) => {\r\n        this.quoteDetails = data;\r\n        if (this.quoteDetails.userid === userId) {\r\n          this.editQuote = true;\r\n        }\r\n        if (\r\n          companyId === this.quoteDetails.company_id &&\r\n          this.quoteDetails.application_type === 1\r\n        ) {\r\n          this.editQuote = true;\r\n        }\r\n      });\r\n  }\r\n\r\n  private getQuoteObject() {\r\n    return {\r\n      quoteNumber: this.quoteDetails.sgid,\r\n      phone: this.quoteDetails.contactno,\r\n      customerName: this.quoteDetails.name,\r\n      address: this.quoteDetails.address,\r\n      email: this.quoteDetails.email,\r\n      state: this.quoteDetails.state,\r\n      companyName: this.quoteDetails.company_name,\r\n      city: this.quoteDetails.city_name,\r\n      projectName: this.quoteDetails.project_name,\r\n      zipCode: this.quoteDetails.is_zip_code,\r\n    };\r\n  }\r\n\r\n  OnCopy(evt: any) {\r\n    this._router.navigate(['quote/copy'], { state: this.getQuoteObject() });\r\n    this.onCopy.emit(evt);\r\n  }\r\n  OnEdit(evt: any) {\r\n    this._router.navigate(['quote/edit'], { state: this.getQuoteObject() });\r\n    this.onEdit.emit(evt);\r\n  }\r\n\r\n  updateBottomData(data: any) {\r\n    this.pinnedBottomRowData[1].is_total = data?.delivery_fee;\r\n    this.pinnedBottomRowData[2].sgid =\r\n      'TAXES (' + data?.tax_percentage + '%) ($)';\r\n    this.pinnedBottomRowData[2].is_total = data?.tax_amount;\r\n    this.pinnedBottomRowData[2].taxPercent = data?.tax_percentage;\r\n    this.pinnedBottomRowData[3].taxPercent = data?.tax_percentage;\r\n    this.pinnedBottomRowData[3].is_total = data?.tax_amount;\r\n  }\r\n\r\n  openDialog() {\r\n    this._dialog\r\n      .open(AddMoodboardQuoteComponent, {\r\n        height: '100%',\r\n        width: '50%',\r\n        data: {\r\n          isDialog: true,\r\n          quoteId: this.quoteId,\r\n          page: this.text,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((data) => {\r\n        if (data && data.event == 'defaultunit') {\r\n        } else if (data && data.event == 'floorPlan') {\r\n        } else if (data && data.event == 'floorPlanUnit') {\r\n        }\r\n        this.refresh();\r\n      });\r\n  }\r\n\r\n  addMoodboard(selectedMoodboard: number) {\r\n    this._quoteHeaderService\r\n      .addMoodboard(this.quoteId, selectedMoodboard)\r\n      .subscribe(\r\n        (data: any) => {\r\n          this.dialogRef?.close();\r\n          this._toaster.success(data.msg);\r\n          this.ngOnInit();\r\n          this.onGridReady(this.agGrid);\r\n        },\r\n        (error) => {\r\n          this._toaster.error('Fail to add moodboard');\r\n        }\r\n      );\r\n  }\r\n\r\n  selectionChange() {\r\n    console.log(this.selectedMoodboard);\r\n  }\r\n\r\n  onTabChanged(evt: any) {}\r\n  // Default Unit\r\n  onClickMDorProduct(mdOrProduct: any) {\r\n    this.moodboardItems = [];\r\n    this.selectedQuoteMD = mdOrProduct;\r\n    if (!this.selectedQuoteMD.isIndividual) {\r\n      this._quoteHeaderService\r\n        .getMoodboardItems(this.selectedQuoteMD?.unitmoodboards?.id)\r\n        .subscribe((resp) => {\r\n          this.moodboardItems = resp.moodboard_items;\r\n        });\r\n    }\r\n  }\r\n  addMDtoFloorPlan() {\r\n    let obj;\r\n    if (this.selectedQuoteMD?.moodboard_id == null) {\r\n      obj = {\r\n        qid: this.selectedQuoteMD?.quote_id,\r\n        user_id: this._user.getUser().getId(),\r\n        product_id: this.selectedQuoteMD?.product_id,\r\n        sku: this.selectedQuoteMD?.variation_new?.sgid,\r\n        quantity: this.selectedQuoteMD?.qty,\r\n        button_type: this.selectedQuoteMD?.button_type,\r\n        month: this.selectedQuoteMD?.months,\r\n        warehouse_id: this.selectedQuoteMD?.warehouse_id,\r\n        source: 'default_unit',\r\n      };\r\n    } else {\r\n      obj = {\r\n        isDialog: true,\r\n        qid: this.selectedQuoteMD?.quote_id,\r\n        mid: this.selectedQuoteMD?.moodboard_id,\r\n        user_id: this._user.getUser().getId(),\r\n        source: 'default_unit',\r\n      };\r\n    }\r\n\r\n    this._dialog\r\n      .open(SelectFpComponent, {\r\n        height: '70%',\r\n        width: '70%',\r\n        data: obj,\r\n      })\r\n      .afterClosed()\r\n      .subscribe((data) => {\r\n        if (data) {\r\n          this.selectedQuoteMD = null;\r\n          this.getMoodboardInQuote();\r\n          this.getFloorPlan();\r\n        }\r\n      });\r\n    //this._quoteHeaderService.addMDtoFloorPlan().subscribe((resp) => {});\r\n  }\r\n\r\n  addMDtoUnit() {\r\n    let obj;\r\n    if (this.selectedQuoteMD?.moodboard_id == null) {\r\n      obj = {\r\n        qid: this.selectedQuoteMD?.quote_id,\r\n        user_id: this._user.getUser().getId(),\r\n        product_id: this.selectedQuoteMD?.product_id,\r\n        sku: this.selectedQuoteMD?.variation_new?.sgid,\r\n        quantity: this.selectedQuoteMD?.qty,\r\n        button_type: this.selectedQuoteMD?.button_type,\r\n        month: this.selectedQuoteMD?.months,\r\n        warehouse_id: this.selectedQuoteMD?.warehouse_id,\r\n        source: 'default_unit',\r\n      };\r\n    } else {\r\n      obj = {\r\n        isDialog: true,\r\n        qid: this.selectedQuoteMD?.quote_id,\r\n        mid: this.selectedQuoteMD?.moodboard_id,\r\n        user_id: this._user.getUser().getId(),\r\n        source: 'default_unit',\r\n      };\r\n    }\r\n\r\n    this._dialog\r\n      .open(SelectFpuComponent, {\r\n        height: '70%',\r\n        width: '70%',\r\n        data: obj,\r\n      })\r\n      .afterClosed()\r\n      .subscribe((data) => {\r\n        if (data) {\r\n          this.selectedQuoteMD = null;\r\n          this.getMoodboardInQuote();\r\n          this.getFloorPlan();\r\n        }\r\n      });\r\n\r\n    //    this._quoteHeaderService.addMDtoUnit().subscribe((resp) => {});\r\n  }\r\n  removeProductfromQuote() {\r\n    this._quoteHeaderService\r\n      .removeProductfromQuote(this.quoteId, this.selectedQuoteMD?.sgid)\r\n      .subscribe((resp) => {\r\n        if (resp.statusCode == 200) {\r\n          this._toaster.success(resp.result);\r\n          this.getMoodboardInQuote();\r\n        } else {\r\n          this._toaster.success(resp.result);\r\n        }\r\n      });\r\n  }\r\n  removeMDfromQuote() {\r\n    this._quoteHeaderService\r\n      .removeMDfromQuote(this.quoteId, this.selectedQuoteMD?.unitmoodboards?.id)\r\n      .subscribe((resp) => {\r\n        if (resp.statusCode == 200) {\r\n          this._toaster.success(resp.result);\r\n          this.getMoodboardInQuote();\r\n        } else {\r\n          this._toaster.success(resp.result);\r\n        }\r\n      });\r\n  }\r\n\r\n  goToMoodboard() {\r\n    this._router.navigateByUrl(\r\n      '/moodboard/' + this.selectedQuoteMD?.unitmoodboards?.id\r\n    );\r\n  }\r\n\r\n  openFloorPlanUnit(unit: any) {\r\n    const floorPlanID = unit.floorplan_id ? unit.floorplan_id : 'None';\r\n    let route = 'quote';\r\n    if ((this.text == 'ORDER')) {\r\n      route = 'order';\r\n    }\r\n    this._router.navigate([\r\n      route,\r\n      this.quoteId,\r\n      'floor-plan-unit',\r\n      floorPlanID,\r\n      'unit',\r\n      unit.sgid,\r\n    ]);\r\n  }\r\n\r\n  // Add Floor plan\r\n  openFloorPlanPage(fp: any) {\r\n    let route = 'quote';\r\n    if (this.text == 'ORDER') {\r\n      route = 'order';\r\n    }\r\n    this._router.navigate([route, this.quoteId, fp.sgid]);\r\n  }\r\n  getFloorPlan() {\r\n    this._quoteService.getFloorPlan(this.quoteId).subscribe((resp) => {\r\n      this.floorPlanList = resp.result;\r\n      this.getUnits();\r\n    });\r\n  }\r\n\r\n  removeFloorPlanFromQuote(fp: any) {\r\n    this._quoteService\r\n      .removeFloorPlanFromQuote(this.quoteId, fp.sgid)\r\n      .subscribe((resp) => {\r\n        if (resp.statusCode == 200) {\r\n          this._toaster.success(resp.message);\r\n          this.getFloorPlan();\r\n        } else {\r\n          this._toaster.error(resp.message);\r\n        }\r\n      });\r\n  }\r\n  openAddFloorPlanDialog() {\r\n    this._matDialog\r\n      .open(AddFPComponent, {\r\n        width: '65%',\r\n        height: '72%',\r\n        data: { quoteId: this.quoteId },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((data) => {\r\n        if (data) {\r\n          this.getFloorPlan();\r\n        }\r\n      });\r\n  }\r\n\r\n  openAddUnitDialog() {\r\n    this._matDialog\r\n      .open(AddFPUComponent, {\r\n        width: '50%',\r\n        height: '61%',\r\n        data: { quoteId: this.quoteId },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((data) => {\r\n        if (data) {\r\n          this.getUnits();\r\n        }\r\n      });\r\n  }\r\n\r\n  // Floor plan unit\r\n  getUnits() {\r\n    //    this.floorPlanList.forEach((element, index)=>{\r\n    this._quoteService\r\n      .getUnits({ quote_id: this.quoteId })\r\n      .subscribe((resp) => {\r\n        this.unitList = resp;\r\n        //  this.unitList['UnitsWithoutFloorPlan'] = resp.UnitsWithoutFloorPlan;\r\n        //  this.unitList['FloorPlanWithUnits'] = resp.FloorPlanWithUnits;\r\n        // this.floorPlanList[index]['units'] = resp.result;\r\n      });\r\n    //  });\r\n    console.log(this.floorPlanList);\r\n  }\r\n\r\n  removeUnitFromFP(unit: any) {\r\n    this._quoteService\r\n      .removeUnitFromFp(this.quoteId, unit.name, unit.sgid)\r\n      .subscribe((resp) => {\r\n        if (resp.statusCode) {\r\n          this._toaster.success(resp.message);\r\n          this.getUnits();\r\n        } else {\r\n          this._toaster.success(resp.message);\r\n        }\r\n      });\r\n  }\r\n}\r\n","<ng-template #dialog>\r\n  <div class=\"dialog\" fxLayout=\"column\" fxLayoutAlign=\"center stretch\">\r\n    <div fxLayout=\"row\" style=\"width: 100%\" fxLayoutAlign=\"space-between start\">\r\n      <div class=\"h2\" style=\"margin-bottom: 2rem\">Add a Moodboard</div>\r\n      <button mat-flat-button mat-dialog-close>\r\n        <i class=\"fa fa-times\" aria-hidden=\"true\"></i>\r\n      </button>\r\n    </div>\r\n    <mat-dialog-content>\r\n      <div fxLayout=\"column\" fxLayoutGap=\"1rem\">\r\n        <mat-label>Select a Moodboard to be added to this quote.</mat-label>\r\n        <mat-form-field appearance=\"outline\">\r\n          <mat-select\r\n            [(ngModel)]=\"selectedMoodboard\"\r\n            (selectionChange)=\"selectionChange()\"\r\n          >\r\n            <ng-container *ngFor=\"let moodboard of moodboardList\">\r\n              <mat-option [value]=\"moodboard.sgid\">{{\r\n                moodboard.boardname\r\n              }}</mat-option>\r\n            </ng-container>\r\n\r\n            <mat-option *ngIf=\"moodboardList.length === 0\" value=\"\"\r\n              >No Moodboard</mat-option\r\n            >\r\n          </mat-select>\r\n        </mat-form-field>\r\n      </div>\r\n    </mat-dialog-content>\r\n    <mat-dialog-actions fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n      <button\r\n        class=\"round\"\r\n        mat-flat-button\r\n        color=\"accent\"\r\n        [disabled]=\"!selectedMoodboard\"\r\n        (click)=\"addMoodboard(selectedMoodboard)\"\r\n      >\r\n        Add Moodboard\r\n      </button>\r\n    </mat-dialog-actions>\r\n  </div>\r\n</ng-template>\r\n\r\n<div class=\"quote\" fxLayout=\"column\" fxLayoutAlign=\" stretch\">\r\n  <div class=\"quote-details\" fxLayout=\"row\" fxLayoutAlign=\" stretch\">\r\n    <div\r\n      class=\"quote-details__icon\"\r\n      fxFlex=\"30\"\r\n      fxLayout=\"column\"\r\n      fxLayoutAlign=\"center center\"\r\n    >\r\n      <span>{{ text }}</span>\r\n      <div class=\"img-quote\">\r\n      <img [src]=\"iconPath\" alt=\"\" srcset=\"\" />\r\n    </div>\r\n    </div>\r\n    <div\r\n      class=\"quote-details__info\"\r\n      fxFlex=\"60\"\r\n      fxLayout=\"row wrap\"\r\n      fxLayoutAlign=\"start\"\r\n    >\r\n      <div fxFlex=\"66\" *ngIf=\"quoteDetails?.order_reference\">\r\n        <span class=\"label\">Order Number: </span>\r\n        <span class=\"value\">{{ quoteDetails.order_reference }}</span>\r\n      </div>\r\n      <div fxFlex=\"33\">\r\n        <span class=\"label\">Project Name: </span>\r\n        <span class=\"value\">{{ quoteDetails.project_name }}</span>\r\n      </div>\r\n      <div fxFlex=\"33\">\r\n        <span class=\"label\">Company Name: </span>\r\n        <span class=\"value\">{{ quoteDetails.company_name }}</span>\r\n      </div>\r\n      <div fxFlex=\"33\">\r\n        <span class=\"label\">Address: </span>\r\n        <span class=\"value\">{{ quoteDetails.address }}</span>\r\n      </div>\r\n      <div fxFlex=\"33\">\r\n        <span class=\"label\">Quote #: </span>\r\n        <span class=\"value\">{{ quoteDetails.sgid }}</span>\r\n      </div>\r\n      <div fxFlex=\"33\">\r\n        <span class=\"label\">Contact No: </span>\r\n        <span class=\"value\">{{ quoteDetails.contactno }}</span>\r\n      </div>\r\n      <div fxFlex=\"33\">\r\n        <span class=\"label\">State: </span>\r\n        <span class=\"value\">{{ quoteDetails.is_state_name }}</span>\r\n      </div>\r\n      <div fxFlex=\"33\">\r\n        <span class=\"label\">Customer Name: </span>\r\n        <span class=\"value\">{{ quoteDetails.name }}</span>\r\n      </div>\r\n      <div fxFlex=\"33\">\r\n        <span class=\"label\">Email: </span>\r\n        <span class=\"value\">{{ quoteDetails.email }}</span>\r\n      </div>\r\n      <div fxFlex=\"33\">\r\n        <span class=\"label\">City: </span>\r\n        <span class=\"value\">{{ quoteDetails.city_name }}</span>\r\n      </div>\r\n      <div fxFlex=\"33\">\r\n        <span class=\"label\">Zipcode: </span>\r\n        <span class=\"value\">{{ quoteDetails.is_zip_code }}</span>\r\n      </div>\r\n    </div>\r\n    <div\r\n      class=\"quote-details__copy\"\r\n      fxFlex=\"10\"\r\n      fxLayout=\"row\"\r\n      fxLayoutAlign=\"start end\"\r\n      fxLayoutGap=\"1rem\"\r\n    >\r\n      <button class=\"box-none\"\r\n        mat-mini-fab\r\n        color=\"accent\"\r\n        aria-label=\"Example icon button with a filter list icon\"\r\n        (click)=\"OnCopy($event)\"\r\n      >\r\n        <mat-icon>file_copy</mat-icon>\r\n      </button>\r\n      <button class=\"box-none\"\r\n        mat-mini-fab\r\n        *ngIf=\"text === 'QUOTE' && editQuote\"\r\n        color=\"accent\"\r\n        (click)=\"OnEdit($event)\"\r\n      >\r\n        <mat-icon>edit icon</mat-icon>\r\n      </button>\r\n    </div>\r\n  </div>\r\n  <mat-tab-group\r\n    color=\"accent\"\r\n    class=\"tabs\"\r\n    (selectedTabChange)=\"onTabChanged($event)\"\r\n    mat-align-tabs=\"start\"\r\n  >\r\n    <mat-tab label=\"Default Unit\">\r\n      <div fxLayout=\"column\" class=\"tabs-item\">\r\n        <div class=\"quote-moodboard\" fxLayout=\"column\" fxLayoutAlign=\" stretch\">\r\n          <div\r\n            class=\"quote-moodboard__list\"\r\n            fxLayout=\"row wrap\"\r\n            fxLayoutAlign=\"start\"\r\n            fxLayoutGap=\"1rem\"\r\n          >\r\n            <div\r\n              fxFlex=\"13\"\r\n              class=\"quote-moodboard__list--item moodboard-list\"\r\n              [ngClass]=\"{ selected: moodboard.sgid == selectedQuoteMD?.sgid }\"\r\n              *ngFor=\"let moodboard of quoteMDList\"\r\n              fxLayout=\"column\"\r\n              (click)=\"onClickMDorProduct(moodboard)\"\r\n              >\r\n              <img\r\n                height=\"110px\"\r\n                width=\"auto\"\r\n                [src]=\"moodboard?.unitmoodboards?.is_moodboard_images?.small\"\r\n                alt=\"Moodboard\"\r\n              />\r\n              <p> {{ moodboard?.unitmoodboards?.boardname }} <span > -Moodboard </span> </p>\r\n            </div>\r\n            <div\r\n              fxFlex=\"10\"\r\n              class=\"quote-moodboard__list--item moodboard-list\"\r\n              [ngClass]=\"{ selected: product.sgid == selectedQuoteMD?.sgid }\"\r\n              *ngFor=\"let product of quoteIPList\"\r\n              fxLayout=\"column\"\r\n              (click)=\"onClickMDorProduct(product)\"\r\n              >\r\n              <img\r\n                height=\"110px\"\r\n                width=\"auto\"\r\n                [src]=\"\r\n                  product?.variation_new?.default_images[0]?.image_url?.small\r\n                \"\r\n                alt=\"Moodboard\"\r\n              />\r\n              <p>{{ product.name }}</p>\r\n            </div>\r\n            <div\r\n              fxFlex=\"13\"\r\n              class=\"quote-moodboard__list--item\"\r\n              fxLayoutAlign=\"center center\"\r\n              fxLayout=\"column\"\r\n              (click)=\"openDialog()\"\r\n              *ngIf=\"text === 'QUOTE' && editQuote\"\r\n            >\r\n              <mat-icon style=\"margin: 40px;\" class=\"icon\" inline=\"true\">add_circle_outline</mat-icon>\r\n              <span>Add Moodboard</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div fxFlex=\"row\" *ngIf=\"selectedQuoteMD\" class=\"quote-moodboard--sec\">\r\n          <div\r\n            fxLayout=\"column\"\r\n            fxFlex=\"20\"\r\n            fxLayoutGap=\"1rem\"\r\n            fxLayoutAlign=\"center center\"\r\n          >\r\n            <div class=\"h2\">\r\n              {{\r\n                selectedQuoteMD?.isIndividual\r\n                  ? selectedQuoteMD?.name\r\n                  : selectedQuoteMD?.unitmoodboards?.boardname\r\n              }}\r\n            </div>\r\n            <button\r\n              class=\"round\"\r\n              style=\"width: 88%; font-weight:bold;\"\r\n              mat-flat-button\r\n              (click)=\"addMDtoFloorPlan()\"\r\n              color=\"accent\"\r\n              *ngIf=\"routeIndex == 1\"\r\n            >\r\n              ADD TO FLOORPLAN\r\n            </button>\r\n            <button\r\n              class=\"round\"\r\n              mat-flat-button\r\n              (click)=\"addMDtoUnit()\"\r\n              color=\"accent\"\r\n              style=\"width: 88%; font-weight:bold;\"\r\n              *ngIf=\"routeIndex == 1\"\r\n            >\r\n              ADD TO UNIT\r\n            </button>\r\n            <button\r\n              class=\"round\"\r\n              *ngIf=\"!selectedQuoteMD?.isIndividual && routeIndex == 1\"\r\n              mat-flat-button\r\n              (click)=\"removeMDfromQuote()\"\r\n              style=\"width: 88%; font-weight:bold;\"\r\n              color=\"primary\"\r\n            >\r\n              REMOVE MOODBOARD\r\n            </button>\r\n            <button\r\n              class=\"round\"\r\n              *ngIf=\"selectedQuoteMD?.isIndividual && routeIndex == 1\"\r\n              mat-flat-button\r\n              style=\"width: 88%; font-weight:bold;\"\r\n              color=\"primary\"\r\n              (click)=\"removeProductfromQuote()\"\r\n            >\r\n              REMOVE PRODUCT\r\n            </button>\r\n            <button\r\n              class=\"round\"\r\n              *ngIf=\"!selectedQuoteMD?.isIndividual && routeIndex == 1\"\r\n              mat-flat-button\r\n              color=\"primary\"\r\n              style=\"width: 88%; font-weight:bold;\"\r\n              (click)=\"goToMoodboard()\"\r\n            >\r\n              GO TO MOODBOARD\r\n            </button>\r\n          </div>\r\n          <mat-divider style=\"margin-right: 4rem\" vertical=\"true\"></mat-divider>\r\n          <div\r\n            fxFlex\r\n            class=\"quote- sec\"\r\n            fxLayout=\"row\"\r\n            fxLayoutGap=\"3rem\"\r\n            fxLayoutAlign=\"start\"\r\n          >\r\n            <div\r\n              fxFlex=\"22\"\r\n              class=\"quote-moodboard__list--item moodboard-list\"\r\n              *ngFor=\"let item of moodboardItems\"\r\n              fxLayout=\"column\"\r\n              fxLayoutGap=\".5rem\"\r\n              fxLayoutAlign=\"start\"\r\n            >\r\n              <lib-item-type\r\n                style=\"width: 65px\"\r\n                [status]=\"item?.button_type\"\r\n              ></lib-item-type>\r\n              <div fxFlex fxLayoutAlign=\"center center\" fxLayout=\"column\">\r\n                <img\r\n                  fxFlex\r\n                  height=\"100px\"\r\n                  width=\"90px\"\r\n                  [src]=\"item?.variation?.images[0]?.image_url?.small\"\r\n                  alt=\"Moodboard\"\r\n                />\r\n                <p class=\"h3\">{{ item?.name }}</p>\r\n                <p>\r\n                  {{ \"Qty :\" + item?.qty }}\r\n                </p>\r\n              </div>\r\n            </div>\r\n            <div\r\n              fxFlex=\"22\"\r\n              class=\"quote-moodboard__list--item moodboard-list\"\r\n              *ngIf=\"selectedQuoteMD?.isIndividual\"\r\n              fxLayout=\"column\"\r\n              fxLayoutGap=\".5rem\"\r\n              fxLayoutAlign=\"start\"\r\n            >\r\n              <lib-item-type\r\n                style=\"width: 65px\"\r\n                [status]=\"selectedQuoteMD?.button_type\"\r\n              ></lib-item-type>\r\n              <div fxFlex fxLayoutAlign=\"center center\" fxLayout=\"column\">\r\n                <img\r\n                  fxFlex\r\n                  height=\"100px\"\r\n                  width=\"90px\"\r\n                  [src]=\"\r\n                    selectedQuoteMD?.variation_new?.default_images[0]?.image_url\r\n                      ?.small\r\n                  \"\r\n                  alt=\"Moodboard\"\r\n                />\r\n                <p class=\"h3\">{{ selectedQuoteMD?.name }}</p>\r\n                <p>\r\n                  {{ \"Qty :\" + selectedQuoteMD?.qty }}\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </mat-tab>\r\n    <mat-tab label=\"Floor Plans\">\r\n      <div class=\"g-box-shadow tabs-item fp\">\r\n        <span *ngIf=\"floorPlanList.length <= 0\" class=\"fp__default-text\"\r\n          >No Floor Plans found. Please add Floor Plan.</span\r\n        >\r\n        <div fxLayout=\"row wrap\" fxLayoutGap=\"2rem\" class=\"fp__container\">\r\n          <div\r\n            *ngFor=\"let fp of floorPlanList\"\r\n            fxLayout=\"column\"\r\n            fxLayoutGap=\"1rem\"\r\n            class=\"g-box-shadow fp__container--item\"\r\n          >\r\n            <span\r\n              fxLayout=\"row\"\r\n              fxLayoutGap=\"1rem\"\r\n              fxLayoutAlign=\"center center\"\r\n            >\r\n              <button\r\n                class=\"round\"\r\n                (click)=\"removeFloorPlanFromQuote(fp)\"\r\n                *ngIf=\"removeFloorPlanFlag\"\r\n                mat-flat-button\r\n              >\r\n                <i class=\"fa fa-times-circle-o\" aria-hidden=\"true\"></i> Remove\r\n              </button>\r\n              <button\r\n                *ngIf=\"!removeFloorPlanFlag\"\r\n                class=\"icon-button\"\r\n                mat-icon-button\r\n                disabled\r\n                aria-label=\"Example icon button with a filter list icon\"\r\n              >\r\n                <mat-icon>file_copy</mat-icon>\r\n              </button>\r\n              <button\r\n                *ngIf=\"!removeFloorPlanFlag\"\r\n                class=\"icon-button\"\r\n                mat-icon-button\r\n                disabled\r\n                aria-label=\"Example icon button with a filter list icon\"\r\n              >\r\n                <mat-icon>edit icon</mat-icon>\r\n              </button>\r\n            </span>\r\n            <span fxLayout=\"column\" style=\"align-items: center\">\r\n              <span class=\"h2\">{{ fp.floorname }}</span>\r\n              <span>{{ fp.floorplan_mb_cnt }} Moodboard</span>\r\n              <span> {{ fp.total_unit }} Units</span>\r\n              <span> {{ fp.floorplan_type_name }}</span>\r\n            </span>\r\n            <button\r\n              class=\"round\"\r\n              (click)=\"openFloorPlanPage(fp)\"\r\n              mat-flat-button\r\n              color=\"accent\"\r\n            >\r\n              SETUP\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div fxLayout=\"row\" fxLayoutGap=\"2rem\">\r\n          <button\r\n            class=\"round\"\r\n            *ngIf=\"!removeFloorPlanFlag && text === 'QUOTE'\"\r\n            mat-flat-button\r\n            color=\"primary\"\r\n            (click)=\"openAddFloorPlanDialog()\"\r\n          >\r\n            ADD FLOOR PLAN\r\n          </button>\r\n          <button\r\n            class=\"round\"\r\n            *ngIf=\"text === 'QUOTE'\"\r\n            (click)=\"removeFloorPlanFlag = !removeFloorPlanFlag\"\r\n            mat-flat-button\r\n            color=\"primary\"\r\n          >\r\n            {{ removeFloorPlanFlag ? \"CANCEL\" : \"REMOVE FLOOR PLAN\" }}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </mat-tab>\r\n    <mat-tab label=\"Floor plan Units\">\r\n      <div class=\"g-box-shadow tabs-item fpu\">\r\n        <span *ngIf=\"floorPlanList.length <= 0\" class=\"fpu__default-text\">\r\n          No Floor Plans found. Please add Floor Plan.\r\n        </span>\r\n        <div\r\n          class=\"fpu__container g-box-shadow\"\r\n          *ngFor=\"let fp of unitList?.FloorPlanWithUnits\"\r\n        >\r\n          <span class=\"h2\">{{ fp?.floorname }}</span>\r\n          <div fxLayout=\"row\" fxLayoutGap=\"1rem\">\r\n            <div\r\n              fxLayout=\"column\"\r\n              *ngFor=\"let unit of fp.unit_ids\"\r\n              class=\"fpu__container--unit g-box-shadow pointer\"\r\n            >\r\n              <button (click)=\"removeUnitFromFP(unit)\" mat-flat-button>\r\n                <i\r\n                  *ngIf=\"removeUnitFlag\"\r\n                  class=\"fa fa-times\"\r\n                  aria-hidden=\"true\"\r\n                ></i>\r\n              </button>\r\n              <div (click)=\"openFloorPlanUnit(unit)\">\r\n                <div class=\"h2\">{{ unit.name }}</div>\r\n                <div class=\"h3\">Unit</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"fpu__container g-box-shadow pointer\">\r\n          <!-- <span class=\"h2\">{{ fp?.floorname }}</span> -->\r\n          <div fxLayout=\"row\" fxLayoutGap=\"1rem\">\r\n            <div\r\n              fxLayout=\"column\"\r\n              *ngFor=\"let unit of unitList?.UnitsWithoutFloorPlan\"\r\n              class=\"fpu__container--unit g-box-shadow\"\r\n            >\r\n              <button disabled mat-flat-button>\r\n                <i\r\n                  *ngIf=\"removeUnitFlag\"\r\n                  class=\"fa fa-times\"\r\n                  aria-hidden=\"true\"\r\n                ></i>\r\n              </button>\r\n              <div (click)=\"openFloorPlanUnit(unit)\">\r\n                <div class=\"h2\">{{ unit.name }}</div>\r\n                <div class=\"h3\">Unit</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div fxLayout=\"row\" fxLayoutGap=\"2rem\">\r\n          <button\r\n            class=\"round\"\r\n            mat-flat-button\r\n            *ngIf=\"!removeUnitFlag && text =='QUOTE'\"\r\n            (click)=\"openAddUnitDialog()\"\r\n            color=\"primary\"\r\n          >\r\n            ADD UNIT(S)\r\n          </button>\r\n          <button\r\n            class=\"round\"\r\n            *ngIf=\"text =='QUOTE'\"\r\n            mat-flat-button\r\n            (click)=\"removeUnitFlag = !removeUnitFlag\"\r\n            color=\"primary\"\r\n          >\r\n            {{ removeUnitFlag ? \"CANCEL\" : \"REMOVE UNIT(S)\" }}\r\n          </button>\r\n          <span fxFlex></span>\r\n          <mat-checkbox  *ngIf=\"text =='QUOTE'\" disabled color=\"accent\"> UNASSIGNED</mat-checkbox>\r\n        </div>\r\n      </div>\r\n    </mat-tab>\r\n  </mat-tab-group>\r\n\r\n  <div class=\"quote-summary\" fxLayout=\"column\" fxLayoutAlign=\"start stretch\">\r\n    <div style=\"margin:0 1rem\">\r\n      <span class=\"quote-summary__info--label\">{{text}} SUMMARY</span>\r\n    </div>\r\n    <div\r\n      class=\"quote-summary__info\"\r\n      fxLayout=\"row\"\r\n      fxLayoutAlign=\"start start\"\r\n      fxLayoutGap=\"2rem\"\r\n    >\r\n\r\n    <div>\r\n        <span class=\"quote-summary__info--label\">Customer City :</span>\r\n        <span class=\"quote-summary__info--value\">\r\n          {{ quoteDetails.city_name }}</span\r\n        >\r\n      </div>\r\n      <div>\r\n        <span class=\"quote-summary__info--label\">Zipcode :</span>\r\n        <span class=\"quote-summary__info--value\">{{\r\n          quoteDetails.is_zip_code\r\n        }}</span>\r\n      </div>\r\n    </div>\r\n    <ag-grid-angular\r\n      [gridOptions]=\"gridOptions\"\r\n      style=\"height: 600px; width: 100%\"\r\n      class=\"ag-theme-alpine quotes-table\"\r\n      [rowData]=\"rowData | async\"\r\n      [frameworkComponents]=\"frameworkComponents\"\r\n      [pinnedBottomRowData]=\"pinnedBottomRowData\"\r\n      [defaultColDef]=\"defaultColDef\"\r\n      [columnDefs]=\"columnDefs\"\r\n    >\r\n    </ag-grid-angular>\r\n    <div\r\n      class=\"quote-summary__actions\"\r\n      fxLayout=\"row\"\r\n      fxLayoutAlign=\"center\"\r\n      fxLayoutGap=\"2rem\"\r\n    >\r\n      <ng-content [select]=\"actions\"> </ng-content>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { EnvironmentService } from 'projects/core/src/lib/services/environment.service';\r\nimport { HttpService, UserService } from 'projects/core/src/public-api';\r\nimport { Observable } from 'rxjs';\r\nimport { QuoteFormType } from './quote-create-form.component';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class QuoteCreateFormService {\r\n  constructor(\r\n    private _http: HttpService,\r\n    private _env: EnvironmentService,\r\n    private _user: UserService\r\n  ) {}\r\n\r\n  private getParams(form: FormGroup) {\r\n    let obj = form.value;\r\n    obj.user_id = this._user.getUser().getId();\r\n    obj.userid = this._user.getUser().getId();\r\n    return obj;\r\n  }\r\n\r\n  createQuote(obj: FormGroup, type: QuoteFormType): Observable<any> {\r\n    obj = this.getParams(obj);\r\n\r\n    let url = 'save/quote';\r\n    // if (type === 'EDIT') {\r\n    //   url = 'save/quote';\r\n    // }\r\n    if (type === 'COPY') {\r\n      url = 'clone/quote';\r\n    }\r\n    return this._http.sendPOSTRequest(\r\n      this._env.getEndPoint() + url,\r\n      JSON.stringify(obj)\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { EnvironmentService } from 'projects/core/src/lib/services/environment.service';\r\nimport { HttpService, UserService } from 'projects/core/src/public-api';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class QuoteHeaderService {\r\n  constructor(\r\n    private _http: HttpService,\r\n    private _env: EnvironmentService,\r\n    private _user: UserService\r\n  ) {}\r\n\r\n  getQuoteSummary<T>(quoteId: any): Observable<T> {\r\n    return this._http.sendGETRequest(\r\n      this._env.getEndPoint() + 'quote/items?quote_id=' + quoteId\r\n    );\r\n  }\r\n\r\n  getUnitQuoteSummary<T>(unitId: any, floorplanId: any, quoteId: any): Observable<T> {\r\n    const data = {'unit_id':unitId,'floorplan_id':floorplanId,'quote_id': quoteId};\r\n    return this._http.sendPOSTRequest(\r\n      this._env.getEndPoint() + 'load/floorplan/unit/products', JSON.stringify(data)\r\n    );\r\n  }\r\n\r\n  getMoodboardInQuote<T>(quoteId: number): Observable<T> {\r\n    let data = {\r\n      quote_id: quoteId,\r\n    };\r\n    return this._http.sendPOSTRequest(\r\n      this._env.getEndPoint() + 'quote/defaultUnit/MbAndIndivisualProds',\r\n      JSON.stringify(data)\r\n    );\r\n  }\r\n\r\n  getQuoteInformation<T>(quoteId: number): Observable<T> {\r\n    return this._http\r\n      .sendGETRequest(\r\n        this._env.getEndPoint() + 'load/quote/info?quote_id=' + quoteId\r\n      )\r\n      .pipe(map((data: any) => data.quote));\r\n  }\r\n\r\n  getMoodBoardByUser(): Observable<[]> {\r\n    return this._http.sendPOSTRequest(\r\n      this._env.getEndPoint() + 'getMoodBoardByUser',\r\n      JSON.stringify({ userid: this._user.getUser().getId() })\r\n    );\r\n  }\r\n\r\n  addMoodboard(quoteId: number, moodboardId: number) {\r\n    let obj = {\r\n      moodboard_id: moodboardId,\r\n      quote_id: quoteId,\r\n      user_id: this._user.getUser().getId(),\r\n    };\r\n    return this._http.sendPOSTRequest(\r\n      this._env.getEndPoint() + 'add/defaultunit/moodboard',\r\n      JSON.stringify(obj)\r\n    );\r\n  }\r\n\r\n  // default unit\r\n  addMDtoFloorPlan(): Observable<any> {\r\n    return this._http.sendGETRequest('');\r\n  }\r\n\r\n  getMoodboardItems(mdId: number): Observable<any> {\r\n    return this._http.sendPOSTRequest(\r\n      this._env.getEndPoint() + 'load/moodboard/items',\r\n      JSON.stringify({ moodboard_id: mdId })\r\n    );\r\n  }\r\n\r\n  addMDtoUnit(): Observable<any> {\r\n    return this._http.sendGETRequest('');\r\n  }\r\n  removeMDfromQuote(quoteId: number, moodboardId: number): Observable<any> {\r\n    return this._http.sendPOSTRequest(\r\n      this._env.getEndPoint() + 'removeMoodBoardFromQuote',\r\n      JSON.stringify({ quote_id: quoteId, moodboard_id: moodboardId })\r\n    );\r\n  }\r\n  removeProductfromQuote(quoteId: number, item_id: number): Observable<any> {\r\n    return this._http.sendPOSTRequest(\r\n      this._env.getEndPoint() + 'remove/quote/items',\r\n      JSON.stringify({ quote_id: quoteId, item_id: item_id, })\r\n    );\r\n  }\r\n  \r\n}\r\n","import { Routes } from '@angular/router';\r\nimport { FloorPlanDetailsComponent } from './common/components/floor-plan-details/floor-plan-details.component';\r\nimport { FloorPlanUnitComponent } from './components/floor-plan-unit/floor-plan-unit.component';\r\nimport { QuoteCreateComponent } from './components/quote-create/quote-create.component';\r\nimport { QuoteDetailComponent } from './components/quote-detail/quote-detail.component';\r\nimport { QuoteListComponent } from './components/quote-list/quote-list.component';\r\nimport { QuoteComponent } from './components/quote/quote.component';\r\n\r\nexport const quoteRoute: Routes = [\r\n  {\r\n    path: '',\r\n    component: QuoteComponent,\r\n    children: [\r\n      {\r\n        path: '',\r\n        component: QuoteListComponent,\r\n      },\r\n      {\r\n        path: 'create',\r\n        component: QuoteCreateComponent,\r\n      },\r\n      {\r\n        path: 'edit',\r\n        component: QuoteCreateComponent,\r\n      },\r\n      {\r\n        path: 'copy',\r\n        component: QuoteCreateComponent,\r\n      },\r\n      {\r\n        path: ':id',\r\n        component: QuoteDetailComponent,\r\n      },\r\n      {\r\n        path: ':id/:fpId',\r\n        component: FloorPlanDetailsComponent,\r\n      }, {\r\n        path: ':id/floor-plan-unit/:fpId/unit/:unit_id',\r\n        component: FloorPlanUnitComponent,\r\n      }\r\n    ],\r\n  },\r\n];\r\n","import { Component, Input, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'lib-delete-item',\r\n  templateUrl: './delete-item.component.html',\r\n  styleUrls: ['./delete-item.component.scss']\r\n})\r\nexport class DeleteItemComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<span class=\"material-icons md-18 icon\"> delete</span>\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { UserService, ToasterService } from 'projects/core/src/public-api';\r\nimport { QuoteService } from '../../../quote.service';\r\nimport { AddFPComponent } from '../add-fp/add-fp.component';\r\n\r\n@Component({\r\n  selector: 'lib-add-fpu',\r\n  templateUrl: './add-fpu.component.html',\r\n  styleUrls: ['./add-fpu.component.scss'],\r\n})\r\nexport class AddFPUComponent implements OnInit {\r\n  fpuFormGroup = new FormGroup({});\r\n  quoteId = '';\r\n  floorPlanTypes: Array<any> = [\r\n    {\r\n      name: 'Studio',\r\n      sgid: 1,\r\n    },\r\n    {\r\n      name: '1 Bedroom',\r\n      sgid: 2,\r\n    },\r\n    {\r\n      name: '2 Bedroom',\r\n      sgid: 3,\r\n    },\r\n    {\r\n      name: '3 Bedroom',\r\n      sgid: 4,\r\n    },\r\n    {\r\n      name: '4 Bedroom',\r\n      sgid: 5,\r\n    },\r\n    {\r\n      name: '5 Bedroom',\r\n      sgid: 6,\r\n    },\r\n    {\r\n      name: '6 Bedroom',\r\n      sgid: 7,\r\n    },\r\n    {\r\n      name: '7 Bedroom',\r\n      sgid: 8,\r\n    },\r\n    {\r\n      name: '8 Bedroom',\r\n      sgid: 9,\r\n    },\r\n    {\r\n      name: '9 Bedroom',\r\n      sgid: 10,\r\n    },\r\n    {\r\n      name: '10 Bedroom',\r\n      sgid: 11,\r\n    },\r\n  ];\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public dialogData: any,\r\n    private _user: UserService,\r\n    private _quoteService: QuoteService,\r\n    private _toaster: ToasterService,\r\n    private _dialogRef: MatDialogRef<AddFPComponent>\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.quoteId = this.dialogData.quoteId;\r\n    this.fpuFormGroup.addControl(\r\n      'units',\r\n      new FormControl('', [Validators.required])\r\n    );\r\n    this.fpuFormGroup.addControl('floorplan_name', new FormControl(''));\r\n    this.fpuFormGroup.addControl('floorplan_type_id', new FormControl(''));\r\n  }\r\n\r\n  onSubmit() {\r\n    if(this.fpuFormGroup.value.floorplan_name){\r\n      if(!this.fpuFormGroup.value.floorplan_type_id){\r\n        this._toaster.warning('Please select floor plan type')\r\n        return;\r\n      }\r\n    }\r\n    let obj = this.fpuFormGroup.value;\r\n    obj.quote_id = this.quoteId;\r\n    obj.userid = this._user.getUser().getId();\r\n    this._quoteService.addOptionalUnits(obj).subscribe((resp) => {\r\n      if (resp.statusCode) {\r\n        this._toaster.success(resp.message);\r\n        this._dialogRef.close(1)\r\n      } else {\r\n        this._toaster.error(resp.message);\r\n        this._dialogRef.close(0)\r\n      }\r\n    });\r\n  }\r\n}\r\n","<div\r\n  fxLayout=\"row\"\r\n  style=\"width: 100%; cursor: pointer\"\r\n  fxLayoutAlign=\"space-between start\"\r\n>\r\n  <span></span>\r\n  <div class=\"h1\" style=\"margin-bottom: 1rem\">ADD UNIT</div>\r\n  <i class=\"fa fa-times\" mat-dialog-close aria-hidden=\"true\"></i>\r\n</div>\r\n<div style=\"margin-bottom: 1rem\" mat-dialog-content>\r\n  <form [formGroup]=\"fpuFormGroup\" fxLayout=\"column\" action=\"\">\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n      <mat-label fxFlex=\"50\">No of Units*</mat-label>\r\n      <mat-form-field fxFlex=\"50\" appearance=\"outline\">\r\n        <input formControlName=\"units\" matInput />\r\n      </mat-form-field>\r\n    </div>\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n      <mat-label fxFlex=\"50\">Floor Plan Name (Optional)</mat-label>\r\n      <mat-form-field fxFlex=\"50\" appearance=\"outline\">\r\n        <input formControlName=\"floorplan_name\" matInput />\r\n      </mat-form-field>\r\n    </div>\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n      <mat-label fxFlex=\"50\">Floor Plan Type (Optional)</mat-label>\r\n      <mat-form-field fxFlex=\"50\" appearance=\"outline\">\r\n        <mat-select formControlName=\"floorplan_type_id\">\r\n          <mat-option *ngFor=\"let type of floorPlanTypes\" [value]=\"type.sgid\">\r\n            {{ type.name }}\r\n          </mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n    </div>\r\n  </form>\r\n</div>\r\n<div mat-dialog-actions fxLayoutAlign=\"center\">\r\n  <button [disabled]=\"fpuFormGroup.invalid\" (click)=\"onSubmit()\" mat-flat-button color=\"accent\">ADD</button>\r\n  <button mat-flat-button mat-dialog-close color=\"primary\">\r\n    CANCEL\r\n  </button>\r\n</div>\r\n","<span  *ngIf=\"status === 1\">Buy</span>\r\n<span  *ngIf=\"status === 0\">Rent</span>\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { ICellRendererAngularComp } from 'ag-grid-angular';\r\nimport { ICellRendererComp, ICellRendererParams } from 'ag-grid-community';\r\n\r\n@Component({\r\n  selector: 'lib-item-type',\r\n  templateUrl: './item-type.component.html',\r\n  styleUrls: ['./item-type.component.scss'],\r\n})\r\nexport class ItemTypeComponent implements OnInit, ICellRendererAngularComp {\r\n   @Input() status = 0;\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  agInit(params: ICellRendererParams): void {\r\n    this.status = params.data.button_type;\r\n  }\r\n\r\n  refresh(params: ICellRendererParams): boolean {\r\n    this.status = params.data.button_type;\r\n    return false;\r\n  }\r\n}\r\n","import { Location } from '@angular/common';\r\nimport { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { ActivatedRoute, Params, Route, Router } from '@angular/router';\r\nimport {\r\n  GridOptions,\r\n  GridReadyEvent,\r\n  ICellRendererParams,\r\n} from 'ag-grid-community';\r\nimport {\r\n  CounterComponent,\r\n  DialogService,\r\n  ImageRendererComponent,\r\n  ToasterService,\r\n} from 'projects/core/src/public-api';\r\nimport { QuoteService } from '../../../quote.service';\r\nimport { DeleteItemComponent } from '../delete-item/delete-item.component';\r\nimport { MoodboardComponent } from '../moodboard/moodboard.component';\r\nimport { ItemTypeComponent } from './../../../common/components/item-type/item-type.component';\r\nimport { TotalCellRendererComponent } from './../../../common/components/total-cell-renderer/total-cell-renderer.component';\r\nimport { FloorPlanDetailsService } from './floor-plan-details.service';\r\n\r\n@Component({\r\n  selector: 'lib-floor-plan-details',\r\n  templateUrl: './floor-plan-details.component.html',\r\n  styleUrls: ['./floor-plan-details.component.scss'],\r\n})\r\nexport class FloorPlanDetailsComponent implements OnInit {\r\n  @ViewChild('dialog') dialog: TemplateRef<any> = {} as TemplateRef<any>;\r\n  page: 'ORDER' | 'QUOTE' = 'QUOTE';\r\n  quoteId = '';\r\n  fpId = '';\r\n  unitId = '';\r\n  unitName = '';\r\n  noOfUnits = '';\r\n  unitInfo: any = '';\r\n  fpDetails: any = {};\r\n  moodboardList: Array<any> = [];\r\n  moodboardWithUnitList: Array<any> = [];\r\n  fpUnitList: Array<any> = [];\r\n  quoteMDList = [\r\n    { name: '1', unitmoodboards: {} },\r\n    { name: '2', unitmoodboards: {} },\r\n  ];\r\n  rowData: Array<any> = [];\r\n  fpGridApi: GridOptions = {} as GridOptions;\r\n  fpRowData = [];\r\n  fpColumnDefs = [\r\n    {\r\n      field: 'sgid',\r\n      width: 140,\r\n      headerName: '',\r\n      headerTooltip: '',\r\n      colSpan: (params: any) => (params.data.subTotal === 'abc' ? 10 : 1),\r\n      cellStyle: (params: any) => {\r\n        if (params.data.subTotal === 'abc') {\r\n          return { 'text-align': 'end' };\r\n        }\r\n        return '';\r\n      },\r\n    },\r\n    { field: 'warehouse_name', headerName: 'CITY' },\r\n    { field: 'sku', headerName: 'SKU' },\r\n    {\r\n      headerName: 'IMAGE',\r\n      cellRenderer: 'ImageRendererComponent',\r\n      field: 'product_images.small',\r\n      cellStyle: {\r\n        padding: '0.3rem',\r\n      },\r\n      // valueGetter: async (params:ICellRendererParams)=>{\r\n      // let x = await this._core.getBase64Image(params?.data?.product_images?.small).toPromise();\r\n      // return 'data:image/jpeg;base64' + x?.imageurl;\r\n      // }\r\n    },\r\n    {\r\n      headerName: 'PRODUCT NAME',\r\n      field: 'name',\r\n      width: '250px',\r\n    },\r\n    {\r\n      headerName: 'TYPE',\r\n      field: 'button_type',\r\n      cellRenderer: 'ItemTypeCellRenderer',\r\n      valueGetter: (params: ICellRendererParams) => {\r\n        return params.data.button_type === 0 ? 'Rent' : 'Buy';\r\n      },\r\n    },\r\n    {\r\n      headerName: 'QUANTITY',\r\n      field: 'is_qty',\r\n      cellRenderer: 'CounterCellRenderer',\r\n    },\r\n    {\r\n      headerName: 'BUY PRICE ($)',\r\n      field: 'buy_price',\r\n      valueGetter: (params: ICellRendererParams) => {\r\n        return params.data.button_type === 1 ? params.data.buy_price : 'NA';\r\n      },\r\n    },\r\n    {\r\n      headerName: 'RENTAL PRICE ($) /MONTH',\r\n      field: 'price',\r\n      cellRenderer: (params: ICellRendererParams) => {\r\n        return params.data.button_type === 0 ? params.value : 'NA';\r\n      },\r\n    },\r\n    // { headerName: 'DISCOUNT ($)', field: 'discount' },\r\n\r\n    {\r\n      headerName: 'MONTHS',\r\n      field: 'months',\r\n    },\r\n    {\r\n      headerName: 'TOTAL ($)',\r\n      field: 'is_total',\r\n      cellRenderer: 'TotalCellRendererComponent',\r\n    },\r\n  ];\r\n  pinnedBottomRowData = [\r\n    {\r\n      subTotal: 'abc',\r\n      sgid: 'SUB TOTAL ($)',\r\n      is_total: '0',\r\n      isExtraRow: true,\r\n    },\r\n    {\r\n      subTotal: 'abc',\r\n      sgid: 'DELIVERY FEE ($)',\r\n      is_total: '0',\r\n      isExtraRow: true,\r\n    },\r\n    {\r\n      subTotal: 'abc',\r\n      sgid: 'TAXES ($)',\r\n      is_total: '0',\r\n      isExtraRow: true,\r\n      taxPercent : '1'\r\n    },\r\n    {\r\n      subTotal: 'abc',\r\n      sgid: 'TOTAL ($)',\r\n      is_total: '0',\r\n      isExtraRow: true,\r\n    },\r\n  ];\r\n  frameworkComponents = {\r\n    ImageRendererComponent: ImageRendererComponent,\r\n    TotalCellRendererComponent: TotalCellRendererComponent,\r\n    ItemTypeCellRenderer: ItemTypeComponent,\r\n    CounterCellRenderer: CounterComponent,\r\n    DeleteItemComponent: DeleteItemComponent,\r\n  };\r\n  columnDefs = [\r\n    { field: 'sub_total', headerName: 'SUB TOTAL (Monthly Rent) ($)' },\r\n    { field: 'delivery_fee', headerName: 'DELIVERY FEE ($)' },\r\n    { field: 'tax_amount', headerName: 'TAXES ($)' },\r\n    { field: 'net_total', headerName: 'TOTAL AMOUNT ($)' },\r\n    {\r\n      field: 'pickup_fee',\r\n      headerName: 'PICKUP FEE (Charged at the end of the lease)',\r\n    },\r\n  ];\r\n  gridOptions: GridOptions = {\r\n    onGridReady: (api: GridReadyEvent) => {\r\n      this.onGridReady(api);\r\n    },\r\n    context:this,\r\n    rowHeight: 80,\r\n  };\r\n  defaultColDef = {\r\n    wrapText: true,\r\n    cellClass: 'grid-cell',\r\n    cellStyle: {\r\n      'line-height': 'normal',\r\n      'align-items': 'center',\r\n      'justify-content': 'center',\r\n      display: 'flex',\r\n      padding: '0 0.5rem',\r\n    },\r\n  };\r\n  fpGridOptions: GridOptions = {\r\n    rowHeight: 60,\r\n    context:this,\r\n    onGridReady: (api: GridReadyEvent) => {\r\n      this.fpGridApi = api;\r\n      this.onGridReady(api);\r\n    },\r\n  };\r\n  constructor(\r\n    private _fpSevice: FloorPlanDetailsService,\r\n    private _route: ActivatedRoute,\r\n    private _location: Location,\r\n    private _toaster: ToasterService,\r\n    private _matDialog: MatDialog,\r\n    private _dialog: DialogService,\r\n    private _router: Router,\r\n    private _quoteService: QuoteService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    if (this._router.url.indexOf('quote') >= 0) {\r\n      this.page = 'QUOTE';\r\n    } else {\r\n      this.page = 'ORDER';\r\n    }\r\n    this._route.params.subscribe((params: Params) => {\r\n      this.quoteId = params.id;\r\n      this.fpId = params.fpId;\r\n      this.getFloorPlanDetails();\r\n      this.getMoodBoards();\r\n      this.getFloorPlanUnits();\r\n      this.getMoodboardWithUnits();\r\n    });\r\n  }\r\n\r\n  counterFComponentUpdate(params: ICellRendererParams) {\r\n    let data = params.data;\r\n    let obj = [\r\n      {\r\n        items: [\r\n          {\r\n            months: data.months,\r\n            qty: data.is_qty,\r\n            price: data.price,\r\n            buy_price: data.buy_price,\r\n            sale_price: data.is_sale_price,\r\n            total_price: data.is_total,\r\n            discount: data.discount,\r\n            b2b_discount: data.b2b_discount,\r\n            sgid: data.id,\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        unit: [\r\n          {\r\n            sgid: this.unitInfo.sgid,\r\n            name: this.unitInfo.name,\r\n            pickup_fee: this.unitInfo.pickup_fee,\r\n            delivery_fee: this.unitInfo.delivery_fee,\r\n          },\r\n        ],\r\n      },\r\n      { quote_id: this.quoteId },\r\n    ];\r\n\r\n    this._quoteService.updateFloorPlanUnitProduct(obj).subscribe((resp) => {\r\n      if (resp.statusCode == 200) {\r\n        this._toaster.success(resp.result);\r\n        this.getFPSummary(this.unitInfo);\r\n      } else {\r\n        this._toaster.error(resp.result);\r\n      }\r\n    });\r\n  }\r\n\r\n  refresh() {\r\n    this.getFloorPlanDetails();\r\n    this.getMoodBoards();\r\n    this.getFloorPlanUnits();\r\n    this.getMoodboardWithUnits();\r\n  }\r\n\r\n  back() {\r\n    let route = this.page == 'ORDER' ? 'order' : 'quote';\r\n    this._router.navigate([route, this.quoteId]);\r\n  }\r\n  onClickMDorProduct(ab: any) {}\r\n\r\n  openAddMoodboardDialog() {\r\n    this._matDialog\r\n      .open(MoodboardComponent, {\r\n        width: '50%',\r\n        data: { quoteId: this.quoteId, fpId: this.fpId },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((data) => {\r\n        if (data) {\r\n          this.refresh();\r\n        }\r\n      });\r\n  }\r\n  onGridReady(evt: GridReadyEvent) {\r\n    evt.api.sizeColumnsToFit();\r\n  }\r\n\r\n  getMoodBoards() {\r\n    this._fpSevice.getMoodBoards(this.quoteId, this.fpId).subscribe((data) => {\r\n      if (data.statusCode == 200) {\r\n        this.moodboardList = data.floorplans;\r\n      } else {\r\n        this.moodboardList = [];\r\n      }\r\n    });\r\n  }\r\n\r\n  getFloorPlanUnits() {\r\n    this._fpSevice\r\n      .getFloorPlanUnits(this.quoteId, this.fpId)\r\n      .subscribe((data: any) => {\r\n        if (data.statusCode) {\r\n          this.fpUnitList = data?.result;\r\n          this.getFPSummary(data?.result[0]);\r\n        } else {\r\n          this.fpUnitList = [];\r\n        }\r\n      });\r\n  }\r\n  getFPSummary(unit: any) {\r\n    this.unitInfo = unit;\r\n    this.unitId = unit?.sgid;\r\n    this.unitName = unit?.name;\r\n    if (!this.unitId) {\r\n      return;\r\n    }\r\n    this._fpSevice\r\n      .getFPSummary(this.quoteId, this.fpId, this.unitId)\r\n      .subscribe((resp) => {\r\n        this.fpRowData = resp.result.map((item: any, index: number) => {\r\n          item.isDeleteOption = true;\r\n          item.id= item.sgid;\r\n          item.sgid = index + 1;\r\n          item.userid = resp.floorplan.userid;\r\n          item.order_status = this.page == 'ORDER';\r\n          return item;\r\n        });\r\n        this.updateBottomData(resp.unit, resp.sales_tax_rate);\r\n        this.setTotalFPSummary(resp.floorplan);\r\n        this.fpGridApi?.api?.redrawRows();\r\n      });\r\n  }\r\n\r\n  setTotalFPSummary(fp: any) {\r\n    this.rowData = [fp];\r\n  }\r\n  updateBottomData(data: any, tax: string) {\r\n    this.pinnedBottomRowData[1].is_total = data?.delivery_fee;\r\n    this.pinnedBottomRowData[2].sgid = 'TAXES (' + tax + '%)';\r\n    this.pinnedBottomRowData[2].is_total = data?.tax_amount;\r\n    this.pinnedBottomRowData[2].taxPercent = tax;\r\n    this.pinnedBottomRowData[3].is_total = data?.tax_amount;\r\n  }\r\n\r\n  getFloorPlanDetails() {\r\n    this._fpSevice\r\n      .getFloorPlanDetails(this.quoteId, this.fpId)\r\n      .subscribe((resp) => {\r\n        if (resp.statusCode == 200) {\r\n          this.fpDetails = resp?.result[0];\r\n        } else {\r\n          this.fpDetails = {};\r\n        }\r\n      });\r\n  }\r\n  changeUnitName() {\r\n    this._fpSevice\r\n      .changeUnitName(this.quoteId, this.unitId, this.unitName)\r\n      .subscribe((data) => {\r\n        if (data.statusCode == 200) {\r\n          this._toaster.success(data.result);\r\n          this.refresh();\r\n        } else {\r\n          this._toaster.success(data.result);\r\n        }\r\n      });\r\n  }\r\n\r\n  removeUnitFromFP(unit: any) {\r\n    this._dialog\r\n      .openConformationDialog({\r\n        title: 'REMOVE UNIT FROM FLOOR PLAN',\r\n        suTitle: 'Are you sure you want to delete?',\r\n        width: '50%',\r\n      })\r\n      .afterClosed()\r\n      .subscribe((data) => {\r\n        if (data) {\r\n          this._fpSevice\r\n            .removeUnitFromFp(this.quoteId, unit?.name, unit?.sgid)\r\n            .subscribe((resp) => {\r\n              if (resp.statusCode == 200) {\r\n                this._toaster.success(resp.message);\r\n                this.refresh();\r\n              } else {\r\n                this._toaster.success(resp.message);\r\n              }\r\n            });\r\n        }\r\n      });\r\n  }\r\n\r\n  getMoodboardWithUnits() {\r\n    this._fpSevice.getMoodboardWithUnits(this.quoteId, this.fpId).subscribe(\r\n      (resp) => {\r\n        if (resp.statusCode == 200) {\r\n          this.moodboardWithUnitList = resp.result;\r\n        } else {\r\n          this._toaster.error(resp?.message);\r\n        }\r\n      },\r\n      (error) => {\r\n        this._toaster.error(error?.message);\r\n      }\r\n    );\r\n  }\r\n\r\n  addUnitsToFp() {\r\n    this._fpSevice\r\n      .addUnitsToFp(this.quoteId, this.fpId, this.noOfUnits)\r\n      .subscribe((data) => {\r\n        if (data.statusCode == 200) {\r\n          this._toaster.success(data.message);\r\n          this.refresh();\r\n        } else {\r\n          this._toaster.success(data.message);\r\n        }\r\n      });\r\n  }\r\n\r\n  removeMoodboardFromFP(moodboard: any) {\r\n    this._dialog\r\n      .openConformationDialog({\r\n        title: 'REMOVE MOODBOARD FROM FLOOR PLAN',\r\n        suTitle: 'Are you sure you want to delete?',\r\n        width: '50%',\r\n      })\r\n      .afterClosed()\r\n      .subscribe((data) => {\r\n        if (data) {\r\n          this._fpSevice\r\n            .removeMoodboardFromFP(\r\n              this.quoteId,\r\n              this.fpId,\r\n              moodboard.moodboard_id\r\n            )\r\n            .subscribe((resp) => {\r\n              if (resp.statusCode == 200) {\r\n                this._toaster.success(resp.result);\r\n                this.refresh();\r\n              } else {\r\n                this._toaster.success(resp.result);\r\n              }\r\n            });\r\n        }\r\n      });\r\n  }\r\n\r\n  openAddDialog() {\r\n    this._matDialog\r\n      .open(this.dialog)\r\n      .afterClosed()\r\n      .subscribe((data) => {\r\n        if (data) {\r\n          this.refresh();\r\n        }\r\n      });\r\n  }\r\n}\r\n","<div class=\"fp\" fxLayout=\"column\" fxLayoutGap=\"1.5rem\">\r\n  <div class=\"fp-col\" fxLayout=\"column\" fxLayoutGap=\"1rem\">\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"1rem\">\r\n      <mat-icon class=\"back\"\r\n        ><span (click)=\"back()\" class=\"material-icons\">\r\n          arrow_back\r\n        </span></mat-icon\r\n      >\r\n      <span\r\n        >Back to {{ page == \"QUOTE\" ? \"Quote\" : \"Order\" }}/\r\n        {{ fpDetails?.floorname }}</span\r\n      >\r\n    </div>\r\n    <mat-divider></mat-divider>\r\n    <div fxLayout=\"row\" fxLayoutGap=\"2rem\">\r\n      <div><span class=\"h2\">FLOOR PLAN:</span> {{ fpDetails?.floorname }}</div>\r\n      <button class=\"round filter-button\" mat-flat-button>\r\n        {{ fpDetails?.floorplan_mb_cnt }} Moodboards\r\n      </button>\r\n      <button class=\"round filter-button\" mat-flat-button>\r\n        {{ fpDetails?.total_unit }} Units\r\n      </button>\r\n      <button class=\"round filter-button\" mat-flat-button>\r\n        {{ fpDetails?.floorplan_type_name }}\r\n      </button>\r\n    </div>\r\n    <div class=\"fp__container\" fxLayout=\"row\" fxLayoutGap=\"1rem\">\r\n      <div\r\n        *ngIf=\"page == 'QUOTE'\"\r\n        fxLayout=\"column\"\r\n        class=\"fp__container--unit-add g-box-shadow\"\r\n      >\r\n        <button mat-icon-button (click)=\"openAddDialog()\">\r\n          <span class=\"material-icons\"> add_circle_outline </span>\r\n        </button>\r\n      </div>\r\n      <div\r\n        fxLayout=\"column\"\r\n        *ngFor=\"let unit of fpUnitList\"\r\n        class=\"fp__container--unit g-box-shadow\"\r\n      >\r\n        <i\r\n          *ngIf=\"page == 'QUOTE'\"\r\n          (click)=\"removeUnitFromFP(unit)\"\r\n          class=\"fa fa-times icon\"\r\n          aria-hidden=\"true\"\r\n        ></i>\r\n        <div class=\"h2\">{{ unit.name }}</div>\r\n        <div class=\"h3\">Unit</div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"fp-col odd\" fxLayout=\"column\" fxLayoutGap=\"1rem\">\r\n    <div class=\"h2\">ADD/MANAGE MOODBOARDS</div>\r\n    <div\r\n      class=\"fp__container\"\r\n      fxLayout=\"row wrap\"\r\n      fxLayoutAlign=\"start\"\r\n      fxLayoutGap=\"1rem\"\r\n    >\r\n      <div\r\n        fxFlex=\"10\"\r\n        *ngIf=\"page == 'QUOTE'\"\r\n        class=\"fp__container--item\"\r\n        fxLayoutAlign=\"center center\"\r\n        fxLayout=\"column\"\r\n        (click)=\"openAddMoodboardDialog()\"\r\n      >\r\n        <mat-icon class=\"icon\" inline=\"true\">add_circle_outline</mat-icon>\r\n      </div>\r\n      <div\r\n        fxFlex=\"10\"\r\n        class=\"fp__container--item\"\r\n        [ngClass]=\"{}\"\r\n        *ngFor=\"let moodboard of moodboardList\"\r\n        fxLayout=\"column\"\r\n      >\r\n        <i\r\n          *ngIf=\"page == 'QUOTE'\"\r\n          (click)=\"removeMoodboardFromFP(moodboard)\"\r\n          class=\"fa fa-times icon\"\r\n          aria-hidden=\"true\"\r\n        ></i>\r\n        <img\r\n          height=\"110px\"\r\n          width=\"auto\"\r\n          (click)=\"onClickMDorProduct(moodboard)\"\r\n          [src]=\"moodboard?.is_moodboard_images?.small\"\r\n          alt=\"Moodboard\"\r\n        />\r\n        <p>{{ moodboard?.moodboard_name }}</p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"fp-col odd\" fxLayout=\"column\" fxLayoutGap=\"1rem\">\r\n    <div class=\"h2\">MOODBOARD & UNITS</div>\r\n    <div\r\n      class=\"fp__container\"\r\n      fxLayout=\"row\"\r\n      *ngFor=\"let md of moodboardWithUnitList\"\r\n      fxLayoutGap=\"1rem\"\r\n    >\r\n      <div class=\"fp__container_moodboard\">\r\n        <img\r\n          [src]=\"md?.moodboard_images?.small\"\r\n          height=\"100px\"\r\n          width=\"100px\"\r\n          alt=\"\"\r\n        />\r\n        <p class=\"h3\">{{ md.moodboard_name }}</p>\r\n      </div>\r\n      <mat-divider vertical=\"true\"></mat-divider>\r\n      <div\r\n        fxFlex\r\n        fxLayout=\"row\"\r\n        fxLayoutAlign=\"start center\"\r\n        fxLayoutGap=\"1rem\"\r\n        class=\"fp__container_units\"\r\n      >\r\n        <div\r\n          fxLayout=\"column\"\r\n          *ngFor=\"let unit of md?.unit_ids\"\r\n          class=\"fp__container--unit g-box-shadow\"\r\n        >\r\n          <div class=\"h2\">{{ unit.name }}</div>\r\n          <div class=\"h3\">Unit</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"fp-col odd\" fxLayout=\"column\" fxLayoutGap=\"1rem\">\r\n    <div class=\"h2\">UNIT SUMMARY</div>\r\n    <div class=\"fp__container\" fxLayout=\"column\" fxLayoutGap=\"1rem\">\r\n      <div\r\n        fxFlex\r\n        fxLayout=\"row\"\r\n        fxLayoutAlign=\"start center\"\r\n        fxLayoutGap=\"1rem\"\r\n        class=\"fp__container_units\"\r\n      >\r\n        <div\r\n          fxLayout=\"column\"\r\n          *ngFor=\"let unit of fpUnitList\"\r\n          class=\"fp__container--unit g-box-shadow\"\r\n          [ngClass]=\"{ selected: unitId == unit.sgid }\"\r\n          (click)=\"getFPSummary(unit)\"\r\n        >\r\n          <div class=\"h2\">{{ unit.name }}</div>\r\n          <div class=\"h3\">Unit</div>\r\n        </div>\r\n      </div>\r\n      <div\r\n        class=\"fp__container--input\"\r\n        fxLayout=\"row\"\r\n        fxLayoutAlign=\"start center\"\r\n        fxLayoutGap=\"2rem\"\r\n      >\r\n        <mat-label class=\"h3\">Unit Name:</mat-label>\r\n        <mat-form-field appearance=\"outline\">\r\n          <input [(ngModel)]=\"unitName\" matInput />\r\n        </mat-form-field>\r\n        <button\r\n          *ngIf=\"page == 'QUOTE'\"\r\n          class=\"round\"\r\n          mat-flat-button\r\n          color=\"primary\"\r\n          (click)=\"changeUnitName()\"\r\n        >\r\n          Change Unit Name\r\n        </button>\r\n      </div>\r\n      <ag-grid-angular\r\n        [gridOptions]=\"fpGridOptions\"\r\n        style=\"height: 600px; width: 100%\"\r\n        class=\"ag-theme-alpine fp__container--grid quotes-table\"\r\n        [rowData]=\"fpRowData\"\r\n        [columnDefs]=\"fpColumnDefs\"\r\n        [pinnedBottomRowData]=\"pinnedBottomRowData\"\r\n        [frameworkComponents]=\"frameworkComponents\"\r\n        [defaultColDef]=\"defaultColDef\"\r\n      >\r\n      </ag-grid-angular>\r\n    </div>\r\n  </div>\r\n  <div class=\"fp-col odd\" fxLayout=\"column\" fxLayoutGap=\"1rem\">\r\n    <div class=\"h2\">TOTAL FLOOR PLAN SUMMARY</div>\r\n    <div class=\"fp__container\">\r\n      <ag-grid-angular\r\n        [gridOptions]=\"gridOptions\"\r\n        style=\"height: 131px; width: 100%\"\r\n        class=\"ag-theme-alpine quotes-table\"\r\n        [rowData]=\"rowData\"\r\n        [columnDefs]=\"columnDefs\"\r\n        [defaultColDef]=\"defaultColDef\"\r\n      >\r\n      </ag-grid-angular>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<ng-template #dialog>\r\n  <div fxLayout=\"column\" fxLayoutAlign=\"center center\">\r\n    <div class=\"h2\">ADD NUMBER OF UNITS</div>\r\n    <mat-dialog-content>\r\n      <div fxLayout=\"row\" fxLayoutGap=\"2rem\" fxLayoutAlign=\"center center\">\r\n        <mat-label> No. of units:</mat-label>\r\n        <mat-form-field appearance=\"outline\">\r\n          <input type=\"text\" [(ngModel)]=\"noOfUnits\" matInput />\r\n        </mat-form-field>\r\n      </div>\r\n    </mat-dialog-content>\r\n    <mat-dialog-actions>\r\n      <button mat-flat-button (click)=\"addUnitsToFp()\" color=\"accent\">\r\n        ADD\r\n      </button>\r\n    </mat-dialog-actions>\r\n  </div>\r\n</ng-template>\r\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || from);\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { EnvironmentService, HttpService } from 'projects/core/src/public-api';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class QuoteService {\r\n  constructor(private http: HttpService, private env: EnvironmentService) {}\r\n  getCompanyList(): Observable<any> {\r\n    return this.http.sendGETRequest(\r\n      this.env.getEndPoint() + 'getCompanyListNew'\r\n    );\r\n  }\r\n\r\n  getProjectList(companyId: any): Observable<any> {\r\n    return this.http.sendGETRequest(\r\n      this.env.getEndPoint() + 'getProjectListNew?company_id=' + companyId\r\n    );\r\n  }\r\n\r\n  getFloorPlan(quoteId: number): Observable<any> {\r\n    return this.http.sendPOSTRequest(\r\n      this.env.getEndPoint() + 'getFloorplanDetails',\r\n      JSON.stringify({ quote_id: quoteId })\r\n    );\r\n  }\r\n\r\n  createFloorPlan(obj: any): Observable<any> {\r\n    return this.http.sendPOSTRequest(\r\n      this.env.getEndPoint() + 'addFloorPlan',\r\n      JSON.stringify(obj)\r\n    );\r\n  }\r\n\r\n  removeFloorPlanFromQuote(\r\n    quoteId: number,\r\n    floorPlanId: number\r\n  ): Observable<any> {\r\n    return this.http.sendPOSTRequest(\r\n      this.env.getEndPoint() + 'removeFloorPlan',\r\n      JSON.stringify({ quote_id: quoteId, floorplan_id: floorPlanId })\r\n    );\r\n  }\r\n  getUnits(obj: any): Observable<any> {\r\n    return this.http.sendPOSTRequest(\r\n      this.env.getEndPoint() + 'getFloorPlan/Quote/WithUnits',\r\n      JSON.stringify(obj)\r\n    );\r\n  }\r\n\r\n  addOptionalUnits(obj: any): Observable<any> {\r\n    return this.http.sendPOSTRequest(\r\n      this.env.getEndPoint() + 'addUnit/optional/floorplan',\r\n      JSON.stringify(obj)\r\n    );\r\n  }\r\n  addMBQuote(obj: any) {\r\n    return this.http.sendPOSTRequest(\r\n      this.env.getEndPoint() + 'add/moodboard/quote',\r\n      JSON.stringify(obj)\r\n    );\r\n  }\r\n  addProductQuote(obj: any) {\r\n    return this.http.sendPOSTRequest(\r\n      this.env.getEndPoint() + 'put/product/commonQuoteForProductAndMoodboard',\r\n      JSON.stringify(obj)\r\n    );\r\n  }\r\n  getFpu(obj: any) {\r\n    return this.http.sendPOSTRequest(\r\n      this.env.getEndPoint() + 'add/moodboard/quote',\r\n      JSON.stringify(obj)\r\n    );\r\n  }\r\n  getFpus(obj: any) {\r\n    return this.http.sendPOSTRequest(\r\n      this.env.getEndPoint() + 'getFloorPlanUnits',\r\n      JSON.stringify(obj)\r\n    );\r\n  }\r\n  getFpuWithoutFP(obj: any) {\r\n    return this.http.sendPOSTRequest(\r\n      this.env.getEndPoint() + 'getUnitsWithoutDefaultUnit',\r\n      JSON.stringify(obj)\r\n    );\r\n  }\r\n  addFPMB(obj: any) {\r\n    return this.http.sendPOSTRequest(\r\n      this.env.getEndPoint() + 'add/floorplan/moodboard',\r\n      JSON.stringify(obj)\r\n    );\r\n  }\r\n  addFPUMB(obj: any) {\r\n    return this.http.sendPOSTRequest(\r\n      this.env.getEndPoint() + 'add/moodboard/all/units',\r\n      JSON.stringify(obj)\r\n    );\r\n  }\r\n  addFPQuote(obj: any) {\r\n    return this.http.sendPOSTRequest(\r\n      this.env.getEndPoint() + 'addProduct/Quote/FloorplanUnits',\r\n      JSON.stringify(obj)\r\n    );\r\n  }\r\n\r\n  addFPUQuote(obj: any) {\r\n    return this.http.sendPOSTRequest(\r\n      this.env.getEndPoint() + 'addProduct/Quote/AllUnits',\r\n      JSON.stringify(obj)\r\n    );\r\n  }\r\n\r\n  addQuoteMoodboard(obj: any) {\r\n    return this.http.sendPOSTRequest(\r\n      this.env.getEndPoint() + 'add/defaultunit/moodboard',\r\n      JSON.stringify(obj)\r\n    );\r\n  }\r\n\r\n  removeUnitFromFp(\r\n    quoteId: number,\r\n    unitName: string,\r\n    unitId: string\r\n  ): Observable<any> {\r\n    return this.http.sendPOSTRequest(\r\n      this.env.getEndPoint() + 'removeUnit',\r\n      JSON.stringify({ quote_id: quoteId, unit: unitName, sgid: unitId })\r\n    );\r\n  }\r\n\r\n  updateFloorPlanUnitProduct(obj: any): Observable<any> {\r\n    return this.http.sendPOSTRequest(\r\n      this.env.getEndPoint() + 'update/floorplan/unit/products',\r\n      JSON.stringify(obj)\r\n    );\r\n  }\r\n}\r\n","import { identifierModuleUrl } from '@angular/compiler';\r\nimport { Component, Inject, Input, OnInit } from '@angular/core';\r\nimport {\r\n  MatDialog,\r\n  MatDialogRef,\r\n  MAT_DIALOG_DATA,\r\n} from '@angular/material/dialog';\r\nimport { ToasterService, UserService } from 'projects/core/src/public-api';\r\nimport { QuoteService } from '../../../quote.service';\r\nimport { QuoteHeaderService } from '../quote-header/quote-header.service';\r\n\r\n@Component({\r\n  selector: 'lib-moodboard',\r\n  templateUrl: './moodboard.component.html',\r\n  styleUrls: ['./moodboard.component.scss'],\r\n})\r\nexport class MoodboardComponent implements OnInit {\r\n  @Input() fpId = '';\r\n  @Input() quoteId = '';\r\n  @Input() unit_id = '';\r\n  mbList: any = [];\r\n  selectedFpid: any = '';\r\n  selectedMBId = '';\r\n  isSelectedAll: any = true;\r\n  fpuList: any = [];\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public dialogData: any,\r\n    public _dialogRef: MatDialogRef<MoodboardComponent>,\r\n    private _quoteService: QuoteService,\r\n    private _toaster: ToasterService,\r\n    private _quoteHeaderService: QuoteHeaderService\r\n  ) {\r\n    this.fpId = dialogData?.fpId ?? '';\r\n    this.quoteId = dialogData?.quoteId ?? '';\r\n    this.unit_id = dialogData?.unit_id ?? '';\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getMoodboardList();\r\n  }\r\n  getMoodboardList() {\r\n    this._quoteHeaderService.getMoodBoardByUser().subscribe(\r\n      (resp: any) => {\r\n        this.mbList = resp.result;\r\n      },\r\n      (error) => {\r\n        this.mbList = [];\r\n        this._toaster.error('Something went wrong!');\r\n      }\r\n    );\r\n  }\r\n  selectUnitsForPlans(unit: any) {\r\n    if (unit.isActive) {\r\n      let checker = 0;\r\n      this.fpuList.forEach((elem: any) => {\r\n        if (elem.isActive) {\r\n          checker++;\r\n        }\r\n      });\r\n      if (checker > 1) {\r\n        unit.isActive = false;\r\n      } else {\r\n      }\r\n    } else {\r\n      unit.isActive = true;\r\n    }\r\n  }\r\n  isAllUnit(bool: any) {\r\n    if (bool) {\r\n      this.isSelectedAll = true;\r\n      this.fpuList.forEach((elem: any) => {\r\n        elem.isActive = true;\r\n      });\r\n    } else {\r\n      this.isSelectedAll = false;\r\n      this.fpuList.forEach((elem: any) => {\r\n        elem.isActive = false;\r\n      });\r\n    }\r\n  }\r\n  getFPU(ev: any) {\r\n    this.selectedMBId = ev.target.value;\r\n    if (this.unit_id) return;\r\n    \r\n    let obj = {\r\n      floorplan_id: this.fpId,\r\n      quote_id: this.quoteId,\r\n      mid: ev.target.value,\r\n    };\r\n    this._quoteService.getFpus(obj).subscribe(\r\n      (resp: any) => {\r\n        this.fpuList = resp.result;\r\n        this.isAllUnit(1);\r\n      },\r\n      (error) => {\r\n        this.fpuList = [];\r\n        this._toaster.error('Something went wrong!');\r\n      }\r\n    );\r\n  }\r\n  add() {\r\n    if (\r\n      !this.unit_id &&\r\n      this.fpuList?.filter((x: any) => x.isActive)?.length <= 0\r\n    ) {\r\n      this._toaster.warning('Select at-least one unit');\r\n      return;\r\n    }\r\n    let obj = {\r\n      quote_id: this.quoteId,\r\n      moodboard_id: this.selectedMBId,\r\n      floorplan_id: this.fpId,\r\n      units: this.unit_id\r\n        ? [this.unit_id]\r\n        : this.fpuList.filter((x: any) => x.isActive).map((x: any) => x.sgid),\r\n    };\r\n\r\n    this._quoteService.addFPMB(obj).subscribe(\r\n      (resp: any) => {\r\n        if (resp.statusCode == 200) {\r\n          this._toaster.success(resp.message);\r\n          this._dialogRef.close(1);\r\n        } else {\r\n          this._toaster.success(resp.message);\r\n          this._dialogRef.close(0);\r\n        }\r\n      },\r\n      (error) => {\r\n        this._toaster.success(error.message);\r\n      }\r\n    );\r\n  }\r\n}\r\n","<div\r\n  fxLayout=\"row\"\r\n  style=\"width: 100%; cursor: pointer\"\r\n  fxLayoutAlign=\"space-between start\"\r\n>\r\n<span></span>\r\n<i class=\"fa fa-times\" mat-dialog-close aria-hidden=\"true\"></i>\r\n</div>\r\n<div style=\"margin-bottom: 1rem\"  mat-dialog-content>\r\n    <div   fxLayout=\"row\"\r\n      style=\"width: 98%; background: #F4F4F4;padding: 22px; margin: 2%;\"\r\n      fxLayoutAlign=\"space-between start\"\r\n    >\r\n        <div   fxLayout=\"column\" \r\n        style=\"width: 100%;\"\r\n        fxLayoutAlign=\"space-between start\"\r\n        >  \r\n            <span class=\"titeltxt\"> Add a moodboard</span>   \r\n            <span class=\"txt\"> Select a Moodboard to be added to this quote. </span> \r\n            <select style=\"width: 60%; padding: 5px; \" (change)=\"getFPU($event)\">\r\n                <option [value]=''>Choose existing moodboard</option>\r\n                <option *ngFor=\"let mb of mbList\" [value]=\"mb.id\">\r\n                  {{ mb.boardname }}\r\n                </option>\r\n              </select>  \r\n        </div>\r\n\r\n        <button mat-flat-button color=\"accent\" (click)=\"add()\" class=\"btn-txt\"> ADD </button>\r\n    </div>  \r\n    <div fxLayout=\"row\" style=\"padding: 0px 20px;\" *ngIf=\"!unit_id\">\r\n        \r\n        <label class=\"form-check-label\" style=\"padding: 10px;\"> \r\n          <input type=\"radio\" class=\"form-check-input\" (click)='isAllUnit(1)' [checked]='true' name=\"optradio\">All\r\n          Units\r\n        </label>\r\n        <label style=\"padding: 10px;\" class=\"form-check-label\">\r\n          <input type=\"radio\" class=\"form-check-input\" (click)='isAllUnit(0)' name=\"optradio\">Selected Unit\r\n        </label>\r\n      </div>\r\n      <div fxLayout=\"row wrap\"\r\n      style=\"width: 98%; background: #F4F4F4; margin: 2%;\"\r\n      fxLayoutAlign=\"space-between start\"\r\n      class=\"nofptxt d-flex  justify-content-center p-2 my-3\"\r\n      >\r\n    <div *ngFor='let unit of fpuList' [ngClass]=\"{'allow-click': isSelectedAll ? true : false}\"\r\n    (click)='selectUnitsForPlans(unit)' class=\"unit-box  add-unit-mb\">\r\n      <div>{{unit.unit}}</div> \r\n      <div>unit</div>\r\n    <span aria-hidden=\"true\" [ngClass]=\"{'fa-check':(unit.isActive) ? true : false}\"\r\n      class=\"px-2 pb-1 cross-close fa \" style=\"padding: 4px; color: green;\"></span></div>\r\n    </div>\r\n    \r\n    \r\n</div>\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport {\r\n  MatDialog,\r\n  MatDialogRef,\r\n  MAT_DIALOG_DATA,\r\n} from '@angular/material/dialog';\r\nimport { ToasterService, UserService } from 'projects/core/src/public-api';\r\nimport { QuoteService } from '../../../quote.service';\r\nimport { AddFPUComponent } from '../add-fpu/add-fpu.component';\r\nimport { AddProductService } from '../addproduct/add-product.service';\r\nimport { SelectFpComponent } from '../select-fp/select-fp.component';\r\n\r\n@Component({\r\n  selector: 'lib-select-fpu',\r\n  templateUrl: './select-fpu.component.html',\r\n  styleUrls: ['./select-fpu.component.scss'],\r\n})\r\nexport class SelectFpuComponent implements OnInit {\r\n  selectedFpid: any = '';\r\n  isSelectedAll: any = true;\r\n  fpuList: any = [];\r\n\r\n  constructor(\r\n    private _dialog: MatDialog,\r\n    @Inject(MAT_DIALOG_DATA) public dialogData: any,\r\n    private _user: UserService,\r\n    private _quoteService: QuoteService,\r\n    private _toaster: ToasterService,\r\n    private _dialogRef: MatDialogRef<SelectFpComponent>,\r\n    private _addProductService: AddProductService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    let obj = {\r\n      quote_id: this.dialogData.qid,\r\n    };\r\n    this._quoteService.getFpuWithoutFP(obj).subscribe((resp: any) => {\r\n      if (resp.statusCode == 200) {\r\n        this.fpuList = resp.result;\r\n        this.fpuList.forEach((elem: any, index: any) => {\r\n          elem.isActive = true;\r\n        });\r\n        // this._toaster.success(resp.message);\r\n        // this._dialogRef.close(1);\r\n      } else {\r\n        // this._toaster.success(resp.message);\r\n        // this._dialogRef.close(0);\r\n      }\r\n    });\r\n  }\r\n  selectUnitsForPlans(unit: any) {\r\n    if (unit.isActive) {\r\n      let checker = 0;\r\n      this.fpuList.forEach((elem: any) => {\r\n        if (elem.isActive) {\r\n          checker++;\r\n        }\r\n      });\r\n      if (checker > 1) {\r\n        unit.isActive = false;\r\n      } else {\r\n      }\r\n    } else {\r\n      unit.isActive = true;\r\n    }\r\n  }\r\n  isAllUnit(bool: any) {\r\n    if (bool) {\r\n      this.isSelectedAll = true;\r\n      this.fpuList.forEach((elem: any) => {\r\n        elem.isActive = true;\r\n      });\r\n    } else {\r\n      this.isSelectedAll = false;\r\n    }\r\n  }\r\n  onCancel() {\r\n    this._dialogRef.close(0);\r\n  }\r\n  onSubmit() {\r\n    let unitList: any = [];\r\n    if (this.isSelectedAll == true) {\r\n      this.fpuList.forEach((element: any) => {\r\n        unitList.push(element.sgid);\r\n      });\r\n    } else {\r\n      this.fpuList.forEach((element: any) => {\r\n        if (element.isActive == false) unitList.push(element.sgid);\r\n      });\r\n    }\r\n    if (this.dialogData.product_id) {\r\n      let obj = {\r\n        quote_id: this.dialogData.qid,\r\n        user_id: this._user.getUser().getId(),\r\n        units: unitList,\r\n        product_id: this.dialogData.product_id,\r\n        sku: this.dialogData.sku,\r\n        quantity: this.dialogData.quantity,\r\n        button_type: this.dialogData.button_type,\r\n        month: this.dialogData.month,\r\n        warehouse_id: this.dialogData.warehouse_id,\r\n        source: this.dialogData.source,\r\n      };\r\n\r\n      this._quoteService.addFPUQuote(obj).subscribe((resp: any) => {\r\n        if (resp.statusCode == 200) {\r\n          this._toaster.success(resp.result);\r\n          this._dialogRef.close(1);\r\n        } else {\r\n          this._toaster.success(resp.result);\r\n          this._dialogRef.close(0);\r\n        }\r\n      });\r\n    } else {\r\n      let obj = {\r\n        quote_id: this.dialogData.qid,\r\n        moodboard_id: this.dialogData.mid,\r\n        user_id: this._user.getUser().getId(),\r\n        units: unitList,\r\n        source: this.dialogData.source,\r\n      };\r\n\r\n      this._quoteService.addFPUMB(obj).subscribe((resp: any) => {\r\n        if (resp.statusCode == 200) {\r\n          this._toaster.success(resp.result);\r\n          this._dialogRef.close({ event: 'success' });\r\n        } else {\r\n          this._toaster.success(resp.result);\r\n          this._dialogRef.close(0);\r\n        }\r\n      });\r\n    }\r\n  }\r\n  onCreateNewFPU() {\r\n    this._dialog\r\n      .open(AddFPUComponent, {\r\n        height: '70%',\r\n        width: '70%',\r\n        data: {\r\n          isDialog: true,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((data) => {\r\n        console.log(data);\r\n      });\r\n  }\r\n}\r\n","<div fxLayout=\"row\" style=\"width: 100%;cursor: pointer;\" fxLayoutAlign=\"space-between start\" >\r\n    <div style=\"margin-bottom: 2rem\"> Add/Select Unit(s) </div>\r\n    <i class=\"fa fa-times\" mat-dialog-close aria-hidden=\"true\"></i>\r\n</div>\r\n<div style=\"margin-bottom: 2rem\" mat-dialog-content>\r\n    <div   fxLayout=\"column\" style=\"width: 100%; \" fxLayoutAlign=\"space-between start\" >\r\n        <div   fxLayout=\"row\"\r\n        style=\"width: 100%; margin: 2%; \"\r\n        fxLayoutAlign=\"center\"\r\n        class=\"txt\"\r\n      >\r\n      <a mat-button style=\"padding: 0px 10px 0px 9px; margin: -4px -5px -5px 0px;\" (click)=\"onCreateNewFPU()\" class=\"add\">\r\n        <img src=\"assets/quote/images/SVG-Icons-06.svg\">\r\n      </a>\r\n      <span style=\"padding: 8px;\">Add moodboard to existing unit(s)or create new unit(s)</span>\r\n  \r\n      \r\n    </div>\r\n    <div fxLayout=\"row\">\r\n        <label  class=\"form-check-label\" style=\"padding: 10px;\">Assign this Moodboard to:\r\n            </label>\r\n        <label class=\"form-check-label\" style=\"padding: 10px;\"> \r\n          <input type=\"radio\" class=\"form-check-input\" (click)='isAllUnit(1)' [checked]='true' name=\"optradio\">All\r\n          Units\r\n        </label>\r\n        <label style=\"padding: 10px;\" class=\"form-check-label\">\r\n          <input type=\"radio\" class=\"form-check-input\" (click)='isAllUnit(0)' name=\"optradio\">Selected Unit\r\n        </label>\r\n      </div>\r\n      <div fxLayout=\"row wrap\"\r\n      style=\"width: 98%; background: #F4F4F4; margin: 2%;\"\r\n      fxLayoutAlign=\"space-between start\"\r\n      class=\"nofptxt d-flex  justify-content-center p-2 my-3\"\r\n      >\r\n    <div *ngFor='let unit of fpuList' [ngClass]=\"{'allow-click': isSelectedAll ? true : false}\"\r\n    (click)='selectUnitsForPlans(unit)' class=\"unit-box  add-unit-mb\">\r\n      <div>{{unit.unit}}</div> \r\n      <div>unit</div>\r\n    <span aria-hidden=\"true\" [ngClass]=\"{'fa-check':(unit.isActive) ? true : false}\"\r\n      class=\"px-2 pb-1 cross-close fa \" style=\"padding: 4px; color: green;\"></span></div>\r\n    </div>\r\n    </div>\r\n</div>  \r\n<div mat-dialog-actions fxLayoutAlign=\"center\">\r\n    <button (click)=\"onSubmit()\" class=\"btn-add\" mat-button color=\"accent\">ADD</button>\r\n    <button mat-button (click)=\"onCancel();\" class=\"btn-cancel\"color=\"primary\">CANCEL</button>\r\n  </div>\r\n  ","import { Injectable } from '@angular/core';\r\nimport {\r\n  EnvironmentService,\r\n  HttpService,\r\n  ToasterService,\r\n} from 'projects/core/src/public-api';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class FloorPlanDetailsService {\r\n  constructor(\r\n    private _http: HttpService,\r\n    private _env: EnvironmentService,\r\n    private _toaster: ToasterService\r\n  ) {}\r\n\r\n  getMoodBoards(quoteId: string, fpId: string): Observable<any> {\r\n    return this._http.sendGETRequest(\r\n      this._env.getEndPoint() +\r\n        'load/floorplan/moodboards?quote_id=' +\r\n        quoteId +\r\n        '&floorplan_id=' +\r\n        fpId\r\n    );\r\n  }\r\n\r\n  getUnitMoodBoards(quoteId: string, fpId: string, unitID: any): Observable<any> {\r\n    const data = {sgid: unitID};\r\n    return this._http.sendPOSTRequest(\r\n      this._env.getEndPoint() +\r\n        'getUnitMoodboards', JSON.stringify(data)\r\n    );\r\n  }\r\n\r\n  getFloorPlanUnits(quoteId: string, fpId: string) {\r\n    return this._http.sendGETRequest(\r\n      this._env.getEndPoint() +\r\n        'getFloorPlanUnits?quote_id=' +\r\n        quoteId +\r\n        '&floorplan_id=' +\r\n        fpId\r\n    );\r\n  }\r\n\r\n  getFPSummary(quoteId: string, fpId: string, unitId: string): Observable<any> {\r\n    return this._http.sendPOSTRequest(\r\n      this._env.getEndPoint() + 'load/floorplan/unit/products',\r\n      JSON.stringify({ unit_id: unitId, floorplan_id: fpId, quote_id: quoteId })\r\n    );\r\n  }\r\n\r\n  getFPList(id: any): Observable<any> {\r\n    return this._http.sendPOSTRequest(\r\n      this._env.getEndPoint() + 'getFloorplanDetails',\r\n      JSON.stringify({quote_id : id})\r\n    );\r\n  }\r\n\r\n  getFloorPlanDetails(quoteId: string, fpId: string): Observable<any> {\r\n    return this._http.sendPOSTRequest(\r\n      this._env.getEndPoint() + 'getFloorplanDetails',\r\n      JSON.stringify({ quote_id: quoteId, floorplan_id: fpId })\r\n    );\r\n  }\r\n\r\n  addFloorPlanUnit(unit: any, floorplan_id: any, quote_id: any, sgid: any) {\r\n    const data = {unit, floorplan_id, quote_id, sgid};\r\n    return this._http.sendPOSTRequest(\r\n      this._env.getEndPoint() + 'addUnitFloorPlan',\r\n      JSON.stringify(data)\r\n    );\r\n  }\r\n\r\n  removeUnitFromFp(\r\n    quoteId: string,\r\n    unitName: string,\r\n    unitId: string\r\n  ): Observable<any> {\r\n    return this._http.sendPOSTRequest(\r\n      this._env.getEndPoint() + 'removeUnit',\r\n      JSON.stringify({ quote_id: quoteId, unit: unitName, sgid: unitId })\r\n    );\r\n  }\r\n\r\n  removeMoodboardFromFP(\r\n    quoteId: string,\r\n    fpId: string,\r\n    mdId: string\r\n  ): Observable<any> {\r\n    return this._http.sendPOSTRequest(\r\n      this._env.getEndPoint() + 'remove/floorplan/moodboard',\r\n      JSON.stringify({\r\n        quote_id: quoteId,\r\n        moodboard_id: mdId,\r\n        floorplan_id: fpId,\r\n      })\r\n    );\r\n  }\r\n  removeMoodboardFromFPUnits(quoteId: string, fpId: string, mdId: string, unit: string\r\n  ): Observable<any> {\r\n    return this._http.sendPOSTRequest(\r\n      this._env.getEndPoint() + 'remove/floorplan/moodboard',\r\n      JSON.stringify({\r\n        quote_id: quoteId,\r\n        moodboard_id: mdId,\r\n        floorplan_id: fpId,\r\n        unit_id: unit\r\n      })\r\n    );\r\n  }\r\n\r\n  getMoodboardWithUnits(quoteId: string, fpId: string): Observable<any> {\r\n    return this._http.sendPOSTRequest(\r\n      this._env.getEndPoint() + 'quote/moodboardInFloorplan/units',\r\n      JSON.stringify({ quote_id: quoteId, floorplan_id: fpId })\r\n    );\r\n  }\r\n\r\n  changeUnitName(\r\n    quoteId: string,\r\n    unitId: string,\r\n    unitName: string\r\n  ): Observable<any> {\r\n    return this._http.sendPOSTRequest(\r\n      this._env.getEndPoint() + 'update/UnitName',\r\n      JSON.stringify({\r\n        unit_id: unitId,\r\n        quote_id: quoteId,\r\n        unit_name: unitName,\r\n      })\r\n    );\r\n  }\r\n\r\n  addUnitsToFp(quoteId: string, fpId: string, units: string): Observable<any> {\r\n    return this._http.sendPOSTRequest(\r\n      this._env.getEndPoint() + 'addFloorPlanUnits',\r\n      JSON.stringify({ quote_id: quoteId, unit: units, floorplan_id: fpId })\r\n    );\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n@Component({\r\n  selector: 'lib-quote',\r\n  templateUrl: './quote.component.html',\r\n  styleUrls: ['./quote.component.scss'],\r\n})\r\nexport class QuoteComponent implements OnInit {\r\n  constructor() {}\r\n\r\n  ngOnInit() {}\r\n}\r\n","<router-outlet></router-outlet>","import { Component, OnInit } from '@angular/core';\r\nimport { ICellRendererAngularComp } from 'ag-grid-angular';\r\nimport { ICellRendererParams } from 'ag-grid-community';\r\nimport { ComputationService } from 'projects/core/src/public-api';\r\n\r\n@Component({\r\n  selector: 'lib-total-cell-renderer',\r\n  templateUrl: './total-cell-renderer.component.html',\r\n  styleUrls: ['./total-cell-renderer.component.scss'],\r\n})\r\nexport class TotalCellRendererComponent\r\n  implements OnInit, ICellRendererAngularComp\r\n{\r\n  isDelete = false;\r\n  value: number = 0;\r\n  constructor(private _computationService: ComputationService) {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  agInit(params: ICellRendererParams): void {\r\n    let isExtraRow = params?.data?.isExtraRow;\r\n    this.isDelete = params?.data?.isDeleteOption;\r\n    if (isExtraRow) {\r\n      let keys = params.data.sgid;\r\n      switch (keys) {\r\n        case 'SUB TOTAL ($)':\r\n          this.value = Math.round(this._computationService.getSubTotal(params));\r\n          break;\r\n        case 'TOTAL ($)':\r\n          let subTotal = this._computationService.getSubTotal(params);\r\n          let deliveryFee = this.getDeliveryFee(params);\r\n          let taxPercent = this.getTaxPercentage(params);\r\n          let taxAmount = this._computationService.getTaxAmount(\r\n            subTotal,\r\n            deliveryFee,\r\n            taxPercent\r\n          );\r\n          this.value = this._computationService.getTotalAmount(\r\n            subTotal,\r\n            deliveryFee,\r\n            taxAmount\r\n          );\r\n          break;\r\n        default:\r\n          if (keys.includes('TAXES')) {\r\n            let subTotal = this._computationService.getSubTotal(params);\r\n            let deliveryFee = this.getDeliveryFee(params);\r\n            let taxPercent = this.getTaxPercentage(params);\r\n            this.value = this._computationService.getTaxAmount(\r\n              subTotal,\r\n              deliveryFee,\r\n              taxPercent\r\n            );\r\n          } else {\r\n            this.value = params.value;\r\n          }\r\n          break;\r\n      }\r\n    } else {\r\n      let price = this.getItemPrice(params);\r\n      let discount = parseFloat(params.data.discount ?? 0);\r\n      let quantity = parseFloat(params.data.is_qty ?? 0);\r\n      this.value = this._computationService.getProductTotalAmount(\r\n        price,\r\n        discount,\r\n        quantity\r\n      );\r\n    }\r\n    params.node.setDataValue(params.column?.getId() as string, this.value);\r\n    // params.api.redrawRows();\r\n  }\r\n\r\n  getDeliveryFee(params: ICellRendererParams) {\r\n    return parseFloat(\r\n      params.api.getValue('is_total', params.api.getPinnedBottomRow(1))\r\n    );\r\n  }\r\n\r\n  getTaxPercentage(params: ICellRendererParams) {\r\n    return parseFloat(params.api.getPinnedBottomRow(2).data.taxPercent ?? 1);\r\n  }\r\n  refresh(params: ICellRendererParams): boolean {\r\n    this.agInit(params);\r\n    return true;\r\n  }\r\n\r\n  getItemPrice(params: ICellRendererParams): number {\r\n    let price =\r\n      params.data.button_type === 0\r\n        ? params.data.price ?? 0\r\n        : params.data.buy_price ?? 0;\r\n    return parseFloat(price);\r\n  }\r\n}\r\n","<span fxLayout=\"row\" fxLayoutGap=\".5rem\">\r\n  <span> {{ value | number: \"1.2-2\" }}</span>\r\n  <!-- <lib-delete-item *ngIf=\"isDelete\"></lib-delete-item> -->\r\n</span>\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport {  MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { RouterModule } from '@angular/router';\r\nimport { AgGridModule } from 'ag-grid-angular';\r\nimport { CoreModule } from 'projects/core/src/public-api';\r\nimport { QuoteCommonModule } from './common/quote-common.module';\r\nimport { QuoteCreateComponent } from './components/quote-create/quote-create.component';\r\nimport { QuoteListComponent } from './components/quote-list/quote-list.component';\r\nimport { QuoteComponent } from './components/quote/quote.component';\r\nimport {MatRadioModule} from '@angular/material/radio';\r\nimport { quoteRoute } from './quote-routing';\r\nimport { QuoteDetailComponent } from './components/quote-detail/quote-detail.component';\r\nimport { FloorPlanUnitComponent } from './components/floor-plan-unit/floor-plan-unit.component';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\n\r\n@NgModule({\r\n  declarations: [QuoteListComponent, QuoteComponent,QuoteCreateComponent, FloorPlanUnitComponent, QuoteDetailComponent],\r\n  imports: [\r\n    CommonModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    FlexLayoutModule,\r\n    QuoteCommonModule,\r\n    MatDialogModule,\r\n    CoreModule,\r\n    MatFormFieldModule,\r\n    MatSelectModule,\r\n    AgGridModule,\r\n    MatRadioModule,\r\n    RouterModule.forChild(quoteRoute),\r\n    MatDividerModule,\r\n    MatInputModule,\r\n    FormsModule,\r\n    MatTabsModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  exports: [],\r\n})\r\nexport class QuoteModule {}\r\n"],"sourceRoot":"webpack:///"}